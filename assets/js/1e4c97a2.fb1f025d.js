"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1643],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>m});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),p=r,m=u["".concat(l,".").concat(p)]||u[p]||g[p]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},19365:(e,t,n)=>{n.d(t,{A:()=>i});var a=n(96540),r=n(20053);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,i),hidden:n},t)}},11470:(e,t,n)=>{n.d(t,{A:()=>N});var a=n(9668),r=n(96540),o=n(20053),i=n(23104),s=n(56347),l=n(57485),d=n(31682),c=n(89466);function u(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function g(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,d.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.W6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=g(e),[i,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[l,d]=m({queryString:n,groupId:a}),[u,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,c.Dv)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),y=(()=>{const e=l??u;return p({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{y&&s(y)}),[y]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),d(e),h(e)}),[d,h,o]),tabValues:o}}var y=n(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:n,selectedValue:s,selectValue:l,tabValues:d}=e;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.a_)(),g=e=>{const t=e.currentTarget,n=c.indexOf(t),a=d[n].value;a!==s&&(u(t),l(a))},p=e=>{let t=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},t)},d.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>c.push(e),onKeyDown:p,onClick:g},i,{className:(0,o.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":s===t})}),n??t)})))}function w(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function b(e){const t=h(e);return r.createElement("div",{className:(0,o.A)("tabs-container",f.tabList)},r.createElement(v,(0,a.A)({},e,t)),r.createElement(w,(0,a.A)({},e,t)))}function N(e){const t=(0,y.A)();return r.createElement(b,(0,a.A)({key:String(t)},e))}},98941:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>d,toc:()=>u});var a=n(9668),r=(n(96540),n(15680)),o=n(11470),i=n(19365);const s={description:"Hardware and Interfaces Usage for J501 carrier board",title:"Interfaces Usage",tags:["J501","Jetson","Interface"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/j501_carrier_board_interfaces_usage",last_update:{date:"08/20/2024",author:"Youjiang"}},l=void 0,d={unversionedId:"Edge/NVIDIA_Jetson/Carrier_Boards/J501/Hardware_Interfaces_Usage",id:"Edge/NVIDIA_Jetson/Carrier_Boards/J501/Hardware_Interfaces_Usage",title:"Interfaces Usage",description:"Hardware and Interfaces Usage for J501 carrier board",source:"@site/docs/Edge/NVIDIA_Jetson/Carrier_Boards/J501/Hardware_Interfaces_Usage.md",sourceDirName:"Edge/NVIDIA_Jetson/Carrier_Boards/J501",slug:"/j501_carrier_board_interfaces_usage",permalink:"/j501_carrier_board_interfaces_usage",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Edge/NVIDIA_Jetson/Carrier_Boards/J501/Hardware_Interfaces_Usage.md",tags:[{label:"J501",permalink:"/tags/j-501"},{label:"Jetson",permalink:"/tags/jetson"},{label:"Interface",permalink:"/tags/interface"}],version:"current",lastUpdatedBy:"Youjiang",lastUpdatedAt:1724112e3,formattedLastUpdatedAt:"Aug 20, 2024",frontMatter:{description:"Hardware and Interfaces Usage for J501 carrier board",title:"Interfaces Usage",tags:["J501","Jetson","Interface"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/j501_carrier_board_interfaces_usage",last_update:{date:"08/20/2024",author:"Youjiang"}},sidebar:"ProductSidebar",previous:{title:"Flash Jetpack",permalink:"/reserver_j501_getting_started"},next:{title:"A203 Carrier Board",permalink:"/reComputer_A203_Flash_System"}},c={},u=[{value:"GMSL Camera",id:"gmsl-camera",level:2},{value:"Compatible Cameras",id:"compatible-cameras",level:3},{value:"Hardware Connection",id:"hardware-connection",level:3},{value:"Usage Instruction",id:"usage-instruction",level:3},{value:"Gigabit Ethernet Connectors",id:"gigabit-ethernet-connectors",level:2},{value:"SATA Connectors",id:"sata-connectors",level:2},{value:"Usage Instruction",id:"usage-instruction-1",level:3},{value:"M.2 Key M",id:"m2-key-m",level:2},{value:"Supported SSD are as follows:",id:"supported-ssd-are-as-follows",level:3},{value:"Usage Instruction",id:"usage-instruction-2",level:3},{value:"M.2 Key E",id:"m2-key-e",level:2},{value:"Hardware Connection",id:"hardware-connection-1",level:3},{value:"Usage Instruction",id:"usage-instruction-3",level:3},{value:"M.2 Key B",id:"m2-key-b",level:2},{value:"Hardware Connection",id:"hardware-connection-2",level:3},{value:"Mini PCIe",id:"mini-pcie",level:2},{value:"4G Module",id:"4g-module",level:3},{value:"Hardware Connection",id:"hardware-connection-3",level:4},{value:"Usage Instruction",id:"usage-instruction-4",level:3},{value:"DI/DO/CAN",id:"didocan",level:2},{value:"Connection Overview for DI",id:"connection-overview-for-di",level:3},{value:"Usage Instruction for DI",id:"usage-instruction-for-di",level:3},{value:"Connection Overview for DO",id:"connection-overview-for-do",level:3},{value:"Usage Instruction for DO",id:"usage-instruction-for-do",level:3},{value:"CAN",id:"can",level:3},{value:"Connection Overview with USB to CAN Adapter",id:"connection-overview-with-usb-to-can-adapter",level:3},{value:"Usage Instruction with USB to CAN Adapter",id:"usage-instruction-with-usb-to-can-adapter",level:3},{value:"USB",id:"usb",level:2},{value:"Usage Instruction",id:"usage-instruction-5",level:3},{value:"RTC",id:"rtc",level:2},{value:"Connection Connection",id:"connection-connection",level:3},{value:"Usage Instruction",id:"usage-instruction-6",level:3},{value:"Fan",id:"fan",level:2},{value:"HDMI",id:"hdmi",level:2},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],g={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,a.A)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/j501.png"})),(0,r.yg)("p",null,"This wiki introduces the various different hardware and interfaces on the J501 Carrier Board and how to use them to expand your project ideas."),(0,r.yg)("h2",{id:"gmsl-camera"},"GMSL Camera"),(0,r.yg)("p",null,"We need to combine the J501 carrier board with the ",(0,r.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/reServer-Industrial-J501-GMSL-extension-board-p-5949.html"},"GMSL expansion board")," to activate the GMSL functionality. The J501 GMSL Extension Board is designed for connecting up to 8 GMSL cameras with reServer Industrial J501 carrier board, which is compatible with NVIDIA\xae Jetson AGX Orin\u2122. This extension board is using the deserializer 'MAX96724'."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/gmsl.png"})),(0,r.yg)("h3",{id:"compatible-cameras"},"Compatible Cameras"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://www.sensing-world.com/en/pd.jsp?recommendFromPid=0&id=23&fromMid=1544"},"[3MP] SG3S-ISX031C-GMSL2F"))),(0,r.yg)("h3",{id:"hardware-connection"},"Hardware Connection"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/gmsl_connectoin.png"})),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step1.")," Install copper cylinders to J501 carrier board."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step2.")," Connect the GMSL expansion board to the J501 carrier board and secure them using  screws."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step3.")," Connect the GMSL camera.")),(0,r.yg)("h3",{id:"usage-instruction"},"Usage Instruction"),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"Before enabling the GMSL functionality, please ensure that you have installed a JetPack version with the GMSL expansion board driver.")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step1.")," In the jetson device terminal, enter the following command to check if the connected camera is recognized correctly."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"ls /dev/video*\n")),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"500",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/ls_cam.png"})),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step2.")," Install the video interface configuration tools."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo apt install v4l-utils\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step3.")," Set the channel format for the serializer and deserializer."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"media-ctl -d /dev/media0 --set-v4l2 '\"ser_0_ch_0\":1[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"ser_1_ch_1\":1[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"ser_2_ch_2\":1[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"ser_3_ch_3\":1[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"ser_4_ch_0\":1[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"ser_5_ch_1\":1[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"ser_6_ch_2\":1[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"ser_7_ch_3\":1[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"des_0_ch_0\":0[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"des_0_ch_1\":0[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"des_0_ch_2\":0[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"des_0_ch_3\":0[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"des_1_ch_0\":0[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"des_1_ch_1\":0[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"des_1_ch_2\":0[fmt:YUYV8_1X16/1920x1536]'\nmedia-ctl -d /dev/media0 --set-v4l2 '\"des_1_ch_3\":0[fmt:YUYV8_1X16/1920x1536]'\n")),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"We need to set the channel format for the serializer and deserializer every time the device restarts.")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step4.")," We can use the following command to quickly start the camera and open a window to display the video stream."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"gst-launch-1.0 v4l2src device=/dev/video0  ! xvimagesink -ev \ngst-launch-1.0 v4l2src device=/dev/video1  ! xvimagesink -ev \ngst-launch-1.0 v4l2src device=/dev/video2  ! xvimagesink -ev \ngst-launch-1.0 v4l2src device=/dev/video3  ! xvimagesink -ev \ngst-launch-1.0 v4l2src device=/dev/video4  ! xvimagesink -ev \ngst-launch-1.0 v4l2src device=/dev/video5  ! xvimagesink -ev \ngst-launch-1.0 v4l2src device=/dev/video6  ! xvimagesink -ev \ngst-launch-1.0 v4l2src device=/dev/video7  ! xvimagesink -ev \n")),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/gmsl_result.png"})),(0,r.yg)("h2",{id:"gigabit-ethernet-connectors"},"Gigabit Ethernet Connectors"),(0,r.yg)("p",null,"There are 2 Ethernet ports on the J501."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"eth0: Standard Gigabit Ethernet port with 10/100/1000Mbps specification."),(0,r.yg)("li",{parentName:"ul"},"eth1: 10-Gigabit Ethernet port.")),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/internet.png"})),(0,r.yg)("p",null,"There are 2 LEDs (green and yellow) on each Ethernet port:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Green LED: ON only when connected to 1000M/10G network."),(0,r.yg)("li",{parentName:"ul"},"Yellow LED: Shows the network activity status.")),(0,r.yg)("h2",{id:"sata-connectors"},"SATA Connectors"),(0,r.yg)("p",null,'reServer J501 carrier board supports 2x SATA 2.5" HDD/SSD and comes with both SATA data and power connectors. You can connect to HDD/ SSD as follows:'),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/sata_connection.jpeg"})),(0,r.yg)("h3",{id:"usage-instruction-1"},"Usage Instruction"),(0,r.yg)("p",null,"After the Jetson device system boots up, you can verify the connected SATA drives by ",(0,r.yg)("inlineCode",{parentName:"p"},"lsblk"),"."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"500",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/lsblk.png"})),(0,r.yg)("h2",{id:"m2-key-m"},"M.2 Key M"),(0,r.yg)("p",null,"M.2 Key M is an interface designed for high-speed solid-state drives (SSDs), providing ultra-fast data transfer speeds, ideal for high-performance applications."),(0,r.yg)("h3",{id:"supported-ssd-are-as-follows"},"Supported SSD are as follows:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/M-2-2280-SSD-128GB-p-5332.html"},"128GB NVMe M.2 PCle Gen3x4 2280 Internal SSD")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/NVMe-M-2-2280-SSD-256GB-p-5333.html"},"256GB NVMe M.2 PCle Gen3x4 2280 Internal SSD")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/NVMe-M-2-2280-SSD-512GB-p-5334.html"},"512GB NVMe M.2 PCle Gen3x4 2280 Internal SSD")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/NVMe-M-2-2280-SSD-1TB-p-5767.html"},"1TB NVMe M.2 PCle Gen3x4 2280 Internal SSD"))),(0,r.yg)("h3",{id:"usage-instruction-2"},"Usage Instruction"),(0,r.yg)("p",null,"Open the terminal in Jetson device and enter the following command to test the SSD's read and write speed."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo dd if=/dev/zero of=tempfile bs=1M count=1024 conv=fdatasync\n")),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/test_nvme.png"})),(0,r.yg)("admonition",{type:"danger"},(0,r.yg)("p",{parentName:"admonition"},"Please run ",(0,r.yg)("inlineCode",{parentName:"p"},"sudo rm tempfile")," command to delete the cache files after the test is complete.")),(0,r.yg)("h2",{id:"m2-key-e"},"M.2 Key E"),(0,r.yg)("p",null,"The J501 carrier board features a M.2 Key E interface, through which you can expand the device's Bluetooth and Wi-Fi capabilities."),(0,r.yg)("p",null,"We recommend using the Intel Dual Band Wireless-Ac 8265 w/Bluetooth 8265.NGWMG module."),(0,r.yg)("h3",{id:"hardware-connection-1"},"Hardware Connection"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/wifi_connection.jpeg"})),(0,r.yg)("h3",{id:"usage-instruction-3"},"Usage Instruction"),(0,r.yg)("p",null,"After installing the Wi-Fi module and powering on the device, we can configure the device's Wi-Fi and Bluetooth settings."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-wifi-bluetooth-test.gif"})),(0,r.yg)("p",null,"Of course, we can also check the device's operating status using the following commands."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"ifconfig\n")),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/wifi_ifconfig.png"})),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"bluetoothctl\n")),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/bluetoothctl.png"})),(0,r.yg)("h2",{id:"m2-key-b"},"M.2 Key B"),(0,r.yg)("p",null,"The J501 carrier board comes with a M.2 Key B connector that supports 4G and 5G modules. Currently we have tested ",(0,r.yg)("strong",{parentName:"p"},"SIM8202G-M2 5G module"),". "),(0,r.yg)("h3",{id:"hardware-connection-2"},"Hardware Connection"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/5G_connection.png"})),(0,r.yg)("h2",{id:"mini-pcie"},"Mini PCIe"),(0,r.yg)("p",null,"J501 carrier board comes with a mini PCIe connector that supports 4G and LoRa modules. However, you can only connect either a 4G module or a LoRa module at once. Some of the 4G modules come embedded with GPS functionality. We will discuss this as well."),(0,r.yg)("h3",{id:"4g-module"},"4G Module"),(0,r.yg)("h4",{id:"hardware-connection-3"},"Hardware Connection"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/minipcie_4g.jpeg"})),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step1.")," Add a jumper between ",(0,r.yg)("strong",{parentName:"p"},"SIM_MUX_SEL")," and ",(0,r.yg)("strong",{parentName:"p"},"GND")," pins on the 20Pin Header.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step2.")," Slide in the 4G module to the mini PCIe slot and secure it with screws.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step3.")," Insert a 4G-enabled nano SIM card to the SIM card slot on the board."))),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"If you want to remove the SIM card, push the card in to hit the internal spring so that the SIM will come out of the slot")),(0,r.yg)("h3",{id:"usage-instruction-4"},"Usage Instruction"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step1.")," Install minicom:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\nsudo apt install minicom -y\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step2.")," Enter the serial console of the connected 4G module so that we can enter AT commands and interact with the 4G module:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo minicom -D /dev/ttyUSB2 -b 115200\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step3.")," Press Ctrl+A and then press E to turn on local echo."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step4."),' Enter the command "AT" and press enter. If you see the response as "OK", the 4G module is working properly.'),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/22.jpg"})),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step5."),' Enter the command "ATI" to check the module information.'),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/23.png"})),(0,r.yg)("h2",{id:"didocan"},"DI/DO/CAN"),(0,r.yg)("p",null,"J501 carrier board supports 4 digital input and 4 digital output channels, all of which are optically isolated to effectively protect the mainboard from voltage spikes or other electrical disturbances. There is also two CAN interfaces on this same connector which we will discuss later in this wiki."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"500",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/dido.jpeg"})),(0,r.yg)("table",null,(0,r.yg)("thead",null,(0,r.yg)("tr",null,(0,r.yg)("th",null,"Type"),(0,r.yg)("th",null,"Label Name"),(0,r.yg)("th",null,"Schematic Signal"),(0,r.yg)("th",null,"Module Pin Number"),(0,r.yg)("th",null,"BGA Number"),(0,r.yg)("th",null,"GPIO Number"),(0,r.yg)("th",null,"V/A Limits"))),(0,r.yg)("tbody",null,(0,r.yg)("tr",null,(0,r.yg)("td",{rowSpan:4},"Input"),(0,r.yg)("td",null,"DI1"),(0,r.yg)("td",null,"DI_12V_1/DI_1_GPIO17"),(0,r.yg)("td",null,"A54"),(0,r.yg)("td",null,"PP.04"),(0,r.yg)("td",null,"444"),(0,r.yg)("td",{rowSpan:4},"12V/ 20mA current in total")),(0,r.yg)("tr",null,(0,r.yg)("td",null,"DI2"),(0,r.yg)("td",null,"DI_12V_2/DI_2_GPIO18"),(0,r.yg)("td",null,"C55"),(0,r.yg)("td",null,"PQ.04"),(0,r.yg)("td",null,"452")),(0,r.yg)("tr",null,(0,r.yg)("td",null,"DI3"),(0,r.yg)("td",null,"DI_12V_3/DI_3_GPIO19"),(0,r.yg)("td",null,"K56"),(0,r.yg)("td",null,"PN.02"),(0,r.yg)("td",null,"434")),(0,r.yg)("tr",null,(0,r.yg)("td",null,"DI4"),(0,r.yg)("td",null,"DI_12V_4/DI_4_GPIO33"),(0,r.yg)("td",null,"C54"),(0,r.yg)("td",null,"PM.07"),(0,r.yg)("td",null,"431")),(0,r.yg)("tr",null,(0,r.yg)("td",{rowSpan:4},"Output"),(0,r.yg)("td",null,"DO1"),(0,r.yg)("td",null,"DO_40V_1/DI_1_GPIO"),(0,r.yg)("td",null,"E59"),(0,r.yg)("td",null,"PAA.04"),(0,r.yg)("td",null,"320"),(0,r.yg)("td",{rowSpan:4},"40V/40mA load per pin")),(0,r.yg)("tr",null,(0,r.yg)("td",null,"DO2"),(0,r.yg)("td",null,"DO_40V_2/DI_2_GPIO"),(0,r.yg)("td",null,"F59"),(0,r.yg)("td",null,"PAA.07"),(0,r.yg)("td",null,"323")),(0,r.yg)("tr",null,(0,r.yg)("td",null,"DO3"),(0,r.yg)("td",null,"DO_40V_3/DI_3_GPIO"),(0,r.yg)("td",null,"B62"),(0,r.yg)("td",null,"PBB.01"),(0,r.yg)("td",null,"325")),(0,r.yg)("tr",null,(0,r.yg)("td",null,"DO4"),(0,r.yg)("td",null,"DO_40V_4/DI_4_GPIO"),(0,r.yg)("td",null,"C61"),(0,r.yg)("td",null,"PBB.00"),(0,r.yg)("td",null,"324")))),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("ul",{parentName:"admonition"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"12V Digital Input, ground signal needs to be connected to ",(0,r.yg)("strong",{parentName:"p"},"GND_DI"),".")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Digital output, maximum withstand voltage 40V, ground signal needs to be connected to ",(0,r.yg)("strong",{parentName:"p"},"GND_DO"),".")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"CAN bus with standard differential signals, ground signal needs to be connected to ",(0,r.yg)("strong",{parentName:"p"},"GND_ISO"),".")))),(0,r.yg)("h3",{id:"connection-overview-for-di"},"Connection Overview for DI"),(0,r.yg)("p",null,"We can make the connection for DI by following the diagram below. It is better to add a resistor in series for the DI line. Here we have tested with a 4.7k\u03a9 resistor connected to the DI1 pin."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"500",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/dido_di.png"})),(0,r.yg)("h3",{id:"usage-instruction-for-di"},"Usage Instruction for DI"),(0,r.yg)("p",null,"We need to input a voltage of 12V on the DI line in order to get detected as an input."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step1.")," Make the connetions as shown above to DI1 pin and input 12V."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step2.")," Open the GPIO for DI1 as follows:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo su \ncd /sys/class/gpio\necho 444 > export \ncd PP.04\n")),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"We can refer the DI/DO Pin Assignment Table to find the GPIO number and BGA number. In the above example, for DI1 pin, GPIO number is 444 and BGA number is PP.04.")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step3.")," Execute the following to check the status:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cat value\n")),(0,r.yg)("p",null,"If it outputs 0, that means there is 12V input. If it outputs 1, that means there is no input voltage."),(0,r.yg)("h3",{id:"connection-overview-for-do"},"Connection Overview for DO"),(0,r.yg)("p",null,"We can make the connection for DO by following the diagram below. It is better to add a resistor in series for the DO line. Here we have tested with a 4.7k\u03a9 resistor."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"500",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/dido_do.png"})),(0,r.yg)("h3",{id:"usage-instruction-for-do"},"Usage Instruction for DO"),(0,r.yg)("p",null,"Here we need to connect a load as mentioned in the above diagram. The easiest way to test this would be to connect a multimeter if you have access to one, or else connect a load that requires less than 40V maximum voltage."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step1.")," Make the connetions as shown above to DO1 pin and input 40V as max."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step2.")," Open the GPIO for D01 as follows:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo su \ncd /sys/class/gpio\necho 320 > export \ncd PAA.04\necho out > direction\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step3.")," Execute the following to turn on the pin:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"echo 1 > value\n")),(0,r.yg)("p",null,"If the load is turned on or the multimeter outputs the voltage that you have input, the test it is functioning properly."),(0,r.yg)("h3",{id:"can"},"CAN"),(0,r.yg)("p",null,"J501 carrier board features two CAN interfaces that supports the CAN FD (Controller Area Network Flexible Data-Rate) protocol at 5Mbps. The CAN interface is isolated using capacitive isolation, which provides excellent EMI protection and ensures reliable communication in industrial and automation applications. A terminal resistor of 120\u03a9 has been installed by default and you can toggle this resistor ON and OFF using GPIO."),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"The CAN interface uses an isolated power supply, which means that the ground signal for external devices connected to the CAN interface should be connected to the ",(0,r.yg)("strong",{parentName:"p"},"GND_ISO")," pin.")),(0,r.yg)("h3",{id:"connection-overview-with-usb-to-can-adapter"},"Connection Overview with USB to CAN Adapter"),(0,r.yg)("p",null,"To test and interface with CAN bus, connect a USB to CAN adapter to the CAN connectors on the board as shown below:"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/dido_can.png"})),(0,r.yg)("p",null,"Here we have used ",(0,r.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/USB-CAN-Analyzer-p-2888.html"},"USB to CAN Analyzer Adapter")," with USB Cable available on our Bazaar."),(0,r.yg)("h3",{id:"usage-instruction-with-usb-to-can-adapter"},"Usage Instruction with USB to CAN Adapter"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step1.")," Download the driver for the USB to CAN adapter you are using from the manufacturer's website and install it. In our case, according to the adapter that we used, the drivers can be found ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeeedDocument/USB-CAN-Analyzer/tree/master/res/Driver/driver%20for%20USBCAN(CHS40)/windows-driver"},"here"),"."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step2.")," Some adapters also come with the necessary software for the PC in order to communicate with the CAN device. In our case, according to the adapter that we used, we have downloaded and installed the software which can be found ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/SeeedDocument/USB-CAN-Analyzer/tree/master/res/Program"},"here"),"."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step3.")," Open a terminal on the Jetson device and execute the following commands to configure and enable the CAN interface:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo modprobe mttcan\nsudo ip link set can0 type can bitrate 125000\nsudo ip link set can0 up\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step4.")," Type ifconfig on the terminal and you will see the CAN interface in enabled."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/can.png"})),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step5.")," Open the CAN software that you have installed before. In this case, we will open the software that we installed according to the CAN adapter that we are using."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/42.jpg"})),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step6.")," Connect the USB to CAN adapter to the PC and open ",(0,r.yg)("strong",{parentName:"p"},"Device Manager")," by searching it on windows search bar. Now you will see the connected adapter under ",(0,r.yg)("strong",{parentName:"p"},"Ports (COM & LPT)"),". Make a note of the serial port listed here. According to the below image, the serial port is ",(0,r.yg)("strong",{parentName:"p"},"COM9"),"."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/43.png"})),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step7.")," Open the CAN software, click ",(0,r.yg)("strong",{parentName:"p"},"Refresh")," next to ",(0,r.yg)("strong",{parentName:"p"},"COM")," section, click the drop-down-menu and select the serial port according to the connected adapter. Keep the ",(0,r.yg)("strong",{parentName:"p"},"COM bps")," at default and click ",(0,r.yg)("strong",{parentName:"p"},"Open"),"."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/44.jpg"})),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step8.")," Keep the ",(0,r.yg)("strong",{parentName:"p"},"Mode")," and ",(0,r.yg)("strong",{parentName:"p"},"CAN bps")," at default, change the ",(0,r.yg)("strong",{parentName:"p"},"Type")," to ",(0,r.yg)("strong",{parentName:"p"},"Standard frame")," and click ",(0,r.yg)("strong",{parentName:"p"},"Set and Start"),"."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/45.png"})),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step9.")," On reComputer Industrial, execute the following command to send a CAN signal to the PC:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"cansend can0 123#abcdabcd\n")),(0,r.yg)("p",null,"Now you will see the above signal received by the software as shown below"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/46.png"})),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step10.")," On reComputer Industrial, execute the following command to wait for receiving CAN signals from the PC:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"candump can0 &\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step11.")," On the CAN software, click ",(0,r.yg)("strong",{parentName:"p"},"Send a single frame"),":"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/47.png"})),(0,r.yg)("p",null,"Now you will see it received by reComputer Industrial as follows:"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/50.png"})),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"We can also refer to ",(0,r.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/reComputer_Industrial_J40_J30_Hardware_Interfaces_Usage/#connection-overview-with-reterminal-dm"},"here")," to establish communication between the J501 carrier board and the reTerminal DM via CAN.")),(0,r.yg)("h2",{id:"usb"},"USB"),(0,r.yg)("p",null,"The reServer J501 carrier board has a total of 5 USB ports: 3 USB 3.1 Type-A ports, 1 USB 3.1 Type-C port, and 1 USB 2.0 Type-C port for debugging."),(0,r.yg)("h3",{id:"usage-instruction-5"},"Usage Instruction"),(0,r.yg)("p",null,"We can enter ",(0,r.yg)("inlineCode",{parentName:"p"},"watch -n 1 lsusb -tv")," in the Jetson terminal to probe the USB ports. Once a USB device is connected, the detailed information about that port will be displayed here."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/usb_lsusb.png"})),(0,r.yg)("p",null,"Additionally, you can refer to ",(0,r.yg)("a",{parentName:"p",href:"#m2-key-m"},"M.2 Key M")," to test the read and write speed of USB storage devices."),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"Please note, before testing, use the ",(0,r.yg)("inlineCode",{parentName:"p"},"cd")," command to navigate to the folder where the USB storage device is mounted.")),(0,r.yg)("h2",{id:"rtc"},"RTC"),(0,r.yg)("p",null,"The J501 carrier board features RTC interfaces, providing accurate timekeeping even when the system is powered off."),(0,r.yg)("h3",{id:"connection-connection"},"Connection Connection"),(0,r.yg)("p",null,"J501 carrier board is equipped with 2 different ways to connect to an RTC battery."),(0,r.yg)(o.A,{mdxType:"Tabs"},(0,r.yg)(i.A,{value:"RTC socket",label:"RTC socket",mdxType:"TabItem"},(0,r.yg)("p",null,"Connect a 3V CR1220 coin cell battery to the RTC socket on the board as shown below. Make sure the ",(0,r.yg)("strong",{parentName:"p"},"positive (+)")," end of the battery is facing upwards."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"220",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/11.jpg"}))),(0,r.yg)(i.A,{value:"JST socket",label:"JST socket",mdxType:"TabItem"},(0,r.yg)("p",null,"Connect a 3V CR2302 coin cell battery with JST connector to the ",(0,r.yg)("strong",{parentName:"p"},"2-pin 1.25mm")," JST socket on the board as shown below"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/12.jpg"})))),(0,r.yg)("h3",{id:"usage-instruction-6"},"Usage Instruction"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step1.")," Connect an RTC battery as mentioned above."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step2.")," Turn on J501."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step3.")," On the Ubuntu Desktop, click the drop-down menu at the top right corner, navigate to ",(0,r.yg)("inlineCode",{parentName:"p"},"Settings > Date & Time"),", connect to a network via an Ethernet cable and select ",(0,r.yg)("strong",{parentName:"p"},"Automatic Date & Time")," to obtain the date/ time automatically."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/13.png"})),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"If you have not connected to internet via Ethernet, you can manually set the date/ time here.")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step4.")," Open a terminal window, and execute the below command to check the hardware clock time:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo hwclock\n")),(0,r.yg)("p",null,"You will see the output something like below which is not the correct date/time:"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/14.png"})),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step5.")," Change the hardware clock time to the current system clock time by entering the below command:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo hwclock --systohc\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step6.")," Remove any Ethernet cables connected to make sure it will not grab the time from the internet and reboot the board:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo reboot\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step7.")," Check hardware clock time to verify that the date/time stays the same eventhough the device was powered off."),(0,r.yg)("p",null,"Now we will create a script to always sync the system clock from the hardware clock in each boot."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step8.")," Create a new shell script using any text editor of your preference. Here we use ",(0,r.yg)("strong",{parentName:"p"},"vi")," text editor"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo vi /usr/bin/hwtosys.sh \n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step9.")," Enter ",(0,r.yg)("strong",{parentName:"p"},"insert mode")," by pressing ",(0,r.yg)("strong",{parentName:"p"},"i"),", copy and paste the following content inside the file:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"#!/bin/bash\n\nsudo hwclock --hctosys\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step10.")," Make the script executable."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo chmod +x /usr/bin/hwtosys.sh \n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step11.")," Create a systemd file:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo vim /lib/systemd/system/hwtosys.service \n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step12.")," Add the following inside the file:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"[Unit]\nDescription=Change system clock from hardware clock\n\n[Service]\nExecStart=/usr/bin/hwtosys.sh\n\n[Install]\nWantedBy=multi-user.target\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step13.")," Reload systemctl daemon:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload \n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step14.")," Enable the newly created service to start on boot and start the service:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable hwtosys.service\nsudo systemctl start hwtosys.service\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step15.")," Verify the script is up and running as a systemd service:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl status hwtosys.service\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step16")," Reboot the board and you will the system clock is now in sync with the hardware clock."),(0,r.yg)("h2",{id:"fan"},"Fan"),(0,r.yg)("p",null,"The onboard fan interface of the J501 board is managed by the nvfancontrol daemon, which adaptively adjusts the fan speed based on the operating status of the Jetson module. We can configure the working mode of the daemon through its configuration file ",(0,r.yg)("inlineCode",{parentName:"p"},"/etc/nvfancontrol.conf"),"."),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"For more information, please check ",(0,r.yg)("a",{parentName:"p",href:"https://docs.nvidia.com/jetson/archives/r35.4.1/DeveloperGuide/text/SD/PlatformPowerAndPerformance/JetsonOrinNanoSeriesJetsonOrinNxSeriesAndJetsonAgxOrinSeries.html?highlight=fan#fan-profile-control"},"here"),".")),(0,r.yg)("p",null,"Additionally, we can manually set the fan speed using the jtop tool."),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/J501/jtop.png"})),(0,r.yg)("h2",{id:"hdmi"},"HDMI"),(0,r.yg)("p",null,"J501 is equipped with an HDMI 2.1 Type A port, which supports a resolution of 7680x4320. This allows for ultra-high-definition video output."),(0,r.yg)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,r.yg)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,r.yg)("div",{class:"button_tech_support_container"},(0,r.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,r.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,r.yg)("div",{class:"button_tech_support_container"},(0,r.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,r.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}m.isMDXComponent=!0}}]);