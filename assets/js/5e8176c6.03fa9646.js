"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[82436],{15680:(e,n,i)=>{i.d(n,{xA:()=>p,yg:()=>m});var t=i(96540);function r(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function l(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function a(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?l(Object(i),!0).forEach((function(n){r(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function o(e,n){if(null==e)return{};var i,t,r=function(e,n){if(null==e)return{};var i,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)i=l[t],n.indexOf(i)>=0||(r[i]=e[i]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)i=l[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=t.createContext({}),c=function(e){var n=t.useContext(s),i=n;return e&&(i="function"==typeof e?e(n):a(a({},n),e)),i},p=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var i=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(i),g=r,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||l;return i?t.createElement(m,a(a({ref:n},p),{},{components:i})):t.createElement(m,a({ref:n},p))}));function m(e,n){var i=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=i.length,a=new Array(l);a[0]=g;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[d]="string"==typeof e?e:r,a[1]=o;for(var c=2;c<l;c++)a[c]=i[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,i)}g.displayName="MDXCreateElement"},65911:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var t=i(58168),r=(i(96540),i(15680));const l={description:"\u97f3\u9891\u573a\u666f\u8bc6\u522b",title:"\u97f3\u9891\u573a\u666f\u8bc6\u522b",keywords:["Wio_terminal","Embedded_ML","Projects_based_Edge_Impulse"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/Wio-Terminal-TinyML-EI-3",last_update:{date:"3/05/2024",author:"\u91d1\u83ca"}},a="Wio Terminal Edge Impulse\u97f3\u9891\u573a\u666f\u8bc6\u522b\u4e0e\u5185\u7f6e\u9ea6\u514b\u98ce",o={unversionedId:"zh-CN/Sensor/Wio_Terminal/Application/Embedded_ML/Projects_based_Edge_Impulse/CN-Wio-Terminal-TinyML-EI-3",id:"zh-CN/Sensor/Wio_Terminal/Application/Embedded_ML/Projects_based_Edge_Impulse/CN-Wio-Terminal-TinyML-EI-3",title:"\u97f3\u9891\u573a\u666f\u8bc6\u522b",description:"\u97f3\u9891\u573a\u666f\u8bc6\u522b",source:"@site/docs/zh-CN/Sensor/Wio_Terminal/Application/Embedded_ML/Projects_based_Edge_Impulse/CN-Wio-Terminal-TinyML-EI-3.md",sourceDirName:"zh-CN/Sensor/Wio_Terminal/Application/Embedded_ML/Projects_based_Edge_Impulse",slug:"/cn/Wio-Terminal-TinyML-EI-3",permalink:"/cn/Wio-Terminal-TinyML-EI-3",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Sensor/Wio_Terminal/Application/Embedded_ML/Projects_based_Edge_Impulse/CN-Wio-Terminal-TinyML-EI-3.md",tags:[],version:"current",lastUpdatedBy:"\u91d1\u83ca",lastUpdatedAt:1709596800,formattedLastUpdatedAt:"Mar 5, 2024",frontMatter:{description:"\u97f3\u9891\u573a\u666f\u8bc6\u522b",title:"\u97f3\u9891\u573a\u666f\u8bc6\u522b",keywords:["Wio_terminal","Embedded_ML","Projects_based_Edge_Impulse"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/Wio-Terminal-TinyML-EI-3",last_update:{date:"3/05/2024",author:"\u91d1\u83ca"}},sidebar:"CNSidebar",previous:{title:"\u8fde\u7eed\u8fd0\u52a8\u8bc6\u522b",permalink:"/cn/Wio-Terminal-TinyML-EI-2"},next:{title:"\u4eba\u6570\u7edf\u8ba1\u4e0e\u8d85\u58f0\u6ce2\u4f20\u611f\u5668",permalink:"/cn/Wio-Terminal-TinyML-EI-4"}},s={},c=[{value:"\u8ba1\u7b97\u673a\u4e2d\u7684\u58f0\u97f3\u5904\u7406",id:"\u8ba1\u7b97\u673a\u4e2d\u7684\u58f0\u97f3\u5904\u7406",level:2},{value:"\u83b7\u53d6\u8bad\u7ec3\u6570\u636e",id:"\u83b7\u53d6\u8bad\u7ec3\u6570\u636e",level:2},{value:"\u6784\u5efa\u673a\u5668\u5b66\u4e60\u6a21\u578b",id:"\u6784\u5efa\u673a\u5668\u5b66\u4e60\u6a21\u578b",level:2},{value:"\u90e8\u7f72\u5230Wio Terminal",id:"\u90e8\u7f72\u5230wio-terminal",level:2},{value:"Blynk \u96c6\u6210",id:"blynk-\u96c6\u6210",level:2},{value:"\u53c2\u8003\u8d44\u6599",id:"\u53c2\u8003\u8d44\u6599",level:2}],p={toc:c},d="wrapper";function u(e){let{components:n,...i}=e;return(0,r.yg)(d,(0,t.A)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"wio-terminal-edge-impulse\u97f3\u9891\u573a\u666f\u8bc6\u522b\u4e0e\u5185\u7f6e\u9ea6\u514b\u98ce"},"Wio Terminal Edge Impulse\u97f3\u9891\u573a\u666f\u8bc6\u522b\u4e0e\u5185\u7f6e\u9ea6\u514b\u98ce"),(0,r.yg)("p",null,"\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528Wio Terminal\u548cEdge Impulse\u8bad\u7ec3\u548c\u90e8\u7f72\u97f3\u9891\u573a\u666f\u5206\u7c7b\u5668\u3002\n\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u548c\u89c6\u9891\u6559\u7a0b\uff0c\u8bf7\u89c2\u770b\u76f8\u5e94\u7684\u89c6\u9891\uff01"),(0,r.yg)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/2BISspenUng",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}),(0,r.yg)("h2",{id:"\u8ba1\u7b97\u673a\u4e2d\u7684\u58f0\u97f3\u5904\u7406"},"\u8ba1\u7b97\u673a\u4e2d\u7684\u58f0\u97f3\u5904\u7406"),(0,r.yg)("p",null,"\u97f3\u9891\u573a\u666f\u5206\u7c7b\u662f\u4e00\u4e2a\u4efb\u52a1\uff0c\u673a\u5668\u5b66\u4e60\u6a21\u578b\u9700\u8981\u4e3a\u97f3\u9891\u7247\u6bb5\u9884\u6d4b\u4e00\u4e2a\u7c7b\u522b\uff0c\u4f8b\u5982\u201c\u54ed\u6ce3\u7684\u5a74\u513f\u201d\uff0c\u201c\u54b3\u55fd\u58f0\u201d\uff0c\u201c\u72d7\u53eb\u58f0\u201d\u7b49\u3002"),(0,r.yg)("p",null,"\u58f0\u97f3\u662f\u4f5c\u4e3a\u58f0\u6ce2\u901a\u8fc7\u6c14\u4f53\u3001\u6db2\u4f53\u6216\u56fa\u4f53\u7b49\u4f20\u8f93\u4ecb\u8d28\u4f20\u64ad\u7684\u632f\u52a8\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/G2lY2zl.gif"})),"\u58f0\u97f3\u7684\u6765\u6e90\u63a8\u52a8\u5468\u56f4\u7684\u4ecb\u8d28\u5206\u5b50\uff0c\u5b83\u4eec\u63a8\u52a8\u65c1\u8fb9\u7684\u5206\u5b50\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u5f53\u5b83\u4eec\u8fbe\u5230\u5176\u4ed6\u7269\u4f53\u65f6\uff0c\u5b83\u4e5f\u4f1a\u8f7b\u5fae\u632f\u52a8 - \u6211\u4eec\u5728\u9ea6\u514b\u98ce\u4e2d\u4f7f\u7528\u4e86\u8fd9\u4e2a\u539f\u7406\u3002\u9ea6\u514b\u98ce\u819c\u7247\u88ab\u4ecb\u8d28\u5206\u5b50\u5411\u5185\u63a8\uff0c\u7136\u540e\u56de\u5230\u539f\u6765\u7684\u4f4d\u7f6e\u3002",(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/mic-working.gif"})),"\u8fd9\u5728\u7535\u8def\u4e2d\u4ea7\u751f\u4ea4\u6d41\u7535\u6d41\uff0c\u5176\u4e2d\u7535\u538b\u4e0e\u58f0\u97f3\u5e45\u5ea6\u6210\u6bd4\u4f8b - \u58f0\u97f3\u8d8a\u5927\uff0c\u5b83\u63a8\u52a8\u819c\u7247\u7684\u7a0b\u5ea6\u5c31\u8d8a\u5927\uff0c\u4ece\u800c\u4ea7\u751f\u66f4\u9ad8\u7684\u7535\u538b\u3002\u7136\u540e\u6211\u4eec\u7528\u6a21\u6570\u8f6c\u6362\u5668\u8bfb\u53d6\u8fd9\u4e2a\u7535\u538b\uff0c\u5e76\u4ee5\u76f8\u7b49\u7684\u95f4\u9694\u8bb0\u5f55 - \u6211\u4eec\u5728\u4e00\u79d2\u949f\u5185\u5bf9\u58f0\u97f3\u8fdb\u884c\u6d4b\u91cf\u7684\u6b21\u6570\u79f0\u4e3a\u91c7\u6837\u7387\uff0c\u4f8b\u59828000 Hz\u7684\u91c7\u6837\u7387\u662f\u6bcf\u79d2\u8fdb\u884c8000\u6b21\u6d4b\u91cf\u3002\u91c7\u6837\u7387\u5bf9\u58f0\u97f3\u7684\u8d28\u91cf\u660e\u663e\u5f88\u91cd\u8981 - \u5982\u679c\u6211\u4eec\u91c7\u6837\u5f97\u592a\u6162\uff0c\u53ef\u80fd\u4f1a\u9519\u8fc7\u91cd\u8981\u7684\u90e8\u5206\u3002\u7528\u4e8e\u6570\u5b57\u5f55\u97f3\u7684\u6570\u5b57\u4e5f\u5f88\u91cd\u8981 - \u4f7f\u7528\u7684\u6570\u5b57\u8303\u56f4\u8d8a\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u539f\u59cb\u58f0\u97f3\u4e2d\u4fdd\u7559\u7684\u201c\u7ec6\u5fae\u5dee\u522b\u201d\u5c31\u8d8a\u591a\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u97f3\u9891\u4f4d\u6df1\u5ea6 - \u4f60\u53ef\u80fd\u542c\u8bf4\u8fc78\u4f4d\u97f3\u9891\u548c16\u4f4d\u97f3\u9891\u8fd9\u6837\u7684\u672f\u8bed\u3002\u597d\u5427\uff0c\u5b83\u6b63\u597d\u662f\u5b57\u9762\u4e0a\u6240\u8bf4\u7684 - \u5bf9\u4e8e8\u4f4d\u97f3\u9891\uff0c\u4f7f\u7528\u65e0\u7b26\u53f7\u76848\u4f4d\u6574\u6570\uff0c\u5176\u8303\u56f4\u4e3a0\u5230255\u3002\u5bf9\u4e8e16\u4f4d\u97f3\u9891\uff0c\u4f7f\u7528\u5e26\u7b26\u53f7\u768416\u4f4d\u6574\u6570\uff0c\u8303\u56f4\u4e3a-32768\u523032767\u3002\u597d\u4e86\uff0c\u6700\u540e\u6211\u4eec\u5f97\u5230\u4e00\u4e32\u6570\u5b57\uff0c\u8f83\u5927\u7684\u6570\u5b57\u5bf9\u5e94\u58f0\u97f3\u7684\u54cd\u4eae\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u8fd9\u6837\u53ef\u89c6\u5316\u5b83 - \u8fd9\u662f\u4ee58000 Hz\u9891\u7387\u548c8\u4f4d\u6df1\u5ea6\uff080-255\uff09\u8bb0\u5f55\u76841\u79d2\u67aa\u58f0\u7684\u58f0\u97f3\u3002",(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/Capture1.PNG"})),(0,r.yg)("p",null,"\u7136\u800c\uff0c\u6211\u4eec\u4e0d\u80fd\u5bf9\u8fd9\u79cd\u539f\u59cb\u58f0\u97f3\u8868\u793a\u505a\u592a\u591a\u5904\u7406 - \u662f\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u526a\u5207\u548c\u7c98\u8d34\u90e8\u5206\u6216\u4f7f\u5176\u66f4\u67d4\u548c\u6216\u66f4\u54cd\u4eae\uff0c\u4f46\u662f\u5bf9\u4e8e\u5206\u6790\u58f0\u97f3\u6765\u8bf4\uff0c\u5b83\u592a\u539f\u59cb\u4e86\u3002\u5728\u8fd9\u91cc\uff0c\u5085\u91cc\u53f6\u53d8\u6362\u3001\u6885\u5c14\u523b\u5ea6\u3001\u9891\u8c31\u56fe\u548c\u5012\u8c31\u7cfb\u6570\u6d3e\u4e0a\u7528\u573a\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u9879\u76ee\uff0c\u6211\u4eec\u5c06\u5085\u91cc\u53f6\u53d8\u6362\u5b9a\u4e49\u4e3a\u4e00\u79cd\u6570\u5b66\u53d8\u6362\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u5c06\u4fe1\u53f7\u5206\u89e3\u4e3a\u5404\u4e2a\u9891\u7387\u548c\u9891\u7387\u5e45\u5ea6\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/1 xTYCtcx_7otHVu-uToI9dA.png"})),(0,r.yg)("p",null,"\u6216\u8005\uff0c\u5982\u679c\u4f60\u613f\u610f\u4f7f\u7528\u4e00\u4e2a\u6bd4\u55bb - \u7ed9\u5b9a\u4e00\u4e2a\u51b0\u6c99\uff0c\u5b83\u8f93\u51fa\u914d\u65b9\u3002"),(0,r.yg)("p",null,"\u5173\u4e8e\u5085\u91cc\u53f6\u53d8\u6362\u6709\u5f88\u591a\u4e92\u8054\u7f51\u4e0a\u7684\u8d44\u6599\uff0c\u4f8b\u5982 ",(0,r.yg)("a",{parentName:"p",href:"https://betterexplained.com/articles/an-interactive-guide-to-the-fourier-transform/"},"\u6765\u81ea betterexplained.com \u7684\u6587\u7ae0")," \u548c ",(0,r.yg)("a",{parentName:"p",href:"https://youtu.be/spUNpyF58BY"}," 3Blue1Gray \u7684\u89c6\u9891"),"  - \u67e5\u770b\u5b83\u4eec\u4ee5\u4e86\u89e3\u66f4\u591a\u5173\u4e8eFFT\u7684\u4fe1\u606f\u3002"),(0,r.yg)("p",null,"\u8fd9\u662f\u5e94\u7528\u5085\u91cc\u53f6\u53d8\u6362\u540e\u6211\u4eec\u7684\u58f0\u97f3\u7684\u6837\u5b50 - \u8f83\u9ad8\u7684\u67f1\u72b6\u56fe\u5bf9\u5e94\u8f83\u5927\u7684\u632f\u5e45\u9891\u7387\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/Capture2.PNG"})),(0,r.yg)("p",null,"\u592a\u68d2\u4e86\uff01\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u7528\u97f3\u9891\u4fe1\u53f7\u505a\u66f4\u6709\u8da3\u7684\u4e8b\u60c5\u4e86 - \u4f8b\u5982\u6d88\u9664\u6700\u4e0d\u91cd\u8981\u7684\u9891\u7387\u4ee5\u538b\u7f29\u97f3\u9891\u6587\u4ef6\uff0c\u53bb\u9664\u566a\u58f0\u6216\u58f0\u97f3\uff0c\u7b49\u7b49\u3002\u4f46\u662f\u5bf9\u4e8e\u97f3\u9891\u548c\u8bed\u97f3\u8bc6\u522b\u6765\u8bf4\uff0c\u8fd9\u4ecd\u7136\u4e0d\u591f\u597d - \u901a\u8fc7\u8fdb\u884c\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u6211\u4eec\u5931\u53bb\u4e86\u6240\u6709\u7684\u65f6\u95f4\u57df\u4fe1\u606f\uff0c\u8fd9\u5bf9\u4e8e\u975e\u5468\u671f\u6027\u4fe1\u53f7\uff08\u4f8b\u5982\u4eba\u7c7b\u8bed\u97f3\uff09\u4e0d\u5229\u3002\u7136\u800c\uff0c\u6211\u4eec\u662f\u806a\u660e\u7684\u4eba\uff0c\u53ea\u9700\u5728\u4fe1\u53f7\u6837\u672c\u4e0a\u591a\u6b21\u8fdb\u884c\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u5b9e\u8d28\u4e0a\u5c06\u5176\u5207\u7247\uff0c\u7136\u540e\u5c06\u591a\u6b21\u5085\u91cc\u53f6\u53d8\u6362\u7684\u6570\u636e\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u9891\u8c31\u56fe\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/1 tIBRdtG3EfjmSIlraWVIxw.png"})),(0,r.yg)("p",null,"\u5728\u8fd9\u91cc\uff0cx\u8f74\u8868\u793a\u65f6\u95f4\uff0cy\u8f74\u8868\u793a\u9891\u7387\uff0c\u9891\u7387\u7684\u5e45\u5ea6\u901a\u8fc7\u989c\u8272\u6765\u8868\u793a\uff0c\u8f83\u4eae\u7684\u989c\u8272\u5bf9\u5e94\u8f83\u5927\u7684\u632f\u5e45\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/Capture3.PNG"})),(0,r.yg)("p",null,"\u975e\u5e38\u597d\uff01\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u58f0\u97f3\u8bc6\u522b\u5417\uff1f\u662f\u7684\uff01\u4e0d\u662f\uff01\u53ef\u80fd\uff01\n\u666e\u901a\u7684\u9891\u8c31\u56fe\u5305\u542b\u4e86\u592a\u591a\u7684\u4fe1\u606f\uff0c\u5982\u679c\u6211\u4eec\u53ea\u5173\u5fc3\u4eba\u8033\u80fd\u542c\u5230\u7684\u58f0\u97f3\u3002\u7814\u7a76\u8868\u660e\uff0c\u4eba\u7c7b\u5bf9\u9891\u7387\u7684\u611f\u77e5\u5e76\u4e0d\u662f\u7ebf\u6027\u7684\u3002\u6211\u4eec\u5728\u4f4e\u9891\u7387\u4e0a\u68c0\u6d4b\u5dee\u5f02\u6bd4\u5728\u9ad8\u9891\u7387\u4e0a\u66f4\u597d\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u533a\u5206500\u548c1000 Hz\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u4f46\u662f\u6211\u4eec\u51e0\u4e4e\u65e0\u6cd5\u533a\u520610000\u548c10500 Hz\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u5c3d\u7ba1\u4e24\u5bf9\u4e4b\u95f4\u7684\u8ddd\u79bb\u76f8\u540c\u3002\n1937\u5e74\uff0c\u65af\u8482\u6587\u65af\u3001\u6c83\u5c14\u514b\u66fc\u548c\u7ebd\u66fc\u63d0\u51fa\u4e86\u4e00\u4e2a\u57fa\u4e8e\u97f3\u9ad8\u7684\u5355\u4f4d\uff0c\u4f7f\u5f97\u97f3\u9ad8\u4e0a\u7684\u7b49\u8ddd\u79bb\u542c\u8d77\u6765\u5bf9\u542c\u4f17\u6765\u8bf4\u542c\u8d77\u6765\u540c\u6837\u8fdc\u3002\u8fd9\u88ab\u79f0\u4e3a\u6885\u5c14\u523b\u5ea6\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:400,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/1 erUKb2-Z-Wi_u8JWel6cDQ.gif"})),(0,r.yg)("p",null,"\u6885\u5c14\u9891\u8c31\u56fe\u662f\u5c06\u9891\u7387\u8f6c\u6362\u4e3a\u6885\u5c14\u523b\u5ea6\u7684\u9891\u8c31\u56fe\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/Capture4.PNG"})),(0,r.yg)("p",null,"\u5bf9\u4e8e\u8bc6\u522b\u8bed\u97f3\u8fd8\u6d89\u53ca\u5230\u66f4\u591a\u7684\u6b65\u9aa4 - \u4f8b\u5982\u4e0a\u9762\u63d0\u5230\u7684\u5012\u8c31\u7cfb\u6570\uff0c\u6211\u4eec\u5c06\u5728\u4ee5\u540e\u7684\u9879\u76ee\u4e2d\u8ba8\u8bba\u5b83\u4eec\u3002\u73b0\u5728\u662f\u65f6\u5019\u5f00\u59cb\u5b9e\u9645\u5b9e\u65bd\u4e86\u3002"),(0,r.yg)("h2",{id:"\u83b7\u53d6\u8bad\u7ec3\u6570\u636e"},"\u83b7\u53d6\u8bad\u7ec3\u6570\u636e"),(0,r.yg)("p",null,"\u97f3\u9891\u4fe1\u53f7\u9700\u8981\u4ee5\u975e\u5e38\u9ad8\u7684\u91c7\u6837\u7387\u8fdb\u884c\u91c7\u6837\uff0c8000 Hz\u6216\u8005\u7406\u60f3\u60c5\u51b5\u4e0b\u662f16000 Hz\u3002Edge Impulse Data Forwarder\u5de5\u5177\u5904\u7406\u8fd9\u79cd\u91c7\u6837\u7387\u592a\u6162\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e13\u95e8\u7684\u6570\u636e\u6536\u96c6\u56fa\u4ef6\u6765\u83b7\u53d6\u6b64\u9879\u76ee\u7684\u6570\u636e\u3002\u4e0b\u8f7d\u4e00\u4e2a\u5177\u6709\u9ea6\u514b\u98ce\u652f\u6301\u7684\u65b0\u7248\u672cWio Terminal Edge Impulse\u56fa\u4ef6\uff0c\u5e76\u5c06\u5176\u70e7\u5f55\u5230\u4f60\u7684\u8bbe\u5907\u4e0a\uff0c\u5982 ",(0,r.yg)("a",{parentName:"p",href:"#"},"Getting started with Edge Impulse")," \u6240\u8ff0\u3002\u7136\u540e\u5728Edge Impulse\u5e73\u53f0\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u9879\u76ee\uff0c\u542f\u52a8\u8fb9\u7f18\u63a8\u5bfc\u670d\u52a1\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"edge-impulse-daemon\n")),(0,r.yg)("p",null,"\u5982\u679c\u4f60\u4e4b\u524d\u4f7f\u7528\u8fc7edge-impulse-daemon\uff0c\u8bf7\u5728\u4e0a\u8ff0\u547d\u4ee4\u4e2d\u6dfb\u52a0--clean\u4ee5\u6e05\u9664\u9879\u76ee\u6570\u636e\u3002"),(0,r.yg)("p",null,"\u7136\u540e\u4f7f\u7528\u4f60\u7684\u51ed\u636e\u767b\u5f55\uff0c\u5e76\u9009\u62e9\u4f60\u521a\u521b\u5efa\u7684\u9879\u76ee\u3002\u8f6c\u5230\u6570\u636e\u91c7\u96c6\u9009\u9879\u5361\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u83b7\u53d6\u6570\u636e\u6837\u672c\u4e86\u3002"),(0,r.yg)("p",null,"\u6211\u4eec\u5c06\u6709\u4e09\u4e2a\u7c7b\u522b\u7684\u6570\u636e:"),(0,r.yg)("p",null,"\u2022 background"),(0,r.yg)("p",null,"\u2022 coughing"),(0,r.yg)("p",null,"\u2022  crying"),(0,r.yg)("p",null,"\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u8bb0\u5f5510\u4e2a\u6837\u672c\uff0c\u6bcf\u4e2a\u6837\u672c\u6301\u7eed\u65f6\u95f4\u4e3a5000\u6beb\u79d2\u3002\u4f60\u53ef\u4ee5\u5f55\u5236\u4ece\u8ba1\u7b97\u673a\u626c\u58f0\u5668\u64ad\u653e\u7684\u58f0\u97f3\uff08\u9664\u4e86\u80cc\u666f\u7c7b\u522b\uff09\uff0c\u4f46\u5982\u679c\u4f60\u6709\u673a\u4f1a\u5f55\u5236\u771f\u5b9e\u7684\u58f0\u97f3\uff0c\u90a3\u5c06\u66f4\u597d\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/cough.png"})),(0,r.yg)("p",null,"\u5bf9\u4e8e\u80cc\u666f\u7c7b\u522b\uff0c\u5f55\u5236\u4e00\u4e9b\u4e0d\u5e94\u88ab\u5206\u7c7b\u4e3a\u54b3\u55fd\u6216\u54ed\u6ce3\u7684\u58f0\u97f3\uff0c\u4f8b\u5982\u4eba\u4eec\u4ea4\u8c08\u3001\u65e0\u58f0\u97f3\u3001\u7a7a\u8c03/\u98ce\u6247\u7b49\u7b49\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/cough_p.png"})),(0,r.yg)("p",null,"30\u4e2a\u6837\u672c\u592a\u5c11\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u5c06\u4e0a\u4f20\u66f4\u591a\u7684\u6570\u636e\u3002\u53ea\u9700\u4ece\u4e92\u8054\u7f51\u4e0a\u4e0b\u8f7d\u58f0\u97f3\uff0c\u5c06\u5176\u91cd\u65b0\u91c7\u6837\u4e3a16000 Hz\uff0c\u5e76\u4ee5.wav\u683c\u5f0f\u4fdd\u5b58\uff0c\u4f7f\u7528\u8fd9\u4e2a\u8f6c\u6362\u811a\u672c\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"import librosa \nimport sys\nimport soundfile as sf\ninput_filename = sys.argv[1]\noutput_filename = sys.argv[2]\n   \ndata, samplerate = librosa.load(input_filename, sr=16000)\nprint(data.shape, samplerate)\nsf.write(output_filename, data, samplerate, subtype='PCM_16')\n")),(0,r.yg)("p",null,"\u5c06\u4ee3\u7801\u590d\u5236\u5e76\u7c98\u8d34\u5230\u4e00\u4e2a\u6587\u672c\u6587\u6863\u4e2d\uff08\u4f7f\u7528Notepad++\u3001IDLE IDE\u6216\u5176\u4ed6\u9002\u5408\u7684IDE\u3002\u4e0d\u8981\u4f7f\u7528Windows\u9ed8\u8ba4\u7684\u8bb0\u4e8b\u672c\uff09"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/path.png"})),(0,r.yg)("p",null,"\u5c06\u6587\u6863\u4fdd\u5b58\u4e3a ",(0,r.yg)("inlineCode",{parentName:"p"},"converter.py")," \uff0c\u7136\u540e\u4eceAnaconda\u73af\u5883\u4e2d\u8fd0\u884c\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"python converter.py name-of-the-downloaded-file class_name.number.wav\n")),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/command.png"})),(0,r.yg)("p",null,"\u4f60\u53ef\u4ee5\u5728\u8fd9\u4e2a\u9879\u76ee\u7684Github\u5b58\u50a8\u5e93\u4e2d\u627e\u5230\u5df2\u7ecf\u8f6c\u6362\u4e3a\u6b63\u786e\u683c\u5f0f\u7684\u793a\u4f8b\u58f0\u97f3\u6587\u4ef6\u3002\n\u7136\u540e\u5c06\u6240\u6709\u58f0\u97f3\u6837\u672c\u62c6\u5206\uff0c\u53ea\u7559\u4e0b\u201c\u6709\u8da3\u201d\u7684\u90e8\u5206 - \u5bf9\u4e8e\u6bcf\u4e2a\u7c7b\u522b\u90fd\u8981\u8fd9\u6837\u505a\uff0c\u9664\u4e86\u80cc\u666f\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/data.png"})),(0,r.yg)("p",null,"\u5b8c\u6210\u6570\u636e\u6536\u96c6\u540e\uff0c\u73b0\u5728\u662f\u9009\u62e9\u5904\u7406\u5757\u548c\u5b9a\u4e49\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u65f6\u5019\u4e86\u3002"),(0,r.yg)("h2",{id:"\u6784\u5efa\u673a\u5668\u5b66\u4e60\u6a21\u578b"},"\u6784\u5efa\u673a\u5668\u5b66\u4e60\u6a21\u578b"),(0,r.yg)("p",null,"\u5728\u5904\u7406\u5757\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u4e09\u4e2a\u719f\u6089\u7684\u9009\u9879 - Raw\uff08\u539f\u59cb\u6570\u636e\uff09\u3001Spectral Analysis\uff08\u4fe1\u53f7\u7684\u5085\u91cc\u53f6\u53d8\u6362\uff09\u3001Spectrogram\uff08\u9891\u8c31\u56fe\uff09\u548cMFE\uff08\u6885\u5c14\u9891\u7387\u80fd\u91cf\uff09\uff0c\u5b83\u4eec\u5bf9\u5e94\u4e8e\u6211\u4eec\u4e4b\u524d\u63cf\u8ff0\u7684\u97f3\u9891\u5904\u7406\u7684\u56db\u4e2a\u9636\u6bb5\uff01"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/data_process.jpeg"})),(0,r.yg)("p",null,'\u5982\u679c\u60a8\u559c\u6b22\u5c1d\u8bd5\u5b9e\u9a8c\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u5b83\u4eec\u5168\u90e8\u5e94\u7528\u4e8e\u60a8\u7684\u6570\u636e\uff0c\u9664\u4e86"Raw"\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6211\u4eec\u76f8\u5bf9\u8f83\u5c0f\u7684\u795e\u7ecf\u7f51\u7edc\u6765\u8bf4\uff0c\u5b83\u7684\u6570\u636e\u91cf\u592a\u5927\u4e86\u3002\u5728\u8fd9\u4e2a\u4efb\u52a1\u4e2d\uff0c\u6211\u4eec\u53ea\u9009\u62e9\u6700\u9002\u5408\u7684\u9009\u9879\uff0c\u5373MFE\u6216Mel-Frequency Energy banks\u3002\u5728\u8ba1\u7b97\u5b8c\u7279\u5f81\u4e4b\u540e\uff0c\u8f6c\u5230NN\u5206\u7c7b\u5668\u9009\u9879\u5361\uff0c\u5e76\u9009\u62e9\u9002\u5408\u7684\u6a21\u578b\u67b6\u6784\u3002\u6211\u4eec\u6709\u4e24\u4e2a\u9009\u62e9\uff0c\u5206\u522b\u662f\u4f7f\u75281D Conv\u548c2D Conv\u3002\u4e24\u8005\u90fd\u53ef\u4ee5\uff0c\u4f46\u5982\u679c\u53ef\u80fd\uff0c\u6211\u4eec\u5e94\u8be5\u59cb\u7ec8\u9009\u62e9\u8f83\u5c0f\u7684\u6a21\u578b\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5c06\u5176\u90e8\u7f72\u5230\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e0a\u3002\u5728\u7f16\u5199\u672c\u8bfe\u7a0b\u6750\u6599\u65f6\uff0c\u6211\u4eec\u8fdb\u884c\u4e864\u4e2a\u4e0d\u540c\u7684\u5b9e\u9a8c\uff0c\u5305\u62ec\u4f7f\u7528MFE\u548cMFCC\u7279\u5f81\u76841D Conv/2D Conv\u3002\u5b83\u4eec\u7684\u7ed3\u679c\u5728\u4ee5\u4e0b\u8868\u683c\u4e2d\u3002'),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/table.PNG"})),(0,r.yg)("p",null,"\u6700\u4f73\u6a21\u578b\u662f\u4f7f\u7528MFE\u5904\u7406\u5757\u76841D Conv\u7f51\u7edc\u3002\u901a\u8fc7\u8c03\u6574MFE\u53c2\u6570\uff08\u5373\u5c06\u6b65\u957f\u589e\u52a0\u52300.02\u5e76\u5c06\u4f4e\u9891\u7387\u964d\u4f4e\u52300\uff09\uff0c\u6211\u4eec\u5728\u9a8c\u8bc1\u6570\u636e\u96c6\u4e0a\u5b9e\u73b0\u4e8689.4%\u7684\u51c6\u786e\u7387\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/accuracy.png"})),(0,r.yg)("p",null,"\u60a8\u53ef\u4ee5\u5728",(0,r.yg)("a",{parentName:"p",href:"https://studio.edgeimpulse.com/public/25382/latest"},"\u6b64\u5904"),"\u627e\u5230\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u5e76\u81ea\u884c\u6d4b\u8bd5\u3002\u5c3d\u7ba1\u5b83\u5728\u533a\u5206\u54ed\u58f0\u548c\u80cc\u666f\u58f0\u97f3\u65b9\u9762\u8868\u73b0\u826f\u597d\uff0c\u4f46\u54b3\u55fd\u58f0\u97f3\u7684\u68c0\u6d4b\u51c6\u786e\u7387\u7a0d\u4f4e\uff0c\u53ef\u80fd\u9700\u8981\u83b7\u53d6\u66f4\u591a\u6837\u672c\u3002"),(0,r.yg)("h2",{id:"\u90e8\u7f72\u5230wio-terminal"},"\u90e8\u7f72\u5230Wio Terminal"),(0,r.yg)("p",null,'\u5728\u6211\u4eec\u62e5\u6709\u6a21\u578b\u5e76\u5bf9\u5176\u5728\u8bad\u7ec3\u4e2d\u7684\u51c6\u786e\u6027\u611f\u5230\u6ee1\u610f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728"\u5b9e\u65f6\u5206\u7c7b"\u9009\u9879\u5361\u4e2d\u5bf9\u5176\u8fdb\u884c\u65b0\u6570\u636e\u7684\u6d4b\u8bd5\uff0c\u7136\u540e\u5c06\u5176\u90e8\u7f72\u5230Wio Terminal\u3002\u6211\u4eec\u5c06\u5176\u4e0b\u8f7d\u4e3aArduino\u5e93\uff0c\u653e\u7f6e\u5728Arduino\u5e93\u6587\u4ef6\u5939\u4e2d\uff0c\u5e76\u6253\u5f00Examples -> \u60a8\u7684\u9879\u76ee\u540d\u79f0 -> nano_33_ble_sense_microphone_continuous\u3002\u8be5\u6f14\u793a\u57fa\u4e8eArduino Nano 33 BLE\uff0c\u5e76\u4f7f\u7528\u4e86PDM\u5e93\u3002\u5bf9\u4e8eWio Terminal\uff0c\u6211\u4eec\u5c06\u4f9d\u9760DMA\uff08\u76f4\u63a5\u5185\u5b58\u8bbf\u95ee\u63a7\u5236\u5668\uff09\u4eceADC\uff08\u6a21\u6570\u8f6c\u6362\u5668\uff09\u83b7\u53d6\u6837\u672c\uff0c\u5e76\u5c06\u5176\u4fdd\u5b58\u5230\u63a8\u65ad\u7f13\u51b2\u533a\uff0c\u800c\u4e0d\u6d89\u53caMCU\u3002'),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/dma.jpeg"})),(0,r.yg)("p",null,"\u8fd9\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u540c\u65f6\u6536\u96c6\u58f0\u97f3\u6837\u672c\u5e76\u8fdb\u884c\u63a8\u65ad\u3002\u4e3a\u4e86\u66f4\u6539\u4ecePDM\u5e93\u5230DMA\u7684\u97f3\u9891\u6570\u636e\u6536\u96c6\u65b9\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u66f4\u6539\u3002\u5982\u679c\u5728\u89e3\u91ca\u8fc7\u7a0b\u4e2d\u611f\u5230\u6709\u4e9b\u56f0\u60d1\uff0c\u8bf7\u67e5\u770b\u5b8c\u6574\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u60a8\u53ef\u4ee5\u5728\u8bfe\u7a0b\u6750\u6599\u4e2d\u627e\u5230\u3002\n\u4ece\u4ee3\u7801\u4e2d\u5220\u9664PDM\u5e93\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"#include <PDM.h>\n")),(0,r.yg)("p",null,"\u5728\u6700\u540e\u7684\u5305\u542b\u8bed\u53e5\u4e4b\u540e\uff0c\u6dfb\u52a0DMA\u63cf\u8ff0\u7b26\u7ed3\u6784\u548c\u5176\u4ed6\u8bbe\u7f6e\u5e38\u91cf\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"// Settings\n#define DEBUG 1                 // Enable pin pulse during ISR  \nenum {ADC_BUF_LEN = 4096};    // Size of one of the DMA double buffers\nstatic const int debug_pin = 1; // Toggles each DAC ISR (if DEBUG is set to 1)\n\n// DMAC descriptor structure\ntypedef struct {\n  uint16_t btctrl;\n  uint16_t btcnt;\n  uint32_t srcaddr;\n  uint32_t dstaddr;\n  uint32_t descaddr;\n} dmacdescriptor;\n")),(0,r.yg)("p",null,"\u7136\u540e\uff0c\u5728\u8bbe\u7f6e\u51fd\u6570\u4e4b\u524d\uff0c\u521b\u5efa\u7528\u4e8e\u7f13\u51b2\u533a\u6570\u7ec4\u7684\u53d8\u91cf\u3001\u7528\u4e8e\u5728ISR\u56de\u8c03\u548c\u4e3b\u4ee3\u7801\u4e4b\u95f4\u4f20\u9012\u503c\u7684\u6613\u5931\u6027\u53d8\u91cf\uff0c\u4ee5\u53ca\u9ad8\u901aButterworth\u6ee4\u6ce2\u5668\uff0c\u6211\u4eec\u5c06\u5e94\u7528\u4e8e\u4fe1\u53f7\u4ee5\u6d88\u9664\u9ea6\u514b\u98ce\u4fe1\u53f7\u4e2d\u7684\u5927\u90e8\u5206\u76f4\u6d41\u5206\u91cf\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"// Globals - DMA and ADC\nvolatile uint8_t recording = 0;\nvolatile boolean results0Ready = false;\nvolatile boolean results1Ready = false;\nuint16_t adc_buf_0[ADC_BUF_LEN];    // ADC results array 0\nuint16_t adc_buf_1[ADC_BUF_LEN];    // ADC results array 1\nvolatile dmacdescriptor wrb[DMAC_CH_NUM] __attribute__ ((aligned (16)));          // Write-back DMAC descriptors\ndmacdescriptor descriptor_section[DMAC_CH_NUM] __attribute__ ((aligned (16)));    // DMAC channel descriptors\ndmacdescriptor descriptor __attribute__ ((aligned (16)));                         // Place holder descriptor\n\n//High pass butterworth filter order=1 alpha1=0.0125 \nclass  FilterBuHp1\n{\n  public:\n    FilterBuHp1()\n    {\n      v[0]=0.0;\n    }\n  private:\n    float v[2];\n  public:\n    float step(float x) //class II \n    {\n      v[0] = v[1];\n      v[1] = (9.621952458291035404e-1f * x)\n         + (0.92439049165820696974f * v[0]);\n      return \n         (v[1] - v[0]);\n    }\n};\n\nFilterBuHp1 filter;\n")),(0,r.yg)("p",null,"\u5728\u6b64\u4e4b\u540e\uff0c\u6dfb\u52a0\u4e09\u4e2a\u4ee3\u7801\u5757-\u7b2c\u4e00\u4e2a\u662f\u56de\u8c03\u51fd\u6570\uff0c\u7531ISR\uff08\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\uff09\u5728\u6bcf\u6b21\u586b\u5145\u5176\u4e2d\u4e00\u4e2a\u7f13\u51b2\u533a\u65f6\u8c03\u7528\u3002\u5728\u8be5\u51fd\u6570\u5185\u90e8\uff0c\u6211\u4eec\u4ece\u5f55\u97f3\u7f13\u51b2\u533a\u4e2d\u8bfb\u53d6\u5143\u7d20\uff08\u521a\u521a\u586b\u5145\u7684\u7f13\u51b2\u533a\uff09\uff0c\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u5e76\u653e\u5165\u63a8\u7406\u7f13\u51b2\u533a\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"/*******************************************************************************\n * Interrupt Service Routines (ISRs)\n */\n\n/**\n * @brief      Copy sample data in selected buf and signal ready when buffer is full\n *\n * @param[in]  *buf  Pointer to source buffer\n * @param[in]  buf_len  Number of samples to copy from buffer\n */\nstatic void audio_rec_callback(uint16_t *buf, uint32_t buf_len) {\n\n  static uint32_t idx = 0;\n\n  // Copy samples from DMA buffer to inference buffer\n  if (recording) {\n    for (uint32_t i = 0; i < buf_len; i++) {\n  \n      // Convert 12-bit unsigned ADC value to 16-bit PCM (signed) audio value\n      inference.buffers[inference.buf_select][inference.buf_count++] = filter.step(((int16_t)buf[i] - 1024) * 16);\n      // Swap double buffer if necessary\n      if (inference.buf_count >= inference.n_samples) {\n        inference.buf_select ^= 1;\n        inference.buf_count = 0;\n        inference.buf_ready = 1;\n      }\n    }\n  }\n}\n")),(0,r.yg)("p",null,"\u4e0b\u4e00\u4e2a\u4ee3\u7801\u5757\u5305\u542bISR\u672c\u8eab-\u5b83\u7531\u5b9a\u65f6\u5668\u5728\u4e00\u5b9a\u65f6\u95f4\u95f4\u9694\u5185\u6267\u884c\uff0c\u51fd\u6570\u5185\u90e8\u6211\u4eec\u68c0\u67e5DMAC\u901a\u90531\u662f\u5426\u5df2\u6682\u505c-\u5982\u679c\u5df2\u6682\u505c\uff0c\u610f\u5473\u7740\u9ea6\u514b\u98ce\u6570\u636e\u7684\u4e00\u4e2a\u7f13\u51b2\u533a\u5df2\u6ee1\uff0c\u6211\u4eec\u9700\u8981\u4ece\u4e2d\u590d\u5236\u6570\u636e\uff0c\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u7f13\u51b2\u533a\u5e76\u91cd\u65b0\u542f\u52a8DMAC ADC\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"/**\n * Interrupt Service Routine (ISR) for DMAC 1\n */\nvoid DMAC_1_Handler() {\n\n  static uint8_t count = 0;\n\n  // Check if DMAC channel 1 has been suspended (SUSP)\n  if (DMAC->Channel[1].CHINTFLAG.bit.SUSP) {\n\n     // Debug: make pin high before copying buffer\n#if DEBUG\n    digitalWrite(debug_pin, HIGH);\n#endif\n\n    // Restart DMAC on channel 1 and clear SUSP interrupt flag\n    DMAC->Channel[1].CHCTRLB.reg = DMAC_CHCTRLB_CMD_RESUME;\n    DMAC->Channel[1].CHINTFLAG.bit.SUSP = 1;\n\n    // See which buffer has filled up, and dump results into large buffer\n    if (count) {\n      audio_rec_callback(adc_buf_0, ADC_BUF_LEN);\n    } else {\n      audio_rec_callback(adc_buf_1, ADC_BUF_LEN);\n    }\n\n    // Flip to next buffer\n    count = (count + 1) % 2;\n\n    // Debug: make pin low after copying buffer\n#if DEBUG\n    digitalWrite(debug_pin, LOW);\n#endif\n  }\n}\n")),(0,r.yg)("p",null,"\u4e0b\u4e00\u4e2a\u4ee3\u7801\u5757\u5305\u542bADC DMAC\u548c\u63a7\u5236ISR\uff08\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\uff09\u7684\u5b9a\u65f6\u5668\u7684\u914d\u7f6e\u6570\u636e\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"// Configure DMA to sample from ADC at regular interval\nvoid config_dma_adc() {\n  \n  // Configure DMA to sample from ADC at a regular interval (triggered by timer/counter)\n  DMAC->BASEADDR.reg = (uint32_t)descriptor_section;                          // Specify the location of the descriptors\n  DMAC->WRBADDR.reg = (uint32_t)wrb;                                          // Specify the location of the write back descriptors\n  DMAC->CTRL.reg = DMAC_CTRL_DMAENABLE | DMAC_CTRL_LVLEN(0xf);                // Enable the DMAC peripheral\n  DMAC->Channel[1].CHCTRLA.reg = DMAC_CHCTRLA_TRIGSRC(TC5_DMAC_ID_OVF) |      // Set DMAC to trigger on TC5 timer overflow\n                                 DMAC_CHCTRLA_TRIGACT_BURST;                  // DMAC burst transfer\n                                 \n  descriptor.descaddr = (uint32_t)&descriptor_section[1];                     // Set up a circular descriptor\n  descriptor.srcaddr = (uint32_t)&ADC1->RESULT.reg;                           // Take the result from the ADC0 RESULT register\n  descriptor.dstaddr = (uint32_t)adc_buf_0 + sizeof(uint16_t) * ADC_BUF_LEN;  // Place it in the adc_buf_0 array\n  descriptor.btcnt = ADC_BUF_LEN;                                             // Beat count\n  descriptor.btctrl = DMAC_BTCTRL_BEATSIZE_HWORD |                            // Beat size is HWORD (16-bits)\n                      DMAC_BTCTRL_DSTINC |                                    // Increment the destination address\n                      DMAC_BTCTRL_VALID |                                     // Descriptor is valid\n                      DMAC_BTCTRL_BLOCKACT_SUSPEND;                           // Suspend DMAC channel 0 after block transfer\n  memcpy(&descriptor_section[0], &descriptor, sizeof(descriptor));            // Copy the descriptor to the descriptor section\n  \n  descriptor.descaddr = (uint32_t)&descriptor_section[0];                     // Set up a circular descriptor\n  descriptor.srcaddr = (uint32_t)&ADC1->RESULT.reg;                           // Take the result from the ADC0 RESULT register\n  descriptor.dstaddr = (uint32_t)adc_buf_1 + sizeof(uint16_t) * ADC_BUF_LEN;  // Place it in the adc_buf_1 array\n  descriptor.btcnt = ADC_BUF_LEN;                                             // Beat count\n  descriptor.btctrl = DMAC_BTCTRL_BEATSIZE_HWORD |                            // Beat size is HWORD (16-bits)\n                      DMAC_BTCTRL_DSTINC |                                    // Increment the destination address\n                      DMAC_BTCTRL_VALID |                                     // Descriptor is valid\n                      DMAC_BTCTRL_BLOCKACT_SUSPEND;                           // Suspend DMAC channel 0 after block transfer\n  memcpy(&descriptor_section[1], &descriptor, sizeof(descriptor));            // Copy the descriptor to the descriptor section\n\n  // Configure NVIC\n  NVIC_SetPriority(DMAC_1_IRQn, 0);    // Set the Nested Vector Interrupt Controller (NVIC) priority for DMAC1 to 0 (highest)\n  NVIC_EnableIRQ(DMAC_1_IRQn);         // Connect DMAC1 to Nested Vector Interrupt Controller (NVIC)\n\n  // Activate the suspend (SUSP) interrupt on DMAC channel 1\n  DMAC->Channel[1].CHINTENSET.reg = DMAC_CHINTENSET_SUSP;\n\n  // Configure ADC\n  ADC1->INPUTCTRL.bit.MUXPOS = ADC_INPUTCTRL_MUXPOS_AIN12_Val; // Set the analog input to ADC0/AIN2 (PB08 - A4 on Metro M4)\n  while(ADC1->SYNCBUSY.bit.INPUTCTRL);                // Wait for synchronization\n  ADC1->SAMPCTRL.bit.SAMPLEN = 0x00;                  // Set max Sampling Time Length to half divided ADC clock pulse (2.66us)\n  while(ADC1->SYNCBUSY.bit.SAMPCTRL);                 // Wait for synchronization \n  ADC1->CTRLA.reg = ADC_CTRLA_PRESCALER_DIV128;       // Divide Clock ADC GCLK by 128 (48MHz/128 = 375kHz)\n  ADC1->CTRLB.reg = ADC_CTRLB_RESSEL_12BIT |          // Set ADC resolution to 12 bits\n                    ADC_CTRLB_FREERUN;                // Set ADC to free run mode       \n  while(ADC1->SYNCBUSY.bit.CTRLB);                    // Wait for synchronization\n  ADC1->CTRLA.bit.ENABLE = 1;                         // Enable the ADC\n  while(ADC1->SYNCBUSY.bit.ENABLE);                   // Wait for synchronization\n  ADC1->SWTRIG.bit.START = 1;                         // Initiate a software trigger to start an ADC conversion\n  while(ADC1->SYNCBUSY.bit.SWTRIG);                   // Wait for synchronization\n\n  // Enable DMA channel 1\n  DMAC->Channel[1].CHCTRLA.bit.ENABLE = 1;\n\n  // Configure Timer/Counter 5\n  GCLK->PCHCTRL[TC5_GCLK_ID].reg = GCLK_PCHCTRL_CHEN |        // Enable perhipheral channel for TC5\n                                   GCLK_PCHCTRL_GEN_GCLK1;    // Connect generic clock 0 at 48MHz\n   \n  TC5->COUNT16.WAVE.reg = TC_WAVE_WAVEGEN_MFRQ;               // Set TC5 to Match Frequency (MFRQ) mode\n  TC5->COUNT16.CC[0].reg = 3000 - 1;                          // Set the trigger to 16 kHz: (4Mhz / 16000) - 1\n  while (TC5->COUNT16.SYNCBUSY.bit.CC0);                      // Wait for synchronization\n\n  // Start Timer/Counter 5\n  TC5->COUNT16.CTRLA.bit.ENABLE = 1;                          // Enable the TC5 timer\n  while (TC5->COUNT16.SYNCBUSY.bit.ENABLE);                   // Wait for synchronization\n}\n")),(0,r.yg)("p",null,"\u5728setup\u51fd\u6570\u7684\u9876\u90e8\u6dfb\u52a0\u8c03\u8bd5\u6761\u4ef6\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"  // Configure pin to toggle on DMA interrupt\n#if DEBUG\n  pinMode(debug_pin, OUTPUT);\n#endif\n")),(0,r.yg)("p",null,"\u7136\u540e\u5728setup\u51fd\u6570\u4e2d\uff0c\u5728run_classifier_init();\u4e4b\u540e\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff0c\u521b\u5efa\u63a8\u7406\u7f13\u51b2\u533a\uff0c\u914d\u7f6eDMA\u5e76\u901a\u8fc7\u5c06\u6613\u5931\u6027\u5168\u5c40\u53d8\u91cfrecording\u8bbe\u7f6e\u4e3a1\u6765\u5f00\u59cb\u5f55\u5236\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'  // Create double buffer for inference\n  inference.buffers[0] = (int16_t *)malloc(EI_CLASSIFIER_SLICE_SIZE * sizeof(int16_t));\n  \n  if (inference.buffers[0] == NULL) {\n    ei_printf("ERROR: Failed to create inference buffer 0");\n    return;\n  }\n  inference.buffers[1] = (int16_t *)malloc(EI_CLASSIFIER_SLICE_SIZE * \n      sizeof(int16_t));\n  if (inference.buffers[1] == NULL) {\n    ei_printf("ERROR: Failed to create inference buffer 1");\n    free(inference.buffers[0]);\n    return;\n  }\n\n  // Set inference parameters\n  inference.buf_select = 0;\n  inference.buf_count = 0;\n  inference.n_samples = EI_CLASSIFIER_SLICE_SIZE;\n  inference.buf_ready = 0;\n\n  // Configure DMA to sample from ADC at 16kHz (start sampling immediately)\n  config_dma_adc();\n\n  // Start recording to inference buffers\n  recording = 1;\n}\n')),(0,r.yg)("p",null,"\u4ece ",(0,r.yg)("inlineCode",{parentName:"p"},"microphone_inference_end(void)")," \u51fd\u6570\u4e2d\u5220\u9664 ",(0,r.yg)("inlineCode",{parentName:"p"},"PDM.end();")," \u548c ",(0,r.yg)("inlineCode",{parentName:"p"},"free(sampleBuffer);")," \uff0c\u4ee5\u53ca",(0,r.yg)("inlineCode",{parentName:"p"},"microphone_inference_start(uint32_t n_samples)"),"\u548c ",(0,r.yg)("inlineCode",{parentName:"p"},"pdm_data_ready_inference_callback(void)")," \u51fd\u6570\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u4f7f\u7528\u5b83\u4eec\u3002\n\u7f16\u8bd1\u548c\u4e0a\u4f20\u4ee3\u7801\u540e\uff0c\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u60a8\u5c06\u770b\u5230\u6253\u5370\u51fa\u7684\u6bcf\u4e2a\u7c7b\u522b\u7684\u6982\u7387\u3002\u64ad\u653e\u4e00\u4e9b\u58f0\u97f3\u6216\u5728Wio Terminal\u4e0a\u54b3\u55fd\uff0c\u4ee5\u68c0\u67e5\u51c6\u786e\u6027\uff01"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/cough_r.png"})),(0,r.yg)("h2",{id:"blynk-\u96c6\u6210"},"Blynk \u96c6\u6210"),(0,r.yg)("p",null,"\u7531\u4e8eWioTerminal\u53ef\u4ee5\u8fde\u63a5\u5230\u4e92\u8054\u7f51\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u53d8\u6210\u4e00\u4e2a\u771f\u6b63\u7684\u7269\u8054\u7f51\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u7528 ",(0,r.yg)("a",{parentName:"p",href:"https://blynk.io"},"Blynk"),"\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/b641e2030c1c47fbc7161c98a7e5d998.jpg"})),(0,r.yg)("p",null,"Blynk\u662f\u4e00\u4e2a\u5e73\u53f0\uff0c\u5141\u8bb8\u60a8\u5feb\u901f\u6784\u5efa\u7528\u4e8e\u63a7\u5236\u548c\u76d1\u63a7\u786c\u4ef6\u9879\u76ee\u7684iOS\u548cAndroid\u8bbe\u5907\u7684\u754c\u9762\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Blynk\u6765\u5411\u6211\u4eec\u7684\u667a\u80fd\u624b\u673a\u63a8\u9001\u901a\u77e5\uff0c\u5982\u679cWio Terminal\u68c0\u6d4b\u5230\u4efb\u4f55\u6211\u4eec\u5e94\u8be5\u62c5\u5fc3\u7684\u58f0\u97f3\u3002\n\u8981\u5f00\u59cb\u4f7f\u7528Blynk\uff0c\u8bf7\u4e0b\u8f7d\u8be5\u5e94\u7528\u7a0b\u5e8f\uff0c\u6ce8\u518c\u4e00\u4e2a\u65b0\u5e10\u6237\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u9879\u76ee\u3002\u5411\u5176\u4e2d\u6dfb\u52a0\u63a8\u9001\u901a\u77e5\u5143\u7d20\u5e76\u6309\u64ad\u653e\u6309\u94ae\u3002"),(0,r.yg)("div",null," ",(0,r.yg)("img",{width:"{200}",align:"left",src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/app1.png"})),(0,r.yg)("img",{width:"{200}",align:"right",src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/app2.png"}),(0,r.yg)("p",null," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," ",(0,r.yg)("br",null)," "),(0,r.yg)("p",null,"\u7136\u540e\u786e\u4fdd\u60a8\u5df2\u7ecf\u6309\u7167 ",(0,r.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Wio-Terminal-Blynk/"},"\u6b64\u5904\u6307\u5357"),"\u8bbe\u7f6e\u4e86Wio Terminal WiFi\u5e93\u548c\u56fa\u4ef6\u3002\u6309\u7167\u8be5\u6559\u7a0b\u4e2d\u6240\u8ff0\u4e0b\u8f7dBlynk\u5e93\u3002"),(0,r.yg)("p",null,"\u7136\u540e\u901a\u8fc7\u7f16\u8bd1\u548c\u4e0a\u4f20\u7b80\u5355\u7684\u6309\u94ae\u793a\u4f8b\u6765\u6d4b\u8bd5\u60a8\u7684\u8bbe\u7f6e-\u786e\u4fdd\u66f4\u6539WiFi SSID\u3001\u5bc6\u7801\u548c\u60a8\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u83b7\u53d6\u7684Blynk API\u4ee4\u724c\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:200,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/app3.png"})),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'#define BLYNK_PRINT Serial\n#include <rpcWiFi.h>\n#include <WiFiClient.h>\n#include <BlynkSimpleWioTerminal.h>\nchar auth[] = "token";\nchar ssid[] = "ssid";\nchar pass[] = "password";\nvoid checkPin()\n{\n  int isButtonPressed = !digitalRead(WIO_KEY_A);\n  if (isButtonPressed) {\n    Serial.println("Button is pressed.");\n    Blynk.notify("Yaaay... button is pressed!");\n  }\n}\nvoid setup()\n{\n  Serial.begin(115200);\n  Blynk.begin(auth, ssid, pass);\n  pinMode(WIO_KEY_A, INPUT_PULLUP);\n}\nvoid loop()\n{\n  Blynk.run();\n  checkPin();\n}\n')),(0,r.yg)("p",null,"\u5982\u679c\u4ee3\u7801\u7f16\u8bd1\u6210\u529f\u5e76\u4e14\u6d4b\u8bd5\u6210\u529f\uff08\u6309\u4e0bWio Terminal\u4e0a\u7684\u5de6\u4e0a\u6309\u94ae\u4f1a\u5728\u60a8\u7684\u624b\u673a\u4e0a\u5f39\u51fa\u63a8\u9001\u901a\u77e5\uff09\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u7ee7\u7eed\u4e0b\u4e00\u9636\u6bb5\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:200,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/button.png"})),(0,r.yg)("p",null,"\u6211\u4eec\u5c06\u628a\u6240\u6709\u7684\u795e\u7ecf\u7f51\u7edc\u63a8\u7406\u4ee3\u7801\u79fb\u52a8\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u51fd\u6570\u4e2d\uff0c\u5e76\u5728loop()\u51fd\u6570\u4e2d\u7684Blynk.run()\u540e\u8c03\u7528\u5b83\u3002\u4e0e\u4e4b\u524d\u6240\u505a\u7684\u7c7b\u4f3c\uff0c\u6211\u4eec\u68c0\u67e5\u795e\u7ecf\u7f51\u7edc\u9884\u6d4b\u7684\u6982\u7387\uff0c\u5982\u679c\u5b83\u4eec\u8d85\u8fc7\u67d0\u4e2a\u7c7b\u522b\u7684\u9608\u503c\uff0c\u6211\u4eec\u8c03\u7528Blynk.notify()\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4f1a\u5411\u60a8\u7684\u79fb\u52a8\u8bbe\u5907\u63a8\u9001\u901a\u77e5\u3002"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Wio-Terminal-TinyML-EI-3/cough_a.png"})),(0,r.yg)("p",null,"\u5728\u6b64\u9879\u76ee\u7684Github\u5b58\u50a8\u5e93\u4e2d\u627e\u5230\u4e86\u5b8c\u6574\u7684NN\u63a8\u7406+ Blynk\u901a\u77e5\u7684\u4ee3\u7801\u3002"),(0,r.yg)("h2",{id:"\u53c2\u8003\u8d44\u6599"},"\u53c2\u8003\u8d44\u6599"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("a",{parentName:"p",href:"https://studio.edgeimpulse.com/public/25382/latest"},"Edge Impulse \u516c\u5171\u9879\u76ee"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Seeed_Arduino_Sketchbook/tree/master/examples/WioTerminal_TinyML_2_Audio_Scene_Recognition"},"Project Github"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("a",{parentName:"p",href:"https://github.com/ShawnHymel/ei-keyword-spotting/blob/master/embedded-demos/arduino/wio-terminal/wio-terminal.ino"},"\u4f7f\u7528 Wio Terminal\u8fdb\u884c\u58f0\u97f3\u5f55\u5236\u7684\u539f\u59cb\u9879\u76ee")))))}u.isMDXComponent=!0}}]);