"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[31485],{15680:(e,t,i)=>{i.d(t,{xA:()=>p,yg:()=>c});var n=i(96540);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var s=n.createContext({}),d=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(i),m=a,c=u["".concat(s,".").concat(m)]||u[m]||g[m]||r;return i?n.createElement(c,o(o({ref:t},p),{},{components:i})):n.createElement(c,o({ref:t},p))}));function c(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var d=2;d<r;d++)o[d]=i[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}m.displayName="MDXCreateElement"},97915:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var n=i(58168),a=(i(96540),i(15680));const r={description:"utilize Embedded swift to work with XIAO ESP32C6",title:"XIAO ESP32C6 with (Embedded) Swift",image:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/swift-xiao-esp32.png",slug:"/xiao-esp32-swift",last_update:{date:new Date("2024-07-12T02:50:00.462Z"),author:"Spencer"}},o="Guide to Embedded Swift with Seeed Studio XIAO-C6",l={unversionedId:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6/XIAO_ESP32C6_Embedded_Swift",id:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6/XIAO_ESP32C6_Embedded_Swift",title:"XIAO ESP32C6 with (Embedded) Swift",description:"utilize Embedded swift to work with XIAO ESP32C6",source:"@site/docs/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6/XIAO_ESP32C6_Embedded_Swift.md",sourceDirName:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6",slug:"/xiao-esp32-swift",permalink:"/xiao-esp32-swift",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6/XIAO_ESP32C6_Embedded_Swift.md",tags:[],version:"current",lastUpdatedBy:"Spencer",lastUpdatedAt:1720752600.462,formattedLastUpdatedAt:"Jul 12, 2024",frontMatter:{description:"utilize Embedded swift to work with XIAO ESP32C6",title:"XIAO ESP32C6 with (Embedded) Swift",image:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/swift-xiao-esp32.png",slug:"/xiao-esp32-swift",last_update:{date:"2024-07-12T02:50:00.462Z",author:"Spencer"}},sidebar:"ProductSidebar",previous:{title:"ESP-NOW protocol on XIAO ESP32 Series",permalink:"/XIAO_ESP32_espnow"},next:{title:"Getting Started with Seeed Studio XIAO ESP32S3 (Sense)",permalink:"/xiao_esp32s3_getting_started"}},s={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Install ESP-IDF",id:"install-esp-idf",level:3},{value:"Install Swift 6.0",id:"install-swift-60",level:3},{value:"Run your first Blink program with Swift",id:"run-your-first-blink-program-with-swift",level:2},{value:"Step 1. Get the example",id:"step-1-get-the-example",level:3},{value:"Step 2. Build the example",id:"step-2-build-the-example",level:3},{value:"Step 3. Flash the firmware",id:"step-3-flash-the-firmware",level:3},{value:"Demostration",id:"demostration",level:3},{value:"Reference",id:"reference",level:2},{value:"Resource",id:"resource",level:2},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],p={toc:d},u="wrapper";function g(e){let{components:t,...i}=e;return(0,a.yg)(u,(0,n.A)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"guide-to-embedded-swift-with-seeed-studio-xiao-c6"},"Guide to Embedded Swift with Seeed Studio XIAO-C6"),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/swift-xiao-esp32.png",alt:"pir",width:600,height:"auto"})),(0,a.yg)("h2",{id:"introduction"},"Introduction"),(0,a.yg)("p",null,"The Seeed Studio XIAO ESP32C6 is a powerful and versatile development board built around the ESP32-C6 SoC, featuring dual 32-bit ",(0,a.yg)("strong",{parentName:"p"},"RISC-V")," processors. The high-performance processor operates up to 160 MHz, while the low-power processor runs up to 20 MHz. With 512KB SRAM and 4MB Flash, the XIAO ESP32C6 offers significant programming space, making it ideal for various IoT applications. This board excels in wireless connectivity, supporting 2.4 GHz Wi-Fi 6, Bluetooth\xae 5.3, Zigbee, and Thread (802.15.4), and is Matter-native, which is crucial for smart-home interoperability."),(0,a.yg)("div",{class:"table-center"},(0,a.yg)("table",null,(0,a.yg)("tr",null,(0,a.yg)("th",null,"Seeed Studio XIAO ESP32C6")),(0,a.yg)("tr",null,(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/xiaoc6.jpg",style:{width:250,height:"auto"}})))),(0,a.yg)("tr",null,(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeed-Studio-XIAO-ESP32C6-p-5884.html "},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f"))))))))),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://www.swift.org/"},"Swift")," is a powerful and intuitive programming language developed by Apple Inc. for developing software for iOS, macOS, watchOS, tvOS, and beyond.  At ",(0,a.yg)("a",{parentName:"p",href:"https://developer.apple.com/wwdc24/"},"WWDC2024"),", Apple announced Embedded Swift, an open source project that aims to bring Swift to the world of embedded systems and IoT. It enables using Swift on microcontrollers with no operating system and with minimal resources available. Currently, the official swift-embedded-examples supports hardware platforms of STM32, Raspberry Pi Pico, Nordic Semiconductor, and even RISC-V ESP32 (ESP32C6)."),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{width:680,src:"https://user-images.githubusercontent.com/1186214/264192528-ec5673ba-eec5-422a-b28c-8c0a1e814d1c.png",alt:"Vision of Embedded Swfit "}),(0,a.yg)("div",{style:{marginTop:"-8px"}},(0,a.yg)("em",null,"Swift Language"))),(0,a.yg)("br",null),(0,a.yg)("p",null,"Embedded Swift provides several advantages:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Performance and Ease of Use"),": It offers C/C++-level performance while maintaining the user-friendly syntax and features of Swift (",(0,a.yg)("a",{parentName:"li",href:"https://forums.swift.org/t/accepted-a-vision-for-embedded-swift/68067"},"Swift Forums"),")."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Library and Framework Integration"),": Swift\u2019s ability to link directly with C/C++ libraries allows developers to utilize existing frameworks seamlessly (",(0,a.yg)("a",{parentName:"li",href:"https://github.com/swiftlang/swift-evolution/blob/main/visions/embedded-swift.md"},"GitHub"),")."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Developer Familiarity"),": Developers already proficient in Swift can quickly adopt Embedded Swift for their projects, leveraging familiar APIs and tools (",(0,a.yg)("a",{parentName:"li",href:"https://www.swift.org/getting-started/embedded-swift/"},"Swift.org"),").")),(0,a.yg)("admonition",{title:"Objectives of This Guide",type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"In this page, we are going to cover the following:"),(0,a.yg)("ul",{parentName:"admonition"},(0,a.yg)("li",{parentName:"ul"},"How to set up the necessary development environment."),(0,a.yg)("li",{parentName:"ul"},"Running a GPIO-based Blink example."))),(0,a.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.yg)("p",null,"To get started with Embedded Swift on the Seeed Studio XIAO-C6, you'll need the following skills and setup:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Seeed Studio XIAO-C6 "),": The core hardware for this guide."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"USB-C cable"),": To connect the XIAO-C6 to your computer."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"A computer"),": which running ",(0,a.yg)("em",{parentName:"li"},"Linux"),", ",(0,a.yg)("em",{parentName:"li"},"macOS"),", , or Windows (using ",(0,a.yg)("strong",{parentName:"li"},"WSL2"),")."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},(0,a.yg)("a",{parentName:"strong",href:"https://docs.espressif.com/projects/esp-idf/en/release-v5.2/esp32/get-started/index.html"},"ESP-IDF")),": Version 5.2(",(0,a.yg)("em",{parentName:"li"},"recommend"),") is required for developing with ESP32-C6. You can download and install it from the ",(0,a.yg)("a",{parentName:"li",href:"https://github.com/espressif/esp-idf"},"Espressif website"),"."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},(0,a.yg)("a",{parentName:"strong",href:"https://www.swift.org/getting-started/embedded-swift/"},"Swift Toolchain")),": Ensure Swift 6.0 is installed on your computer. This can be obtained from the official Swift website or through your operating system's package manager.")),(0,a.yg)("admonition",{title:"Installation Guide ",type:"info"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("strong",{parentName:"p"},"ESP-IDF Installation:")),(0,a.yg)("ul",{parentName:"admonition"},(0,a.yg)("li",{parentName:"ul"},"Follow the ",(0,a.yg)("a",{parentName:"li",href:"https://docs.espressif.com/projects/esp-idf/en/release-v5.2/esp32/get-started/linux-macos-setup.html"},"Linux and macOS")," page to install ESP-IDF"),(0,a.yg)("li",{parentName:"ul"},"Follow the ",(0,a.yg)("a",{parentName:"li",href:"/xiao_idf"},"Developed on XIAO using Espressif ESP-IDF guide")," for detailed steps.")),(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("strong",{parentName:"p"},"Swift Toolchain Installation:")),(0,a.yg)("ul",{parentName:"admonition"},(0,a.yg)("li",{parentName:"ul"},"Install Swift ",(0,a.yg)("inlineCode",{parentName:"li"},"release/6.0")," toolchain from the ",(0,a.yg)("a",{parentName:"li",href:"https://www.swift.org/install/"},"official site"),".")),(0,a.yg)("p",{parentName:"admonition"},"If you prefer docker solution, please refer to ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/apple/swift-matter-examples/blob/main/Dockerfile"},"Dockerfile")," from ",(0,a.yg)("inlineCode",{parentName:"p"},"apple/swift-matter-examples/"))),(0,a.yg)("p",null,"Before proceeding, ensure you have all necessary prerequisites for a smooth setup and development process."),(0,a.yg)("admonition",{title:"attention",type:"caution"},(0,a.yg)("p",{parentName:"admonition"},"In this page, we'll be going through the setup and usage of Embedded Swift on Ubuntu 22.04 Jammy Linux (WSL2).")),(0,a.yg)("h3",{id:"install-esp-idf"},"Install ESP-IDF"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"#!/bin/bash\n# Update and install required packages\nsudo apt-get update\nsudo apt-get install -y git wget flex bison gperf python3 python3-pip python3-venv python3.10-venv cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0\n\n# Clone the ESP-IDF repository\ncd ~\ngit clone --recursive https://github.com/espressif/esp-idf.git --jobs 10\ncd esp-idf\ngit checkout v5.2.1; git submodule update --init --recursive\n\n# Run the install script for ESP-IDF\ncd ~/esp-idf && ./install.sh\n\n# Set up alias for ESP-IDF environment\necho 'alias get_idf=\". ~/esp-idf/export.sh\"' >> ~/.bashrc\nsource ~/.bashrc\n\necho \"Installation complete. Use 'get_idf' to set up the ESP-IDF environment.\"\n")),(0,a.yg)("h3",{id:"install-swift-60"},"Install Swift 6.0"),(0,a.yg)("p",null,"you could directly running this script to have swift 6.0 to be installed."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"#!/bin/bash\n# Download the Swift 6.0 Snapshot\nwget https://download.swift.org/swift-6.0-branch/ubuntu2204/swift-6.0-DEVELOPMENT-SNAPSHOT-2024-07-03-a/swift-6.0-DEVELOPMENT-SNAPSHOT-2024-07-03-a-ubuntu22.04.tar.gz\n\n# Extract the Tarball\ntar -xvzf swift-6.0-DEVELOPMENT-SNAPSHOT-2024-07-03-a-ubuntu22.04.tar.gz\n\nsudo mv swift-6.0-DEVELOPMENT-SNAPSHOT-2024-07-03-a-ubuntu22.04 $HOME/swift-6.0\n\n# Update PATH\necho 'export PATH=$HOME/swift-6.0/usr/bin:$PATH' >> ~/.bashrc\nsource ~/.bashrc\n\n# Verify Installation\nswift --version\n\necho \"Swift 6.0 installation complete.\"\n")),(0,a.yg)("h2",{id:"run-your-first-blink-program-with-swift"},"Run your first Blink program with Swift"),(0,a.yg)("h3",{id:"step-1-get-the-example"},"Step 1. Get the example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell",metastring:"showLineNumbers",showLineNumbers:!0},"get_idf #get idf enviorment\ncd ~ && git clone https://github.com/apple/swift-embedded-examples.git #get GitHub repo\ncd ~/swift-embedded-examples/esp32-led-blink-sdk\n")),(0,a.yg)("div",{class:"github_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"github_item",href:"https://github.com/apple/swift-embedded-examples"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," GitHub Repository")))," ",(0,a.yg)("svg",{"aria-hidden":"true",focusable:"false",role:"img",className:"mr-2",viewBox:"-3 10 9 1",width:16,height:16,fill:"currentColor",style:{textAlign:"center",display:"inline-block",userSelect:"none",verticalAlign:"text-bottom",overflow:"visible"}},(0,a.yg)("path",{d:"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z"})))),(0,a.yg)("h3",{id:"step-2-build-the-example"},"Step 2. Build the example"),(0,a.yg)("p",null,"As the user led is connected to GPIO15, you'll need to modify the code to ",(0,a.yg)("inlineCode",{parentName:"p"},"let led = Led(gpioPin: 15)"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-swift"},'@_cdecl("app_main")\nfunc app_main() {\n    print("Hello from Swift on ESP32-C6!")\n\n    var ledValue: Bool = false\n    let blinkDelayMs: UInt32 = 500\n    let led = Led(gpioPin: 15)\n\n    while true {\n        led.setLed(value: ledValue)\n        ledValue.toggle() // Toggle the boolean value\n        vTaskDelay(blinkDelayMs / (1000 / UInt32(configTICK_RATE_HZ)))\n    }\n}\n')),(0,a.yg)("p",null,"Then you could build the firmware:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"idf.py set-target esp32c6\nidf.py build\n")),(0,a.yg)("admonition",{title:"issue?",type:"info"},(0,a.yg)("p",{parentName:"admonition"},"If you encounter the problem ",(0,a.yg)("inlineCode",{parentName:"p"},"/bin/sh: 1: -target: not found"),", you can resolve it by editing the ",(0,a.yg)("inlineCode",{parentName:"p"},"build.ninja")," file located in the build folder. "),(0,a.yg)("p",{parentName:"admonition"},"Find the keyword ",(0,a.yg)("inlineCode",{parentName:"p"},"-target")," and add the ",(0,a.yg)("inlineCode",{parentName:"p"},"swiftc")," keyword before it, so it reads ",(0,a.yg)("inlineCode",{parentName:"p"},"swiftc -target ..."),". This adjustment should help address the issue.")),(0,a.yg)("p",null,"Now we can have the firmware into out XIAO C6, once you got prompt ",(0,a.yg)("inlineCode",{parentName:"p"},"Project build complete.")),(0,a.yg)("h3",{id:"step-3-flash-the-firmware"},"Step 3. Flash the firmware"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"usbipd is nedded if using WSL2"),(0,a.yg)("p",null,"If you are working with WSL2, you'll need to have ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/espressif/vscode-esp-idf-extension/blob/master/docs/WSL.md#usbipd"},"usbipd")," installed."),(0,a.yg)("p",null,"To install, use the Windows Package Manager with the command:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"winget install usbipd\n")),(0,a.yg)("p",null,"After installation, share the USB device using:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"usbipd list #Check BUSID\nusbipd bind -b '<BUSID>'\n")),(0,a.yg)("p",null,"To attach the device from within WSL2:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"usbipd attach --wsl --busid=<BUSID>\n")),(0,a.yg)("p",null,"To see which port is shared:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"dmesg | tail\n# dmesg | tail -n 100 | sed -n 's/.*\\(ttyACM[0-9]*\\).*/\\1/p'\n"))),(0,a.yg)("p",null,"Assuming you have ",(0,a.yg)("inlineCode",{parentName:"p"},"ttyACM0")," detacted, the command would be:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"idf.py -p /dev/ttyACM0 flash monitor\n")),(0,a.yg)("p",null,(0,a.yg)("em",{parentName:"p"},"This command will:")),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Flash the firmware to the device connected to ttyACM0."),(0,a.yg)("li",{parentName:"ol"},"Start monitoring the serial output from the device, displaying any print statements or logs.")),(0,a.yg)("h3",{id:"demostration"},"Demostration"),(0,a.yg)("center",null,(0,a.yg)("iframe",{width:"407",height:"724",src:"https://www.youtube.com/embed/byqY2bYfVjA",title:"Embedded Swift on XIAO ESP32C6 #Swift #Embedded #ESP32C6 #iot",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:!0})),(0,a.yg)("h2",{id:"reference"},"Reference"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.swift.org/blog/embedded-swift-examples/"},"Embedded Swift Blog")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://github.com/swiftlang/swift-evolution/blob/main/visions/embedded-swift.md"},"A Vision for Embedded Swift")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://github.com/apple/swift-embedded-examples"},"swift-embedded-examples")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://github.com/apple/swift-embedded-examples/tree/main/esp32-led-blink-sdk"},"esp32-led-blink-sdk - GitHub"))),(0,a.yg)("h2",{id:"resource"},"Resource"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=LqxbsADqDI4&t"},"WWDC24: Go small with Embedded Swift - Apple YouTube")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://developer.apple.com/videos/play/wwdc2021/10298"},"Add support for Matter in your smart home app")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://forums.swift.org/c/development/embedded/107"},"Embedde Swift - Apple Forum")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=jcNxtM_yTfk"},"Use C, C++ and Objective C Libraries in a Swift Project - Cecilia Humlelu - YouTube")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.swift.org/documentation/cxx-interop/"},"Mixing Swift and C++")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://github.com/Cosmo/awesome-embedded-swift"},"awesome-embedded-swift"))),(0,a.yg)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,a.yg)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,a.yg)("div",{class:"table-center"},(0,a.yg)("div",{class:"button_tech_support_container"},(0,a.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,a.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,a.yg)("div",{class:"button_tech_support_container"},(0,a.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,a.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"}))))}g.isMDXComponent=!0}}]);