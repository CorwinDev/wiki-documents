"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[30067],{15680:(e,t,r)=>{r.d(t,{xA:()=>d,yg:()=>y});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),g=s(r),u=a,y=g["".concat(p,".").concat(u)]||g[u]||m[u]||i;return r?n.createElement(y,o(o({ref:t},d),{},{components:r})):n.createElement(y,o({ref:t},d))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[g]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},45488:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(9668),a=(r(96540),r(15680));const i={description:"Grove Shield / Grove Starter Kit for Raspberry Pi Pico",title:"Grove Basic Kit for Raspberry Pi Pico",keywords:["Pi_Pico"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/Grove-Starter-Kit-for-Raspberry-Pi-Pico",last_update:{date:"1/11/2023",author:"jianjing Huang"}},o=void 0,l={unversionedId:"Sensor/Pi_Pico/Grove-Starter-Kit-for-Raspberry-Pi-Pico",id:"Sensor/Pi_Pico/Grove-Starter-Kit-for-Raspberry-Pi-Pico",title:"Grove Basic Kit for Raspberry Pi Pico",description:"Grove Shield / Grove Starter Kit for Raspberry Pi Pico",source:"@site/docs/Sensor/Pi_Pico/Grove-Starter-Kit-for-Raspberry-Pi-Pico.md",sourceDirName:"Sensor/Pi_Pico",slug:"/Grove-Starter-Kit-for-Raspberry-Pi-Pico",permalink:"/Grove-Starter-Kit-for-Raspberry-Pi-Pico",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/Pi_Pico/Grove-Starter-Kit-for-Raspberry-Pi-Pico.md",tags:[],version:"current",lastUpdatedBy:"jianjing Huang",lastUpdatedAt:1673395200,formattedLastUpdatedAt:"Jan 11, 2023",frontMatter:{description:"Grove Shield / Grove Starter Kit for Raspberry Pi Pico",title:"Grove Basic Kit for Raspberry Pi Pico",keywords:["Pi_Pico"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/Grove-Starter-Kit-for-Raspberry-Pi-Pico",last_update:{date:"1/11/2023",author:"jianjing Huang"}},sidebar:"ProductSidebar",previous:{title:"SEEED IOT BUTTON FOR AWS",permalink:"/SEEED-IOT-BUTTON-FOR-AWS"},next:{title:"Network Connectivity",permalink:"/Network"}},p={},s=[{value:"Specification",id:"specification",level:2},{value:"Compatible Boards",id:"compatible-boards",level:2},{value:"Hardware Overview",id:"hardware-overview",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Project 1: Different Sounds from a Buzzer",id:"project-1-different-sounds-from-a-buzzer",level:3},{value:"Materials Required",id:"materials-required",level:4},{value:"Software Setup",id:"software-setup",level:4},{value:"Project 2: Detecting Temperature and Humidity",id:"project-2-detecting-temperature-and-humidity",level:3},{value:"Materials Required",id:"materials-required-1",level:4},{value:"Software Setup",id:"software-setup-1",level:4},{value:"Running the Project",id:"running-the-project",level:4},{value:"Project 3: Controling Led and Relay",id:"project-3-controling-led-and-relay",level:3},{value:"Materials Required",id:"materials-required-2",level:4},{value:"Software",id:"software",level:4},{value:"Project 4: Flashing Colors",id:"project-4-flashing-colors",level:3},{value:"Materials Required",id:"materials-required-3",level:4},{value:"Software",id:"software-1",level:4},{value:"Project 5: Detecting Sound and Light",id:"project-5-detecting-sound-and-light",level:3},{value:"Materials Required",id:"materials-required-4",level:4},{value:"Software",id:"software-2",level:4},{value:"Project 6: Detecting Motion",id:"project-6-detecting-motion",level:3},{value:"Materials Required",id:"materials-required-5",level:4},{value:"Software",id:"software-3",level:4},{value:"Schematic Online Viewer",id:"schematic-online-viewer",level:2},{value:"Resources",id:"resources",level:2},{value:"Course Resources",id:"course-resources",level:2},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],d={toc:s},g="wrapper";function m(e){let{components:t,...r}=e;return(0,a.yg)(g,(0,n.A)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/Pico_hardware.png",alt:"enter image description here"})),(0,a.yg)("p",null,"The Raspberry Pi Pico is a new popular low-cost, high-performance microcontroller board, so how to integrate Grove sensor to it?  The grove shield perfectly solved this problem."),(0,a.yg)("p",null,"The Grove Shield for Pi Pico v1.0 is a plug-and-play shield for Raspberry Pi Pico which integrates with various kinds of Grove connectors, including 2",(0,a.yg)("em",{parentName:"p"},"I2C, 3"),"Analog, 2",(0,a.yg)("em",{parentName:"p"},"UART, 3"),"Digital ports, SWD debug interface and SPI pin, 3.3v/5v selectable power switch. It enables the build prototype and project in an easy and quick way without jumper wire and breadboard, you could explore infinite possibilities of Pico. The shield board is a stackable add-on board which acts as a bridge for Pi Pico and Seeed's Grove system."),(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Grove-Shield-for-Pi-Pico-v1-0-p-4846.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f"))))),(0,a.yg)("h2",{id:"specification"},"Specification"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,a.yg)("th",{parentName:"tr",align:null},"Value/Range"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Operating voltage"),(0,a.yg)("td",{parentName:"tr",align:null},"3.3/5V")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Operation Temperature"),(0,a.yg)("td",{parentName:"tr",align:null},"-25\u2103 to +85\u2103")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Analog Ports"),(0,a.yg)("td",{parentName:"tr",align:null},"3")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Digital Ports"),(0,a.yg)("td",{parentName:"tr",align:null},"3")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"UART Ports"),(0,a.yg)("td",{parentName:"tr",align:null},"2")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"I2C Ports"),(0,a.yg)("td",{parentName:"tr",align:null},"2")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"Size"),(0,a.yg)("td",{parentName:"tr",align:null},"56mm x56mm")))),(0,a.yg)("h2",{id:"compatible-boards"},"Compatible Boards"),(0,a.yg)("p",null,"The Base Shield is tested and fully compatible with ",(0,a.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/Raspberry-Pi-Pico-p-4832.html"},"Pi Pico"),"."),(0,a.yg)("h2",{id:"hardware-overview"},"Hardware Overview"),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/hardwareoverview.png",alt:null})),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"1-Analog Ports"),": include 3 anlog ports, A0, A1, A2.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"2-Digital Ports"),": include 3 digital ports, D16, D18, D20.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"3-UART Port"),": 2 UART port.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"4-I2C Ports"),": 2 I2C ports.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"5-Power Switch"),": 5V/3.3V selectable power switch.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"6-SPI port"),": 1 spi0 port.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Dimension"),": 56mm * 56mm  "))),(0,a.yg)("h2",{id:"getting-started"},"Getting Started"),(0,a.yg)("h3",{id:"project-1-different-sounds-from-a-buzzer"},"Project 1: Different Sounds from a Buzzer"),(0,a.yg)("h4",{id:"materials-required"},"Materials Required"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 1.")," Prepare the following items:"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Pi Pico"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove Shield for Pi Pico"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove - Buzzer"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove - Rotary Angle Sensor"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/Picoboard1.jpg",alt:"Pi Pico"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/picobaseshield.png",alt:"Grove Shield for Pi Pico"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Base_Shield_V2/img/Buzzer.png",alt:"Grove Buzzer"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/rotary.png",alt:"Grove Rotary Angle Sensor"}))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Raspberry-Pi-Pico-p-4832.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Shield-for-Pi-Pico-v1-0-p-4846.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Buzzer-p-768.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Rotary-Angle-Sensor.html"},"Get ONE Now"))))),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 2.")," Connect the Grove Buzzer to port A1 of the Grove Shield."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 3.")," Connect the Grove Rotary Angle Sensor to port A0 of the Grove Shield."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 4.")," Plug the Grove Shield into the Pi Pico."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 5.")," Connect the Pi Pico to your PC using a USB cable."),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/hardwareconnection.jpg",alt:"Hardware Setup"})),(0,a.yg)("h4",{id:"software-setup"},"Software Setup"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 1.")," Download Thonny IDE:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://github.com/thonny/thonny/releases/download/v3.3.3/thonny-3.3.3.exe"},"Windows")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://github.com/thonny/thonny/releases/download/v3.3.3/thonny-3.3.3.pkg"},"Mac"))),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"For Linux Development Environment"),":"),(0,a.yg)("p",null,"You can install Thonny in different ways depending on your system:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Binary bundle for PC (Thonny + Python)"),":"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"bash <(wget -O - https://thonny.org/installer-for-linux)\n"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Using pip"),":"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"pip3 install thonny\n"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"For Debian, Raspbian, Ubuntu, Mint, and similar distributions"),":"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"sudo apt install thonny\n"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"For Fedora"),":"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"sudo dnf install thonny\n")))),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 2.")," Open Thonny and connect your computer to the Raspberry Pi Pico. In Thonny, go to the ",(0,a.yg)("strong",{parentName:"p"},"Run")," menu, select ",(0,a.yg)("strong",{parentName:"p"},"Select Interpreter"),', and choose "',(0,a.yg)("strong",{parentName:"p"},"MicroPython (Raspberry Pi Pico)"),'" from the dropdown. Then, select the COM port for your Pi Pico.'),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Note"),": If you don't see \"",(0,a.yg)("strong",{parentName:"p"},"MicroPython (Raspberry Pi Pico)"),'" in the interpreter list, ensure you have the latest version of Thonny installed.'),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/interpreter.png",alt:"Interpreter Selection"}),"\n",(0,a.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/comport.png",alt:"COM Port Selection"})),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 3.")," If the Raspberry Pi Pico is connected and running MicroPython, Thonny should automatically connect to the REPL. Now, copy the following code into the Thonny IDE and press the green ",(0,a.yg)("strong",{parentName:"p"},"Run")," button."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"from machine import Pin, PWM, ADC\nfrom time import sleep\n\nadc = ADC(0)  # ADC input (knob potentiometer) connected to A0\npwm = PWM(Pin(27))  # DAC output (buzzer) connected to A1\npwm.freq(10000)\n\nwhile True:\n    val = adc.read_u16()  # Read A0 port ADC value (65535~0)\n    # Drive the buzzer, turn off the buzzer when the ADC value is less than 300\n    if val > 300:\n        pwm.freq(int(val / 10))\n        pwm.duty_u16(10000)\n    else:\n        pwm.duty_u16(0)\n    \n    print(val)\n    sleep(0.05)\n")),(0,a.yg)("p",null,"Now, rotate the ",(0,a.yg)("strong",{parentName:"p"},"Grove Rotary Angle Sensor"),", and you will hear different sounds from the buzzer as you adjust the angle."),(0,a.yg)("h3",{id:"project-2-detecting-temperature-and-humidity"},"Project 2: Detecting Temperature and Humidity"),(0,a.yg)("h4",{id:"materials-required-1"},"Materials Required"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 1.")," Prepare the following items:"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Pi Pico"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove Shield for Pi Pico"),(0,a.yg)("th",{parentName:"tr",align:null},'Grove OLED Display 0.96" (SSD1315)'),(0,a.yg)("th",{parentName:"tr",align:null},"Grove Temperature & Humidity Sensor (DHT11)"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/Picoboard1.jpg",alt:"Pi Pico"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/picobaseshield.png",alt:"Grove Shield for Pi Pico"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove-OLED-Display-0.96-SSD1315-/img/Grove-OLED-Displey-0.96-SSD1315-thumbnail.jpg",alt:"Grove OLED Display"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove-TemperatureAndHumidity_Sensor/img/list.jpg",alt:"Grove Temperature Humidity Sensor"}))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Raspberry-Pi-Pico-p-4832.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Shield-for-Pi-Pico-v1-0-p-4846.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-OLED-Display-0-96-SSD1315-p-4294.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Temperature-Humidity-Sensor-DHT11.html"},"Get ONE Now"))))),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"In this kit, we have upgraded the Grove Temperature Humidity Sensor (DHT11) to ",(0,a.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/Grove-Temperature-Humidity-Sensor-V2-0-DHT20-p-4967.html"},"Grove Temperature Humidity Sensor (DHT20)"),". If you'd like to get started with the DHT20 sensor, click ",(0,a.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Grove-Temperature-Humidity-Sensor-DH20/"},"here"),".")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 2."),' Connect the Grove OLED Display 0.96" to port I2C1 of the Grove Shield.'),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 3.")," Connect the Grove Temperature Humidity Sensor (DHT11) to port D18 of the Grove Shield."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 4.")," Plug the Grove Shield into the Pi Pico."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Step 5.")," Connect the Pi Pico to your PC using a USB cable."),(0,a.yg)("h4",{id:"software-setup-1"},"Software Setup"),(0,a.yg)("p",null,"Please refer to the software section of Demo 1."),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Copy the following code into Thonny IDE:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"from ssd1306 import SSD1306_I2C\nfrom dht11 import *\nfrom machine import Pin, I2C\nfrom time import sleep\n\ni2c = I2C(1, scl=Pin(7), sda=Pin(6), freq=200000)  # OLED connected to I2C1\noled = SSD1306_I2C(128, 64, i2c)\ndht2 = DHT(18)  # Temperature and humidity sensor connected to D18\n\nwhile True:\n    temp, humid = dht2.readTempHumid()  # Read temperature and humidity\n    '''I2C port test and OLED display test'''\n    oled.fill(0)  # Clear the screen\n    oled.text(\"Temp:  \" + str(temp), 0, 0)  # Display temperature on line 1\n    oled.text(\"Humid: \" + str(humid), 0, 8)  # Display humidity on line 2\n    oled.show()\n    sleep(0.5)\n")),(0,a.yg)("ol",{start:2},(0,a.yg)("li",{parentName:"ol"},"Download the following required Python files to your local machine:",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://github.com/micropython/micropython-lib/blob/master/micropython/drivers/display/ssd1306/ssd1306.py"},"ssd1306.py"))))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python",metastring:"title=dht11.py",title:"dht11.py"},"import time\nfrom machine import Pin\n\nMAXTIMINGS  = 85\n\nDHT11 = 11\nDHT22 = 22\nDHT21 = 21\nAM2301 = 21\n\nclass DHT(object):\n    def __init__(self, data_pin,Type=DHT11):\n        self.Data_pin = data_pin\n        self.__pinData = Pin(data_pin, Pin.OUT)\n        self.firstreading = True\n        self.__pinData.value(1)\n        self._lastreadtime = 0\n        self.data=[0]*5\n        self.temp = 0\n        self.humid = 0\n\n    def read(self):\n        i=0\n        j=0\n        self.__pinData.value(1) \n        #time.sleep(0.25) \n\n        self.data[0] =  self.data[1] =  self.data[2] =  self.data[3] =  self.data[4] = 0 \n        \n        # now pull it low for ~20 milliseconds\n        pinData = Pin(self.Data_pin, Pin.OUT, None)\n        pinData.value(0) \n        time.sleep_ms(20)\n        pinData.value(1)\n        time.sleep_us(41)\n        pinData = Pin(self.Data_pin, Pin.IN)\n        DHT11_TIMEOUT = -1\n        time_cnt=0\n        while(0 ==pinData.value()):\n            time.sleep_us(5)  \n            time_cnt = time_cnt+1\n            if(time_cnt > 16): \n                return\n        \n        # DHT11 pulls the bus up at least 80 US in preparation for sending sensor data.\n        time_cnt=0\n        while(1 == pinData.value()):\n            time.sleep_us(5)   \n            time_cnt = time_cnt+1\n            if(time_cnt > 16): \n                return  \n        \n        \n        for j in range(5):\n            i = 0\n            result=0\n            PINC = 1\n            for i in range(8):\n\n                while(not (PINC & pinData.value())):  # wait for 50us\n                    pass\n                    #print('wait 50us')\n                time.sleep_us(25)\n\n                if(PINC & pinData.value()):\n                    result |=(1<<(7-i))\n                while(PINC & pinData.value()):  # wait '1' finish\n                    pass\n                    #print('wait 1')\n            self.data[j] = result\n\n        pinData = Pin(self.Data_pin, Pin.OUT, None)\n        pinData.value(1)   \n\n        dht11_check_sum = (self.data[0]+self.data[1]+self.data[2]+self.data[3]&0xff)\n        # check check_sum\n        if(self.data[4] is not dht11_check_sum):\n            print(\"DHT11 checksum error\")\n        #print(self.data) \n        if ((j >= 4) and ( self.data[4] == dht11_check_sum)):\n            return True \n        return False\n        \n    def readHumidity(self):\n        if (self.read()):\n            self.humid = float(self.data[0])\n            self.humid = self.humid + float(self.data[1]/10)\n        return self.humid\n\n    def readTemperature(self):\n        if (self.read()):\n            self.temp = float(self.data[2])\n            self.temp = self.temp + float(self.data[3]/10)\n        return self.temp\n    \n    def readTempHumid(self):\n        if (self.read()):        \n            self.temp = float(self.data[2])\n            self.temp = self.temp + float(self.data[3]/10)\n            self.humid = float(self.data[0])\n            self.humid = self.humid + float(self.data[1]/10)\n        return self.temp , self.humid\n")),(0,a.yg)("ol",{start:3},(0,a.yg)("li",{parentName:"ol"},"Open ",(0,a.yg)("strong",{parentName:"li"},"dht11.py")," in Thonny IDE, click ",(0,a.yg)("inlineCode",{parentName:"li"},"File -> Save As -> MicroPython device"),", and save the file with the name ",(0,a.yg)("strong",{parentName:"li"},"dht11.py")," on your device.")),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/saveas.png",alt:"Save as MicroPython device"})),(0,a.yg)("ol",{start:4},(0,a.yg)("li",{parentName:"ol"},"Repeat the same process to save ",(0,a.yg)("strong",{parentName:"li"},"ssd1306.py")," to your MicroPython device.")),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/open.png",alt:"Open MicroPython file"})),(0,a.yg)("h4",{id:"running-the-project"},"Running the Project"),(0,a.yg)("p",null,"Once both files are saved to your MicroPython device, run the demo code by pressing the green ",(0,a.yg)("strong",{parentName:"p"},"Run")," button in Thonny."),(0,a.yg)("p",null,"You should now see the temperature and humidity displayed on the OLED screen, similar to the image below:"),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/oled1.jpg",alt:"OLED Display Output"})),(0,a.yg)("h3",{id:"project-3-controling-led-and-relay"},"Project 3: Controling Led and Relay"),(0,a.yg)("h4",{id:"materials-required-2"},"Materials Required"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Step 1. Prepare the below stuffs:")),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Pi Pico"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove Shield for Pi Pico"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove-button"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove-LED"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove relay"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/Picoboard1.jpg",alt:"enter image description here"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/picobaseshield.png",alt:"enter image description here"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Button/img/button_s.jpg",alt:"enter image description here"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/ledsocket.png",alt:"enter image description here"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove-Relay/img/Thumbnail.jpg",alt:"enter image description here"}))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Raspberry-Pi-Pico-p-4832.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Shield-for-Pi-Pico-v1-0-p-4846.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Button-p-766.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-LED-Pack-p-4364.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Relay-p-769.html"},"Get ONE Now"))))),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Step 2. Connect Grove button to digital pin 18 of Base Shield."),(0,a.yg)("li",{parentName:"ul"},"Step 3. Connect Grove led to port D16 of Base Shield."),(0,a.yg)("li",{parentName:"ul"},"Step 4. Connect Grove Relay to port D20 of Base Shield."),(0,a.yg)("li",{parentName:"ul"},"Step 5. Plug Grove Shield for Pi Pico into Pi Pico."),(0,a.yg)("li",{parentName:"ul"},"Step 6. Connect Pi Pico to PC through a USB cable.")),(0,a.yg)("h4",{id:"software"},"Software"),(0,a.yg)("p",null,"Please refer to the demo1 software part."),(0,a.yg)("p",null,"Copy below code to the Thonny IDE at first."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},"from machine import Pin\n\nbutton = Pin(18, Pin.IN, Pin.PULL_UP)# button connect to D18\nbutton.irq(lambda pin: InterruptsButton(),Pin.IRQ_FALLING)#Set key interrupt\nled = Pin(16, Pin.OUT)#led connect to D16\nrelay = Pin(20, Pin.OUT)\ntmp = 0\n'''Key interrupt function, change the state of the light when the key is pressed'''\ndef InterruptsButton(): #button input\n    global tmp\n    tmp = ~tmp\n    led.value(tmp)\n    relay.value(tmp)\nwhile True:  \n    pass\n    \n")),(0,a.yg)("p",null,"Now please click the green button to run the demo code."),(0,a.yg)("p",null,"Then you can press the grove button, you can control the led and relay open and close."),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/demo3.jpg",alt:"enter image description here"})),(0,a.yg)("h3",{id:"project-4-flashing-colors"},"Project 4: Flashing Colors"),(0,a.yg)("h4",{id:"materials-required-3"},"Materials Required"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Step 1. Prepare the below stuffs:")),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Pi Pico"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove Shield for Pi Pico"),(0,a.yg)("th",{parentName:"tr",align:null},"RGB LED WS2813 mini"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/Picoboard1.jpg",alt:"enter image description here"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/picobaseshield.png",alt:"enter image description here"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/redrgb.png",alt:"enter image description here"}))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Raspberry-Pi-Pico-p-4832.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Shield-for-Pi-Pico-v1-0-p-4846.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-RGB-LED-WS2813-Mini-p-4269.html"},"Get ONE Now"))))),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Step 2. Connect RGB LED WS2813 mini to port 18 of Base Shield."),(0,a.yg)("li",{parentName:"ul"},"Step 3. Plug Grove Shield for Pi Pico into Pi Pico."),(0,a.yg)("li",{parentName:"ul"},"Step 4. Connect Pi Pico to PC through a USB cable.")),(0,a.yg)("h4",{id:"software-1"},"Software"),(0,a.yg)("p",null,"Please refer to the demo1 software part."),(0,a.yg)("p",null,"Copy below code to the Thonny IDE at first."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},'from ws2812 import WS2812\nimport time\n\nBLACK = (0, 0, 0)\nRED = (255, 0, 0)\nYELLOW = (255, 150, 0)\nGREEN = (0, 255, 0)\nCYAN = (0, 255, 255)\nBLUE = (0, 0, 255)\nPURPLE = (180, 0, 255)\nWHITE = (255, 255, 255)\nCOLORS = (BLACK, RED, YELLOW, GREEN, CYAN, BLUE, PURPLE, WHITE)\n\n#WS2812(pin_num,led_count)\nled = WS2812(18,30)\n\nprint("fills")\nfor color in COLORS:\n    led.pixels_fill(color)\n    led.pixels_show()\n    time.sleep(0.2)\n\nprint("chases")\nfor color in COLORS:\n    led.color_chase(color, 0.01)\n\nprint("rainbow")\nled.rainbow_cycle(0)\n\n\n')),(0,a.yg)("p",null,"Then please download the ",(0,a.yg)("a",{parentName:"p",href:"http://47.106.166.129/Embeded/pico-micropython-grove/blob/master/Digital/ws2812.py"},"ws2812.py")," to your local. Use Thonny open ws2812.py, click file->save as->MicroPython device."),(0,a.yg)("p",null,"Input ",(0,a.yg)("strong",{parentName:"p"},"ws2812.py"),' in File name column, click "ok", then the file is saved at File->Open->MicroPython device.'),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/ws2813savelocal.png",alt:"enter image description here"})),(0,a.yg)("p",null,"After you have save the files to your MicroPython device, now please click the green button to run the demo code.\nThen you can get the RGB LED WS2813 mini flash beautiful color as below."),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/ws2813mini.gif",alt:"enter image description here"})),(0,a.yg)("h3",{id:"project-5-detecting-sound-and-light"},"Project 5: Detecting Sound and Light"),(0,a.yg)("h4",{id:"materials-required-4"},"Materials Required"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Step 1. Prepare the below stuffs:")),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Pi Pico"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove Shield for Pi Pico"),(0,a.yg)("th",{parentName:"tr",align:null},"grove sound sensor"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove light sensor"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove-16x2 LCD"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/Picoboard1.jpg",alt:"enter image description here"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/picobaseshield.png",alt:"enter image description here"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Sound_Sensor/img/page_small_1.jpg",alt:"enter image description here"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Light_Sensor/img/light_sensor_s.jpg",alt:"enter image description here"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove-16x2_LCD_Series/img/perspective.jpg",alt:"enter image description here"}))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Raspberry-Pi-Pico-p-4832.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Shield-for-Pi-Pico-v1-0-p-4846.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Sound-Sensor-p-752.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Light-Sensor-v1.2-p-2727.html"},"Get One Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-16-x-2-LCD-Black-on-Yellow.html"},"Get ONE Now"))))),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Step 2. Connect Grove sound sensor to analog pin 0 of Base Shield."),(0,a.yg)("li",{parentName:"ul"},"Step 3. Connect Grove light to port A1 of Base Shield."),(0,a.yg)("li",{parentName:"ul"},"Step 4. Connect Grove 16X2 lcd to port I2C1 of Base Shield."),(0,a.yg)("li",{parentName:"ul"},"Step 5. Plug Grove Shield for Pi Pico into Pi Pico."),(0,a.yg)("li",{parentName:"ul"},"Step 6. Connect Pi Pico to PC through a USB cable.")),(0,a.yg)("h4",{id:"software-2"},"Software"),(0,a.yg)("p",null,"Please refer to the demo1 software part."),(0,a.yg)("p",null,"Copy below code to the Thonny IDE at first."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"#from lcd1602 import LCD1602_RGB  #LCD1602 RGB grove\nfrom lcd1602 import LCD1602\nfrom machine import I2C,Pin,ADC\nfrom time import sleep\ni2c = I2C(1,scl=Pin(7), sda=Pin(6), freq=400000)\nd = LCD1602(i2c, 2, 16)\n#d = LCD1602_RGB.display(i2c, 2, 16)\n#d.set_rgb(255, 0, 0)\nsleep(1)\nlight = ADC(0)\nsound = ADC(1)\n\nwhile True:\n    \n    lightVal = light.read_u16()\n    soundVal = sound.read_u16()\n    d.home()\n    d.print('lightvalue=')\n    d.print(str(lightVal))\n    #d.set_rgb(0, 255, 0)\n    sleep(1)\n    d.setCursor(0, 1)\n    d.print('soundvalue=')\n    d.print(str(soundVal))\n    #d.set_rgb(0, 0, 255)\n    sleep(1)\n    \n")),(0,a.yg)("p",null,"Then please download the ",(0,a.yg)("a",{parentName:"p",href:"http://47.106.166.129/Embeded/pico-micropython-grove/blob/master/I2C/lcd1602.py"},"LCD1602.py")," to your local. Use Thonny open LCD1602.py, click file->save as->MicroPython device."),(0,a.yg)("p",null,"Input ",(0,a.yg)("strong",{parentName:"p"},"LCD1602.py"),' in File name column, click "ok", then the file is saved at File->Open->MicroPython device.'),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"In this example, the version of LCD1602 we are using is a monochrome backlit version, If you need to control the full-color backlit version of LCD1602, check out the functions in this library file to learn how to use it.")),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/lcdlightsound.png",alt:"enter image description here"})),(0,a.yg)("p",null,"After you have save the files to your MicroPython device, now please click the green button to run the demo code.\nThen you can get the sound sensor and light sensor data as below."),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/demo5.jpg",alt:"enter image description here"})),(0,a.yg)("h3",{id:"project-6-detecting-motion"},"Project 6: Detecting Motion"),(0,a.yg)("h4",{id:"materials-required-5"},"Materials Required"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Step 1. Prepare the below stuffs:")),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Pi Pico"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove Shield for Pi Pico"),(0,a.yg)("th",{parentName:"tr",align:null},"grove servo"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove Mini Fan"),(0,a.yg)("th",{parentName:"tr",align:null},"Grove mini pir motion sensor"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/Picoboard1.jpg",alt:"enter image description here"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/picobaseshield.png",alt:"enter image description here"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove-Servo/img/Grove%20Servo_s.jpg",alt:"enter image description here"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/groveminifan.png",alt:"enter image description here"})),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/minipir.png",alt:"enter image description here"}))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Raspberry-Pi-Pico-p-4832.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Shield-for-Pi-Pico-v1-0-p-4846.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Servo-p-1241.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Mini-Fan-p-1819.html"},"Get ONE Now")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-mini-PIR-motion-sensor-p-2930.html"},"Get ONE Now"))))),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Step 2. Connect Grove servo to analog pin 1 of Base Shield."),(0,a.yg)("li",{parentName:"ul"},"Step 3. Connect Grove Mini fan to port D16 of Base Shield."),(0,a.yg)("li",{parentName:"ul"},"Step 4. Connect Grove Mini pir motion sensor to port D18 of Base Shield."),(0,a.yg)("li",{parentName:"ul"},"Step 5. Plug Grove Shield for Pi Pico into Pi Pico."),(0,a.yg)("li",{parentName:"ul"},"Step 6. Connect Pi Pico to PC through a USB cable.")),(0,a.yg)("h4",{id:"software-3"},"Software"),(0,a.yg)("p",null,"Please refer to the demo1 software part."),(0,a.yg)("p",null,"Copy below code to the Thonny IDE at first."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"from machine import Pin,ADC,PWM\nfrom time import sleep\nimport utime\n\nminiFun = Pin(16, Pin.OUT)  \nminiPir = Pin(18, Pin.IN)  \n\npwm_Servo=PWM(Pin(27))\npwm_Servo.freq(500)\nServo_Val =0  \n\nwhile True:\n    \n    if  miniPir.value() == 1 :\n        miniFun.value(1)\n            \n        while  Servo_Val<65535:\n            Servo_Val=Servo_Val+50\n            utime.sleep_ms(1)\n            pwm_Servo.duty_u16(Servo_Val)\n        while Servo_Val>0: \n            Servo_Val=Servo_Val-50\n            utime.sleep_ms(1)\n            pwm_Servo.duty_u16(Servo_Val)\n        \n    else :\n        miniFun.value(0)\n        \n        pwm_Servo.duty_u16(0)    \n       \n          \n\n")),(0,a.yg)("p",null,"Now please click the green button to run the demo code.\nThen you can get the grove mini fan and grove servo run When you hands swiping past the pir sensor as below."),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/tutieshi_480x272_3s.gif",alt:null})),(0,a.yg)("h2",{id:"schematic-online-viewer"},"Schematic Online Viewer"),(0,a.yg)("div",{className:"altium-ecad-viewer","data-project-src":"https:///files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/res/Grove_Shield_for_Pi_Pico.zip",style:{borderRadius:"0px 0px 4px 4px",height:500,borderStyle:"solid",borderWidth:1,borderColor:"rgb(241, 241, 241)",overflow:"hidden",maxWidth:1280,maxHeight:700,boxSizing:"border-box"}}),(0,a.yg)("h2",{id:"resources"},"Resources"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"[PDF]")," ",(0,a.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/pico_python_sdk.pdf"},"Pico python SDK")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"[PDF]")," ",(0,a.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/Grove_shield_for_PI_PICOv1.0SCH.pdf"},"SCH")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"[Eagle]")," ",(0,a.yg)("a",{parentName:"li",href:"https:///files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/res/Grove_Shield_for_Pi_Pico.zip"},"PCB&SCH"))),(0,a.yg)("h2",{id:"course-resources"},"Course Resources"),(0,a.yg)("div",{align:"center"},(0,a.yg)("img",{width:"{400}",src:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/book.png"})),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"[ZIP]")," ",(0,a.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/Seeed_EDU/Course_documents/Beginner's-Guide-for-Raspberry-Pi-Pico.zip"},"Beginners Guide of Raspberry Pi Pico Based on MicroPython")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"[ZIP]")," ",(0,a.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/Codes.rar"},"Codes")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"[ZIP]")," ",(0,a.yg)("a",{parentName:"li",href:"https:///files.seeedstudio.com/wiki/Grove_Shield_for_Pi_Pico_V1.0/Libraries.rar"},"Libraries"))),(0,a.yg)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,a.yg)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,a.yg)("div",{class:"button_tech_support_container"},(0,a.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,a.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,a.yg)("div",{class:"button_tech_support_container"},(0,a.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,a.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}m.isMDXComponent=!0}}]);