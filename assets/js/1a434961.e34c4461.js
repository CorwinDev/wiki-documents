"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[67544],{15680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>c});var r=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var x=r.createContext({}),p=function(e){var n=r.useContext(x),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(x.Provider,{value:n},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,x=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(t),u=i,c=d["".concat(x,".").concat(u)]||d[u]||g[u]||a;return t?r.createElement(c,o(o({ref:n},s),{},{components:t})):r.createElement(c,o({ref:n},s))}));function c(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=u;var l={};for(var x in n)hasOwnProperty.call(n,x)&&(l[x]=n[x]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},94138:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>x,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(9668),i=(t(96540),t(15680));const a={description:"Grove\u7aef\u53e3",title:"Grove\u7aef\u53e3",keywords:["Wio_terminal Hardware_Overview","Input&Output"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/Wio-Terminal-Grove",last_update:{date:"3/07/2024",author:"\u91d1\u83ca"}},o="Grove \u7aef\u53e3",l={unversionedId:"zh-CN/Sensor/Wio_Terminal/Hardware_Overview/Input&Output/CN-Wio-Terminal-Grove",id:"zh-CN/Sensor/Wio_Terminal/Hardware_Overview/Input&Output/CN-Wio-Terminal-Grove",title:"Grove\u7aef\u53e3",description:"Grove\u7aef\u53e3",source:"@site/docs/zh-CN/Sensor/Wio_Terminal/Hardware_Overview/Input&Output/CN-Wio-Terminal-Grove.md",sourceDirName:"zh-CN/Sensor/Wio_Terminal/Hardware_Overview/Input&Output",slug:"/cn/Wio-Terminal-Grove",permalink:"/cn/Wio-Terminal-Grove",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Sensor/Wio_Terminal/Hardware_Overview/Input&Output/CN-Wio-Terminal-Grove.md",tags:[],version:"current",lastUpdatedBy:"\u91d1\u83ca",lastUpdatedAt:1709769600,formattedLastUpdatedAt:"Mar 7, 2024",frontMatter:{description:"Grove\u7aef\u53e3",title:"Grove\u7aef\u53e3",keywords:["Wio_terminal Hardware_Overview","Input&Output"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/Wio-Terminal-Grove",last_update:{date:"3/07/2024",author:"\u91d1\u83ca"}},sidebar:"CNSidebar",previous:{title:"SPI",permalink:"/cn/Wio-Terminal-IO-SPI"},next:{title:"\u52a0\u901f\u5ea6\u8ba1\u6982\u8ff0",permalink:"/cn/Wio-Terminal-IMU-Overview"}},x={},p=[{value:"Wio Terminal\u4e0eGrove - TDS\u4f20\u611f\u5668",id:"wio-terminal\u4e0egrove---tds\u4f20\u611f\u5668",level:2},{value:"\u5e93\u7684\u5b89\u88c5",id:"\u5e93\u7684\u5b89\u88c5",level:3},{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:3},{value:"Wio Terminal\u4e0eGrove - OLED\u663e\u793a\u5c4f",id:"wio-terminal\u4e0egrove---oled\u663e\u793a\u5c4f",level:2},{value:"\u5e93\u7684\u5b89\u88c5",id:"\u5e93\u7684\u5b89\u88c5-1",level:3},{value:"U8g2\u521d\u59cb\u5316",id:"u8g2\u521d\u59cb\u5316",level:3},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5",level:4},{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801-1",level:3},{value:"Wio Terminal\u4e0eGrove - \u6e29\u5ea6\u4f20\u611f\u5668",id:"wio-terminal\u4e0egrove---\u6e29\u5ea6\u4f20\u611f\u5668",level:2},{value:"\u5e93\u7684\u5b89\u88c5",id:"\u5e93\u7684\u5b89\u88c5-2",level:3},{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801-2",level:3},{value:"Wio Terminal\u4e0eGrove - GPS\u4f20\u611f\u5668",id:"wio-terminal\u4e0egrove---gps\u4f20\u611f\u5668",level:2},{value:"\u5e93\u7684\u5b89\u88c5",id:"\u5e93\u7684\u5b89\u88c5-3",level:3},{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801-3",level:3}],s={toc:p},d="wrapper";function g(e){let{components:n,...t}=e;return(0,i.yg)(d,(0,r.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"grove-\u7aef\u53e3"},"Grove \u7aef\u53e3"),(0,i.yg)("p",null,"\u8fd9\u4e2a\u4ed3\u5e93\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728Wio Terminal\u4e0a\u4e0e ",(0,i.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/grove.html"},(0,i.yg)("strong",{parentName:"a"},"Grove \u751f\u6001\u7cfb\u7edf"))," \u4e00\u8d77\u4f7f\u7528\u3002"),(0,i.yg)("p",null,"\u501f\u52a9Grove\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u66f4\u7b80\u5355\u7684\u8fde\u63a5\u65b9\u5f0f\u66f4\u5feb\u5730\u8fdb\u884c\u539f\u578b\u5236\u4f5c\uff01"),(0,i.yg)("h2",{id:"wio-terminal\u4e0egrove---tds\u4f20\u611f\u5668"},"Wio Terminal\u4e0eGrove - TDS\u4f20\u611f\u5668"),(0,i.yg)("p",null,"\u672c\u90e8\u5206\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 ",(0,i.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Grove-TDS-Sensor/"},"Grove - TDS \u4f20\u611f\u5668")," \u4e0eWio Terminal\uff0c\u5728\u7ebf\u56fe\u8868\u4e0a\u663e\u793a\u5b9e\u65f6\u7684TDS\u8bfb\u6570\uff01"),(0,i.yg)("h3",{id:"\u5e93\u7684\u5b89\u88c5"},"\u5e93\u7684\u5b89\u88c5"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"\u5b89\u88c5 ",(0,i.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Wio-Terminal-LCD-Overview/"},"LCD")," \u5e93\u3002")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"\u5b89\u88c5 ",(0,i.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Wio-Terminal-LCD-Linecharts/"},"Linechart")," \u5e93\u3002"))),(0,i.yg)("h3",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,i.yg)("p",null,"\u5c06Grove TDS\u4f20\u611f\u5668\u8fde\u63a5\u5230Wio Terminal\u7684Grove D/A\u5f15\u811a\uff0c\u4e0a\u4f20\u4ee3\u7801\u5e76\u68c0\u67e5\u7ed3\u679c"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'#include"seeed_line_chart.h" //include the library\nTFT_eSPI tft;\n\n#define max_size 50 //maximum size of data\ndoubles data; //Initilising a doubles type to store data\nTFT_eSprite spr = TFT_eSprite(&tft);  // Sprite \n\n#define sensorPin A0 //Analog pin\n\nint sensorValue = 0;\nfloat tdsValue = 0;\nfloat Voltage = 0;\n\nvoid setup() {\n    pinMode(sensorPin, INPUT);\n    tft.begin();\n    tft.setRotation(3);\n    spr.createSprite(TFT_HEIGHT,TFT_WIDTH);\n}\n\nvoid loop() {\n    spr.fillSprite(TFT_WHITE);\n\n    sensorValue = analogRead(sensorPin);\n    Voltage = sensorValue*5/1024.0; //Convert analog reading to Voltage\n    tdsValue=(133.42*Voltage*Voltage*Voltage - 255.86*Voltage*Voltage + 857.39*Voltage)*0.5; //Convert voltage value to TDS value\n\n    if (data.size() == max_size) {\n        data.pop();//this is used to remove the first read variable\n    }\n    data.push(tdsValue); //read variables and store in data\n\n    //Settings for the line graph title\n    auto header =  text(0, 0)\n                .value("TDS Reading")\n                .align(center)\n                .valign(vcenter)\n                .width(tft.width())\n                .thickness(3);\n\n    header.height(header.font_height() * 2);\n    header.draw(); //Header height is the twice the height of the font\n\n  //Settings for the line graph\n    auto content = line_chart(20, header.height()); //(x,y) where the line graph begins\n         content\n                .height(tft.height() - header.height() * 1.5) //actual height of the line chart\n                .width(tft.width() - content.x() * 2) //actual width of the line chart\n                .based_on(0.0) //Starting point of y-axis, must be a float\n                .show_circle(true) //drawing a cirle at each point, default is on.\n                .value(data) //passing through the data to line graph\n                .color(TFT_RED) //Setting the color for the line\n                .draw();\n\n    spr.pushSprite(0, 0);\n    delay(50);\n}\n')),(0,i.yg)("h2",{id:"wio-terminal\u4e0egrove---oled\u663e\u793a\u5c4f"},"Wio Terminal\u4e0eGrove - OLED\u663e\u793a\u5c4f"),(0,i.yg)("p",null,"\u5982\u679c\u60a8\u9700\u8981\u5728Wio Terminal\u4e0a\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u5c4f\u5e55\u8fdb\u884c\u663e\u793a, ",(0,i.yg)("strong",{parentName:"p"},'Grove - OLED \u663e\u793a\u5c4f 0.96\u82f1\u5bf8"')," \u5c06\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u9009\u62e9\u3002\u5b83\u53ef\u4ee5\u7528\u4e8e\u663e\u793a\u56fe\u5f62\u548c\u6570\u636e\uff0c\u4e3aWio Terminal\u6dfb\u52a0\u66f4\u591a\u7684\u4ea4\u4e92\u529f\u80fd\u3002"),(0,i.yg)("h3",{id:"\u5e93\u7684\u5b89\u88c5-1"},"\u5e93\u7684\u5b89\u88c5"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"\u5728Arduino IDE\u7684 ",(0,i.yg)("strong",{parentName:"li"},"Library Manager")," \u5b89\u88c5 ",(0,i.yg)("strong",{parentName:"li"},"U8g2")," \u5e93\uff0c\u5bfc\u822a\u5230 ",(0,i.yg)("strong",{parentName:"li"},"Sketch")," -> ",(0,i.yg)("strong",{parentName:"li"},"Include Library")," -> ",(0,i.yg)("strong",{parentName:"li"},"Manage Libraries"),"... \u7136\u540e\u5728\u5e93\u7ba1\u7406\u5668\u4e2d\u641c\u7d22\u5e76\u5b89\u88c5  ",(0,i.yg)("inlineCode",{parentName:"li"},"U8g2")," \u5e93\u3002")),(0,i.yg)("h3",{id:"u8g2\u521d\u59cb\u5316"},"U8g2\u521d\u59cb\u5316"),(0,i.yg)("p",null,"\u4f7f\u7528u8g2\u7684\u8f6f\u4ef6I2C\u521d\u59cb\u5316OLED\u663e\u793a\u5c4f\uff0c\u4f7f\u7528SCL\u4f5c\u4e3a\u65f6\u949f\u4fe1\u53f7\uff0cSDA\u4f5c\u4e3a\u6570\u636e\u4fe1\u53f7\uff1a"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"U8G2_SSD1306_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);\n")),(0,i.yg)("h4",{id:"\u4f7f\u7528\u65b9\u6cd5"},"\u4f7f\u7528\u65b9\u6cd5"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"\u8c03\u7528 u8g2.firstPage()\u3002")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"\u5f00\u59cb\u4e00\u4e2a do-while \u5faa\u73af\u3002")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"\u5728\u5faa\u73af\u4f53\u5185\uff1a\u4f7f\u7528\u5e38\u89c4\u7684\u7ed8\u56fe\u547d\u4ee4\u7ed8\u5236\u5185\u5bb9\u3002")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"\u53ea\u8981 u8g2.nextPage() \u8fd4\u56detrue\uff0c\u5c31\u5faa\u73af\u6267\u884c\u3002"))),(0,i.yg)("p",null,"\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/olikraus/u8g2/wiki"},"u8g2")),(0,i.yg)("h3",{id:"\u5b8c\u6574\u4ee3\u7801-1"},"\u5b8c\u6574\u4ee3\u7801"),(0,i.yg)("p",null,"\u5c06Grove OLED\u663e\u793a\u5c4f0.96\u82f1\u5bf8\u8fde\u63a5\u5230Wio Terminal\u7684Grove I2C\u5f15\u811a\uff0c\u5e76\u68c0\u67e5\u7ed3\u679c\uff01"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <U8g2lib.h>\n\nU8G2_SSD1306_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);\n\nconst unsigned char WAVE[] PROGMEM = {\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0xF0,0x00,0xFF,0x00,0x0F,0xF0,0x00,\n  0xFC,0x03,0xFF,0xC0,0x3F,0xFC,0x00,\n  0xFE,0x07,0xFF,0xE0,0x7F,0xFE,0x00,\n  0x1F,0xFF,0x81,0xFF,0xF8,0x1F,0xC0,\n  0x0F,0xFF,0x00,0xFF,0xF0,0x0F,0xC0,\n  0x03,0xFC,0x00,0x3F,0xC0,0x03,0xC0,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0xE0,0x00,0x7E,0x00,0x07,0xE0,0x00,\n  0xF8,0x01,0xFF,0x80,0x1F,0xF8,0x00,\n  0xFC,0x03,0xFF,0xC0,0x3F,0xFC,0x00,\n  0xFF,0x0F,0xFF,0xF0,0xFF,0xFF,0x00,\n  0x1F,0xFF,0x81,0xFF,0xF8,0x1F,0xC0,\n  0x07,0xFE,0x00,0x7F,0xE0,0x07,0xC0,\n  0x01,0xF8,0x00,0x1F,0x80,0x01,0xC0,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0xF0,0x00,0xFF,0x00,0x0F,0xF0,0x00,\n  0xF8,0x01,0xFF,0x80,0x1F,0xF8,0x00,\n  0xFE,0x07,0xFF,0xE0,0x7F,0xFE,0x00,\n  0x3F,0xFF,0xC3,0xFF,0xFC,0x3F,0xC0,\n  0x0F,0xFF,0x00,0xFF,0xF0,0x0F,0xC0,\n  0x07,0xFE,0x00,0x7F,0xE0,0x07,0xC0,\n  0x00,0xF0,0x00,0x0F,0x00,0x00,0xC0,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x80,0x00,0x18,0x00,0x01,0x80,0x00,\n  0xF0,0x00,0xFF,0x00,0x0F,0xF0,0x00,\n  0xFC,0x03,0xFF,0xC0,0x3F,0xFC,0x00,\n  0xFF,0x0F,0xFF,0xF0,0xFF,0xFF,0x00,\n  0x1F,0xFF,0x81,0xFF,0xF8,0x1F,0xC0,\n  0x0F,0xFF,0x00,0xFF,0xF0,0x0F,0xC0,\n  0x03,0xFC,0x00,0x3F,0xC0,0x03,0xC0,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n  0x00,0x00,0x00,0x00,0x00,0x00,0x00\n};\n\nvoid setup() {\n  u8g2.begin();\n}\n\nvoid loop() {\n  u8g2.firstPage();\n    do {\n      u8g2.setFont(u8g2_font_t0_16b_mr);\n      u8g2.drawXBMP(40, 0, 50, 50, WAVE);\n      u8g2.setCursor(20, 60);\n      u8g2.print("Wio Terminal");\n    } while (u8g2.nextPage());\n}\n')),(0,i.yg)("h2",{id:"wio-terminal\u4e0egrove---\u6e29\u5ea6\u4f20\u611f\u5668"},"Wio Terminal\u4e0eGrove - \u6e29\u5ea6\u4f20\u611f\u5668"),(0,i.yg)("p",null,"\u672c\u90e8\u5206\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 ",(0,i.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Grove-Temperature_Sensor_V1.2/"},"Grove - \u6e29\u5ea6\u4f20\u611f\u5668")," \u4e0eWio Terminal\u4e00\u8d77\u663e\u793a\u5b9e\u65f6\u73af\u5883\u6e29\u5ea6\u8bfb\u6570\u3002"),(0,i.yg)("h3",{id:"\u5e93\u7684\u5b89\u88c5-2"},"\u5e93\u7684\u5b89\u88c5"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"\u5b89\u88c5 ",(0,i.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Wio-Terminal-LCD-Overview/"},"LCD")," \u5e93\u3002")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"\u5b89\u88c5 ",(0,i.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Wio-Terminal-LCD-Histogram/"},"Linechart")," \u5e93\u3002"))),(0,i.yg)("h3",{id:"\u5b8c\u6574\u4ee3\u7801-2"},"\u5b8c\u6574\u4ee3\u7801"),(0,i.yg)("p",null,"\u5c06Grove\u6e29\u5ea6\u4f20\u611f\u5668\u8fde\u63a5\u5230Wio Terminal\u7684Grove D/A\u5f15\u811a\uff0c\u4e0a\u4f20\u4ee3\u7801\u5e76\u68c0\u67e5\u7ed3\u679c\uff01"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'#include"seeed_line_chart.h" //include the library\n#include <math.h>\n\nTFT_eSPI tft;\n\n#define max_size 50 //maximum size of data\ndoubles data; //Initilising a doubles type to store data\nTFT_eSprite spr = TFT_eSprite(&tft);  // Sprite \n\nconst int B = 4275;               // B value of the thermistor\nconst int R0 = 100000;            // R0 = 100k\nconst int pinTempSensor = A0;     // Grove - Temperature Sensor connect to A0\n\nvoid setup() {\n    pinMode(pinTempSensor, INPUT);\n    tft.begin();\n    tft.setRotation(3);\n    spr.createSprite(TFT_HEIGHT,TFT_WIDTH);\n}\n\nvoid loop() {\n    spr.fillSprite(TFT_DARKCYAN);\n\n    int a = analogRead(pinTempSensor);\n    float R = 1023.0/a-1.0;\n    R = R0*R;\n\n    float temperature = 1.0/(log(R/R0)/B+1/298.15)-273.15; // convert to temperature via datasheet\n\n    if (data.size() == max_size) {\n        data.pop();//this is used to remove the first read variable\n    }\n    data.push(temperature); //read variables and store in data\n\n    //Settings for the line graph title\n    auto header =  text(0, 0)\n                .value("Temperature Reading")\n                .align(center)\n                .color(TFT_WHITE)\n                .valign(vcenter)\n                .width(tft.width())\n                .thickness(2);\n\n    header.height(header.font_height() * 2);\n    header.draw(); //Header height is the twice the height of the font\n\n  //Settings for the line graph\n    auto content = line_chart(20, header.height()); //(x,y) where the line graph begins\n         content\n                .height(tft.height() - header.height() * 1.5) //actual height of the line chart\n                .width(tft.width() - content.x() * 2) //actual width of the line chart\n                .based_on(0.0) //Starting point of y-axis, must be a float\n                .show_circle(true) //drawing a cirle at each point, default is on.\n                .y_role_color(TFT_WHITE)\n                .x_role_color(TFT_WHITE)\n                .value(data) //passing through the data to line graph\n                .color(TFT_RED) //Setting the color for the line\n                .draw();\n\n    spr.pushSprite(0, 0);\n    delay(50);\n}\n')),(0,i.yg)("h2",{id:"wio-terminal\u4e0egrove---gps\u4f20\u611f\u5668"},"Wio Terminal\u4e0eGrove - GPS\u4f20\u611f\u5668"),(0,i.yg)("p",null,"\u672c\u90e8\u5206\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528Grove - GPS\u4f20\u611f\u5668\u4e0eWio Terminal\u4e00\u8d77\u83b7\u53d6\u5b9e\u65f6GPS\u4fe1\u606f\u3002\u4f20\u611f\u5668\u672c\u8eab\u8f93\u51faNMEA GPS\u6570\u636e\uff0c\u6211\u4eec\u5c06\u4f7f\u7528TinyGPSPlus\u5e93\u5c06\u6570\u636e\u89e3\u6790\u4e3a\u53ef\u8bfb\u4fe1\u606f\u3002"),(0,i.yg)("h3",{id:"\u5e93\u7684\u5b89\u88c5-3"},"\u5e93\u7684\u5b89\u88c5"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"\u5b89\u88c5 ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/mikalhart/TinyGPSPlus"},"TinyGPSPlus \u5e93"),"\u3002")),(0,i.yg)("h3",{id:"\u5b8c\u6574\u4ee3\u7801-3"},"\u5b8c\u6574\u4ee3\u7801"),(0,i.yg)("p",null,"\u5c06Grove GPS\u4f20\u611f\u5668\u8fde\u63a5\u5230Wio Terminal\u7684Grove I2C\u5f15\u811a\uff08\u5de6\u4fa7\uff09\uff0c\u4e0a\u4f20\u4ee3\u7801\u5e76\u5728\u4e32\u884c\u76d1\u89c6\u5668\u4e2d\u68c0\u67e5\u7ed3\u679c\uff08\u6ce2\u7279\u7387\uff1a9600\uff09\uff01"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <TinyGPS++.h>\n#include <wiring_private.h>\n\nstatic const uint32_t GPSBaud = 9600;\n\n// The TinyGPS++ object\nTinyGPSPlus gps;\n\n// The serial connection to the GPS device - Left side Grove connector.\n// Left side Grove connector shares pins with I2C1 of 40 pin connector.\nstatic Uart Serial3(&sercom3, PIN_WIRE_SCL, PIN_WIRE_SDA, SERCOM_RX_PAD_1, UART_TX_PAD_0);\n\nvoid setup()\n{\n  Serial.begin(115200);\n\n  Serial3.begin(GPSBaud);\n  pinPeripheral(PIN_WIRE_SCL, PIO_SERCOM_ALT);\n  pinPeripheral(PIN_WIRE_SCL, PIO_SERCOM_ALT);\n}\n \nvoid loop()\n{\n  // This sketch displays information every time a new sentence is correctly encoded.\n  while (Serial3.available() > 0)\n    if (gps.encode(Serial3.read()))\n      displayInfo();\n \n  if (millis() > 5000 && gps.charsProcessed() < 10)\n  {\n    Serial.println(F("No GPS detected: check wiring."));\n    while(true);\n  }\n}\n\nvoid displayInfo()\n{\n  Serial.print(F("Location: ")); \n  if (gps.location.isValid())\n  {\n    Serial.print(gps.location.lat(), 6);\n    Serial.print(F(","));\n    Serial.print(gps.location.lng(), 6);\n  }\n  else\n  {\n    Serial.print(F("INVALID"));\n  }\n\n  Serial.print(F("  Date/Time: "));\n  if (gps.date.isValid())\n  {\n    Serial.print(gps.date.month());\n    Serial.print(F("/"));\n    Serial.print(gps.date.day());\n    Serial.print(F("/"));\n    Serial.print(gps.date.year());\n  }\n  else\n  {\n    Serial.print(F("INVALID"));\n  }\n\n  Serial.print(F(" "));\n  if (gps.time.isValid())\n  {\n    if (gps.time.hour() < 10) Serial.print(F("0"));\n    Serial.print(gps.time.hour());\n    Serial.print(F(":"));\n    if (gps.time.minute() < 10) Serial.print(F("0"));\n    Serial.print(gps.time.minute());\n    Serial.print(F(":"));\n    if (gps.time.second() < 10) Serial.print(F("0"));\n    Serial.print(gps.time.second());\n    Serial.print(F("."));\n    if (gps.time.centisecond() < 10) Serial.print(F("0"));\n    Serial.print(gps.time.centisecond());\n  }\n  else\n  {\n    Serial.print(F("INVALID"));\n  }\n\n  Serial.println();\n}\n\nvoid SERCOM3_0_Handler()\n{\n  Serial3.IrqHandler();\n}\nvoid SERCOM3_1_Handler()\n{\n  Serial3.IrqHandler();\n}\nvoid SERCOM3_2_Handler()\n{\n  Serial3.IrqHandler();\n}\nvoid SERCOM3_3_Handler()\n{\n  Serial3.IrqHandler();\n}\n')))}g.isMDXComponent=!0}}]);