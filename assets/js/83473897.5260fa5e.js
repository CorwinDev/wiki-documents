"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[50154],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>I});var i=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),c=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return i.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=r,I=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return t?i.createElement(I,a(a({ref:n},p),{},{components:t})):i.createElement(I,a({ref:n},p))}));function I(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:r,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},94110:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=t(58168),r=(t(96540),t(15680));const o={description:"MIDI",title:"MIDI",keywords:["Wio_terminal USB_Client"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/Wio-Terminal-USBCLIENT-MIDI",last_update:{date:"3/07/2024",author:"jessie"}},a="\u5c06Wio Terminal\u7528\u4f5cUSB MIDI\u8bbe\u5907",l={unversionedId:"zh-CN/Sensor/Wio_Terminal/Tutorial/Wio_Terminal_USB_Client/CN-Wio-Terminal-USBCLIENT-MIDI",id:"zh-CN/Sensor/Wio_Terminal/Tutorial/Wio_Terminal_USB_Client/CN-Wio-Terminal-USBCLIENT-MIDI",title:"MIDI",description:"MIDI",source:"@site/docs/zh-CN/Sensor/Wio_Terminal/Tutorial/Wio_Terminal_USB_Client/CN-Wio-Terminal-USBCLIENT-MIDI.md",sourceDirName:"zh-CN/Sensor/Wio_Terminal/Tutorial/Wio_Terminal_USB_Client",slug:"/cn/Wio-Terminal-USBCLIENT-MIDI",permalink:"/cn/Wio-Terminal-USBCLIENT-MIDI",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Sensor/Wio_Terminal/Tutorial/Wio_Terminal_USB_Client/CN-Wio-Terminal-USBCLIENT-MIDI.md",tags:[],version:"current",lastUpdatedBy:"jessie",lastUpdatedAt:1709769600,formattedLastUpdatedAt:"Mar 7, 2024",frontMatter:{description:"MIDI",title:"MIDI",keywords:["Wio_terminal USB_Client"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/Wio-Terminal-USBCLIENT-MIDI",last_update:{date:"3/07/2024",author:"jessie"}},sidebar:"CNSidebar",previous:{title:"\u9f20\u6807",permalink:"/cn/Wio-Terminal-USBCLIENT-Mouse"},next:{title:"\u4f7f\u7528Wio Terminal\u6784\u5efaWindows/MacOS\u7684HMI\u663e\u793a\u5668",permalink:"/cn/Wio-Terminal-HMI-Usermode-SDK"}},s={},c=[{value:"\u5b89\u88c5\u5e93",id:"\u5b89\u88c5\u5e93",level:2},{value:"\u83b7\u53d6\u7ed3\u679c",id:"\u83b7\u53d6\u7ed3\u679c",level:2},{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:2}],p={toc:c},u="wrapper";function d(e){let{components:n,...t}=e;return(0,r.yg)(u,(0,i.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"\u5c06wio-terminal\u7528\u4f5cusb-midi\u8bbe\u5907"},"\u5c06Wio Terminal\u7528\u4f5cUSB MIDI\u8bbe\u5907"),(0,r.yg)("p",null,"\u8be5\u5b58\u50a8\u5e93\u4ecb\u7ecd\u4e86\u5982\u4f55\u5c06Wio Terminal\u7528\u4f5cUSB MIDI\uff08\u97f3\u4e50\u5668\u6570\u5b57\u63a5\u53e3\uff09\u8bbe\u5907\uff0c\u4f7f\u5176\u53ef\u4ee5\u7528\u4e8e\u63a7\u5236\u97f3\u4e50\u5668\uff01"),(0,r.yg)("div",{align:"center"},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Wio-Terminal/img/20200110105918.gif"})),(0,r.yg)("h2",{id:"\u5b89\u88c5\u5e93"},"\u5b89\u88c5\u5e93"),(0,r.yg)("p",null,"\u6b64\u793a\u4f8b\u8fd8\u9700\u8981\u989d\u5916\u7684Arduino MIDI\u5e93\uff1a"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"\u8bbf\u95ee ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/FortySevenEffects/arduino_midi_library"},"Arduino MIDI Library")," \u5b58\u50a8\u5e93\uff0c\u5e76\u5c06\u6574\u4e2a\u5b58\u50a8\u5e93\u4e0b\u8f7d\u5230\u672c\u5730\u9a71\u52a8\u5668\u3002")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"\u73b0\u5728\uff0c\u53ef\u4ee5\u5c06\u5e93\u5b89\u88c5\u5230Arduino IDE\u4e2d\u3002\u6253\u5f00Arduino IDE\uff0c\u70b9\u51fb ",(0,r.yg)("inlineCode",{parentName:"p"},"sketch")," -> ",(0,r.yg)("inlineCode",{parentName:"p"},"Include Library")," -> ",(0,r.yg)("inlineCode",{parentName:"p"},"Add .ZIP Library"),", \u9009\u62e9\u521a\u521a\u4e0b\u8f7d\u7684 ",(0,r.yg)("inlineCode",{parentName:"p"},"Seeed_Arduino_LCD")," \u6587\u4ef6\u3002"))),(0,r.yg)("p",null,(0,r.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Wio-Terminal/img/Xnip2019-11-21_15-50-13.jpg",alt:"InstallLibrary"})),(0,r.yg)("h2",{id:"\u83b7\u53d6\u7ed3\u679c"},"\u83b7\u53d6\u7ed3\u679c"),(0,r.yg)("p",null,"\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cWio Terminal\u8fde\u63a5\u5230\u6211\u7684Macbook\uff0c\u5e76\u4f7f\u7528macOS\u9644\u5e26\u7684 ",(0,r.yg)("inlineCode",{parentName:"p"},"Audio MIDI Setup")," \u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u6d4b\u8bd5\u3002\u60a8\u8fd8\u53ef\u4ee5\u5728 ",(0,r.yg)("inlineCode",{parentName:"p"},"Arduino IDE"),"\u7684\u4e32\u884c\u76d1\u89c6\u5668\u4e2d\u67e5\u770b\u4e32\u884c\u6570\u636e\u3002\u5982\u679c\u60a8\u6709\u53ef\u7528\u7684MIDI\u8bbe\u5907\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u8be5\u8bbe\u5907\u4ee5\u83b7\u5f97\u66f4\u903c\u771f\u7684\u573a\u666f\uff01"),(0,r.yg)("h2",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,r.yg)("p",null,"\u6709\u5173\u66f4\u591a\u529f\u80fd\uff0c\u8bf7\u53c2\u8003TinyUSB\u5e93\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <Arduino.h>\n#include <Adafruit_TinyUSB.h>\n#include <MIDI.h>\n\n// USB MIDI object\nAdafruit_USBD_MIDI usb_midi;\n\n// Create a new instance of the Arduino MIDI Library,\n// and attach usb_midi as the transport.\nMIDI_CREATE_INSTANCE(Adafruit_USBD_MIDI, usb_midi, MIDI);\n\n// Variable that holds the current position in the sequence.\nuint32_t position = 0;\n\n// Store example melody as an array of note values\nbyte note_sequence[] = {\n  74,78,81,86,90,93,98,102,57,61,66,69,73,78,81,85,88,92,97,100,97,92,88,85,81,78,\n  74,69,66,62,57,62,66,69,74,78,81,86,90,93,97,102,97,93,90,85,81,78,73,68,64,61,\n  56,61,64,68,74,78,81,86,90,93,98,102\n};\n\nvoid setup()\n{\n  pinMode(LED_BUILTIN, OUTPUT);\n  \n  // Initialize MIDI, and listen to all MIDI channels\n  // This will also call usb_midi\'s begin()\n  MIDI.begin(MIDI_CHANNEL_OMNI);\n\n  // Attach the handleNoteOn function to the MIDI Library. It will\n  // be called whenever the Bluefruit receives MIDI Note On messages.\n  MIDI.setHandleNoteOn(handleNoteOn);\n\n  // Do the same for MIDI Note Off messages.\n  MIDI.setHandleNoteOff(handleNoteOff);\n\n  Serial.begin(115200);\n\n  // wait until device mounted\n  while( !USBDevice.mounted() ) delay(1);\n}\n\nvoid loop()\n{\n  static uint32_t start_ms = 0;\n  if ( millis() - start_ms > 266 )\n  {\n    start_ms += 266;\n    \n    // Setup variables for the current and previous\n    // positions in the note sequence.\n    int previous = position - 1;\n  \n    // If we currently are at position 0, set the\n    // previous position to the last note in the sequence.\n    if (previous < 0) {\n      previous = sizeof(note_sequence) - 1;\n    }\n  \n    // Send Note On for current position at full velocity (127) on channel 1.\n    MIDI.sendNoteOn(note_sequence[position], 127, 1);\n  \n    // Send Note Off for previous note.\n    MIDI.sendNoteOff(note_sequence[previous], 0, 1);\n  \n    // Increment position\n    position++;\n  \n    // If we are at the end of the sequence, start over.\n    if (position >= sizeof(note_sequence)) {\n      position = 0;\n    }\n  }\n\n  // read any new MIDI messages\n  MIDI.read();  \n}\n\nvoid handleNoteOn(byte channel, byte pitch, byte velocity)\n{\n  // Log when a note is pressed.\n  Serial.printf("Note on: channel = %d, pitch = %d, velocity - %d", channel, pitch, velocity);\n  Serial.println();\n}\n\nvoid handleNoteOff(byte channel, byte pitch, byte velocity)\n{\n  // Log when a note is released.\n  Serial.printf("Note off: channel = %d, pitch = %d, velocity - %d", channel, pitch, velocity);\n  Serial.println();\n}\n')))}d.isMDXComponent=!0}}]);