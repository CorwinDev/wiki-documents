"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[58994],{15680:(e,t,a)=>{a.d(t,{xA:()=>g,yg:()=>y});var i=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,i,r=function(e,t){if(null==e)return{};var a,i,r={},n=Object.keys(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=i.createContext({}),p=function(e){var t=i.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},g=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,l=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),m=p(a),u=r,y=m["".concat(l,".").concat(u)]||m[u]||d[u]||n;return a?i.createElement(y,o(o({ref:t},g),{},{components:a})):i.createElement(y,o({ref:t},g))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,o=new Array(n);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<n;p++)o[p]=a[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9742:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>y,frontMatter:()=>n,metadata:()=>s,toc:()=>p});var i=a(9668),r=(a(96540),a(15680));const n={description:"Grove - 3-Axis Digitial Compass v2.0",title:"Grove - 3-Axis Digitial Compass v2.0",keywords:["Grove"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/Grove-3-Axis_Digitial_Compass_v2.0",last_update:{date:"1/5/2023",author:"shuxu hu"}},o=void 0,s={unversionedId:"Sensor/Grove/Grove_Sensors/Accelerometer/Grove-3-Axis_Digitial_Compass_v2.0",id:"Sensor/Grove/Grove_Sensors/Accelerometer/Grove-3-Axis_Digitial_Compass_v2.0",title:"Grove - 3-Axis Digitial Compass v2.0",description:"Grove - 3-Axis Digitial Compass v2.0",source:"@site/docs/Sensor/Grove/Grove_Sensors/Accelerometer/Grove-3-Axis_Digitial_Compass_v2.0.md",sourceDirName:"Sensor/Grove/Grove_Sensors/Accelerometer",slug:"/Grove-3-Axis_Digitial_Compass_v2.0",permalink:"/Grove-3-Axis_Digitial_Compass_v2.0",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/Grove/Grove_Sensors/Accelerometer/Grove-3-Axis_Digitial_Compass_v2.0.md",tags:[],version:"current",lastUpdatedBy:"shuxu hu",lastUpdatedAt:1672876800,formattedLastUpdatedAt:"Jan 5, 2023",frontMatter:{description:"Grove - 3-Axis Digitial Compass v2.0",title:"Grove - 3-Axis Digitial Compass v2.0",keywords:["Grove"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/Grove-3-Axis_Digitial_Compass_v2.0",last_update:{date:"1/5/2023",author:"shuxu hu"}},sidebar:"ProductSidebar",previous:{title:"Grove - 3-Axis Compass V1.0",permalink:"/Grove-3-Axis_Compass_V1.0"},next:{title:"Grove - 3-Axis Digital Accelerometer(\xb11.5g)",permalink:"/Grove-3-Axis_Digital_Accelerometer-1.5g"}},l={},p=[{value:"Features",id:"features",level:2},{value:"Specifications",id:"specifications",level:2},{value:"Platforms Supported",id:"platforms-supported",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"Play with Arduino",id:"play-with-arduino",level:3},{value:"Software",id:"software",level:4},{value:"Play With Raspberry Pi (With Grove Base Hat for Raspberry Pi)",id:"play-with-raspberry-pi-with-grove-base-hat-for-raspberry-pi",level:3},{value:"Hardware",id:"hardware",level:4},{value:"Software",id:"software-1",level:4},{value:"Schematic Online Viewer",id:"schematic-online-viewer",level:2},{value:"Resources",id:"resources",level:2},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],g=(m="B",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.yg)("div",e)});var m;const d={toc:p},u="wrapper";function y(e){let{components:t,...a}=e;return(0,r.yg)(u,(0,i.A)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Bazaar_doc/101020492/main_page.jpg",alt:"pir",width:600,height:"auto"})),(0,r.yg)("p",null,"The Grove - 3-Axis Digital Compass is a digital compass sensor based on Bosch BMM150. It allows measurement of the magnatic field in three perpendicular axes and the output can be read out over I2C and SPI interface, perfectly suitable for 3-Axis mobile applications."),(0,r.yg)("p",null,"This is the second generation of Grove - 3-Axis Digital Compass, comparing to the first version, this version can perfectly match the demanding requirements of all 3-Axis applications while the price is almost half of the first version, very cost effective."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/Grove-3-Axis-Digital-Compass-V2-p-3034.html"},(0,r.yg)("p",null,(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/common/Get_One_Now_Banner.png",alt:"pir",width:600,height:"auto"})))),(0,r.yg)("h2",{id:"features"},"Features"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"High resolution"),(0,r.yg)("li",{parentName:"ul"},"High heading accuracy"),(0,r.yg)("li",{parentName:"ul"},"Easy to use")),(0,r.yg)("h2",{id:"specifications"},"Specifications"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Item"),(0,r.yg)("th",{parentName:"tr",align:null},"Valnue"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Working Voltage"),(0,r.yg)("td",{parentName:"tr",align:null},"3.3V / 5V")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Magnetic field range typical"),(0,r.yg)("td",{parentName:"tr",align:null},"\xb11300\u03bcT(x, y-axis),  \xb12500\u03bcT(z-axis)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Magnetic field resolution"),(0,r.yg)("td",{parentName:"tr",align:null},"0.3\u03bcT")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Output Degree"),(0,r.yg)("td",{parentName:"tr",align:null},"0\xba ~ 360\xba")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Interface"),(0,r.yg)("td",{parentName:"tr",align:null},"I2C")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Working Temperature"),(0,r.yg)("td",{parentName:"tr",align:null},"-40\u2103 to +85 \u2103")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Dimensions"),(0,r.yg)("td",{parentName:"tr",align:null},"20mm x 20mm x 15mm")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"I2C Address"),(0,r.yg)("td",{parentName:"tr",align:null},"0x13")))),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"If you want to use multiplue I2C devices, please refer to [Software I2C](https://wiki.seeedstudio.com/Arduino_Software_I2C_user_guide/).\n"))),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"More details about Grove modules please refer to [Grove System](https://wiki.seeedstudio.com/Grove_System/)\n"))),(0,r.yg)("h2",{id:"platforms-supported"},"Platforms Supported"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Arduino"),(0,r.yg)("th",{parentName:"tr",align:null},"Raspberry Pi"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("p",null,(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/arduino_logo.jpg",alt:"pir",width:200,height:"auto"}))),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("p",null,(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/raspberry_pi_logo.jpg",alt:"pir",width:200,height:"auto"})))))),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"The platforms mentioned above as supported is/are an indication of the module's software or theoritical compatibility. We only provide software library or code examples for Arduino platform in most cases. It is not possible to provide software library / demo code for all possible MCU platforms. Hence, users have to write their own software library.\n"))),(0,r.yg)("h2",{id:"getting-started"},"Getting started"),(0,r.yg)("h3",{id:"play-with-arduino"},"Play with Arduino"),(0,r.yg)("p",null,"####\u3000Hardware"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 1.")," Prepare the below stuffs:")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Seeeduino V4.2"),(0,r.yg)("th",{parentName:"tr",align:null},"Base Shield"),(0,r.yg)("th",{parentName:"tr",align:null},"Grove-3-Axis_Digitial_Compass_v2.0"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("p",null,(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/seeeduino_v4.2.jpg",alt:"pir",width:600,height:"auto"}))),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("p",null,(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/base_shield.jpg",alt:"pir",width:600,height:"auto"}))),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("p",null,(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Grove-3-Axis_Digitial_Compass_v2.0/img/45d_small.jpg",alt:"pir",width:600,height:"auto"})))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Seeeduino-V4.2-p-2517.html"},"Get One Now")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Base-Shield-V2-p-1378.html"},"Get One Now")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-3-Axis-Digital-Compass-V2-p-3034.html"},"Get One Now"))))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 2.")," Connect Grove-3-Axis_Digitial_Compass_v2.0 to port ",(0,r.yg)("strong",{parentName:"p"},"I2C")," of Grove-Base Shield.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 3.")," Plug Grove - Base Shield into Seeeduino.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 4.")," Connect Seeeduino to PC via a USB cable."),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"\x3c!--link--\x3e\n")),(0,r.yg)("p",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Grove-3-Axis_Digitial_Compass_v2.0/img/with_ardu.jpg",alt:"pir",width:600,height:"auto"})))),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"    If we don't have Grove Base Shield, We also can directly connect this module to Seeeduino as below.\n"))),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Seeeduino_v4"),(0,r.yg)("th",{parentName:"tr",align:null},"Grove-3-Axis_Digitial_Compass_v2.0"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"5V"),(0,r.yg)("td",{parentName:"tr",align:null},"VCC")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"GND"),(0,r.yg)("td",{parentName:"tr",align:null},"GND")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"SDA"),(0,r.yg)("td",{parentName:"tr",align:null},"SDA")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"SCL"),(0,r.yg)("td",{parentName:"tr",align:null},"SCL")))),(0,r.yg)("div",{class:"admonition warning"},(0,r.yg)("p",{class:"admonition-title"},"Caution"),"Please plug the USB cable gently, otherwise you may damage the interface.Please use the USB cable with 4 wires inside, the 2 wires cable can't transfer data. If you are not sure about the wire you have, you can click ",(0,r.yg)("a",{href:"https://www.seeedstudio.com/Micro-USB-Cable-48cm-p-1475.html"},(0,r.yg)(g,{mdxType:"B"},"here"))," to buy"),(0,r.yg)("h4",{id:"software"},"Software"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step 1.")," Download the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Grove_3_Axis_Compass_V2.0_BMM150"},"library")," from Github."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step 2.")," Refer ",(0,r.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/How_to_install_Arduino_Library"},"How to install library")," to install library for Arduino."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step 3.")," Create a new Arduino sketch and paste the codes below to it or open the code directly by the path: ",(0,r.yg)("strong",{parentName:"p"},"File->Examples->Grove_3_Axis_Compass_V2.0_BMM150-master->compass")),(0,r.yg)("p",null,"Here is the code"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'/**\n * This example\n*/\n\n#include <Arduino.h>\n#include <Wire.h>\n// libraries\n#include "bmm150.h"\n#include "bmm150_defs.h"\n\nBMM150 bmm = BMM150();\n\nvoid setup()\n{\n  Serial.begin(9600);\n\n  if(bmm.initialize() == BMM150_E_ID_NOT_CONFORM) {\n    Serial.println("Chip ID can not read!");\n    while(1);\n  } else {\n    Serial.println("Initialize done!");\n  }\n\n}\n\nvoid loop()\n{\n  bmm150_mag_data value;\n  bmm.read_mag_data();\n\n  value.x = bmm.raw_mag_data.raw_datax;\n  value.y = bmm.raw_mag_data.raw_datay;\n  value.z = bmm.raw_mag_data.raw_dataz;\n\n  float xyHeading = atan2(value.x, value.y);\n  float zxHeading = atan2(value.z, value.x);\n  float heading = xyHeading;\n\n  if(heading < 0)\n    heading += 2*PI;\n  if(heading > 2*PI)\n    heading -= 2*PI;\n  float headingDegrees = heading * 180/M_PI;\n  float xyHeadingDegrees = xyHeading * 180 / M_PI;\n  float zxHeadingDegrees = zxHeading * 180 / M_PI;\n\n  Serial.print("Heading: ");\n  Serial.println(headingDegrees);\n\n  delay(100);\n}\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step 4.")," Upload the code. If you do not know how to upload the code, please check ",(0,r.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Upload_Code/"},"how to upload code"),"."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step 5.")," Open the serial monitor to receive the sensor's data"),(0,r.yg)("p",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Grove-3-Axis_Digitial_Compass_v2.0/img/ardu_serial.jpg",alt:"pir",width:600,height:"auto"})),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step 6.")," Within these 3 seconds\uff0c please tilt and rotate the compass back and forth on every axis, as shown in the picture below."),(0,r.yg)("p",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Grove-3-Axis_Digitial_Compass_v2.0/img/calibrate.jpg",alt:"pir",width:600,height:"auto"})),(0,r.yg)("p",null,"The calibration period time can be changed through the parameter timeout in the fuction ",(0,r.yg)("strong",{parentName:"p"},"calibrate(uint16_t timeout)"),"."),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"  The compass needs to be calibrated, otherwise you will get the inaccurate data! Please make sure you have done the Step 5.\n"))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step 7.")," Finally, you will see the something like the following picture."),(0,r.yg)("p",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Grove-3-Axis_Digitial_Compass_v2.0/img/ardu_serial2.jpg",alt:"pir",width:600,height:"auto"})),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"Heading value is in range of 0\xba ~ 360\xba, this value is for Y axis, 0\xba means Y axis points at North, 90\xba means Y axis points at West, 180\xba means Y axis points at South, 270\xba means Y points at East.\n"))),(0,r.yg)("p",null,"Enjoy your compass!"),(0,r.yg)("h3",{id:"play-with-raspberry-pi-with-grove-base-hat-for-raspberry-pi"},"Play With Raspberry Pi (With Grove Base Hat for Raspberry Pi)"),(0,r.yg)("h4",{id:"hardware"},"Hardware"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 1"),". Things used in this project:")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Raspberry pi"),(0,r.yg)("th",{parentName:"tr",align:null},"Grove Base Hat for RasPi"),(0,r.yg)("th",{parentName:"tr",align:null},"Grove - 3-axis compass"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("p",null,(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/rasp.jpg",alt:"pir",width:600,height:"auto"}))),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("p",null,(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Grove_Base_Hat_for_Raspberry_Pi/img/thumbnail.jpg",alt:"pir",width:600,height:"auto"}))),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("p",null,(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Grove-3-Axis_Digitial_Compass_v2.0/img/45d_small.jpg",alt:"pir",width:600,height:"auto"})))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Raspberry-Pi-3-Model-B-p-2625.html"},"Get ONE Now")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Base-Hat-for-Raspberry-Pi-p-3186.html"},"Get ONE Now")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-3-Axis-Digital-Compass-V2-p-3034.html"},"Get ONE Now"))))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 2"),". Plug the Grove Base Hat into Raspberry."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 3"),". Connect the 3-axis compass to I2C port of the Base Hat."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 4"),". Connect the Raspberry Pi to PC through USB cable.")),(0,r.yg)("p",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Grove-3-Axis_Compass_V1.0/img/Compass_Hat.jpg",alt:"pir",width:600,height:"auto"})),(0,r.yg)("h4",{id:"software-1"},"Software"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 1"),". Follow ",(0,r.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/Grove_Base_Hat_for_Raspberry_Pi/#installation"},"Setting Software")," to configure the development environment and install the grove.py to your raspberry pi.")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 2"),". Excute below commands to run the code.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"virtualenv -p python3 env\nsource env/bin/activate\n#enter commmand\ngrove_3_axis_compass_bmm150\n")),(0,r.yg)("p",null,"Following is the grove_3_axis_compass_bmm150.py code."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"from __future__ import print_function\nimport time\nimport bmm150\nimport math\n\n\ndef main():\n    device = bmm150.BMM150()  # Bus number will default to 1\n    while (1):\n        x, y, z = device.read_mag_data()\n\n        heading_rads = math.atan2(x, y)\n\n        heading_degrees = math.degrees(heading_rads)\n\n        print(\"Magnetometer x: {0:.2f}\".format(x), end=' ')\n        print(\" y: {0:.2f}\".format(y), end=' ')\n        print(\" z: {0:.2f}\".format(z), end=' ')\n        print(\" uT\")\n\n        print('heading(axis_Y point to): {0:.2f} degree'.format(heading_degrees))\n        time.sleep(.250)\n\nif __name__ == '__main__':\n    main()\n")),(0,r.yg)("admonition",{type:"success"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"If everything goes well, you will be able to see the following result\n"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"\npi@raspberrypi:~/grove.py/grove $ grove_3_axis_compass_bmm150\nMagnetometer x: -34.12  y: 36.71  z: -21.25  uT\nheading(axis_Y point to): 317.10 degree\nMagnetometer x: -34.49  y: 38.20  z: -16.32  uT\nheading(axis_Y point to): 317.92 degree\nMagnetometer x: -34.12  y: 38.20  z: -9.87  uT\nheading(axis_Y point to): 318.23 degree\nMagnetometer x: -32.64  y: 38.94  z: -5.69  uT\nheading(axis_Y point to): 320.03 degree\nMagnetometer x: -31.52  y: 38.20  z: -2.28  uT\nheading(axis_Y point to): 320.47 degree\nMagnetometer x: -29.67  y: 38.20  z: 0.38  uT\nheading(axis_Y point to): 322.16 degree\nMagnetometer x: -26.33  y: 38.20  z: 4.55  uT\nheading(axis_Y point to): 325.42 degree\n^CExiting\n\n\n")),(0,r.yg)("p",null,"You can quit this program by simply press ++ctrl+c++."),(0,r.yg)("h2",{id:"schematic-online-viewer"},"Schematic Online Viewer"),(0,r.yg)("div",{className:"altium-ecad-viewer","data-project-src":"https://files.seeedstudio.com/wiki/Grove-3-Axis_Digitial_Compass_v2.0/res/Eagle File.zip",style:{borderRadius:"0px 0px 4px 4px",height:500,borderStyle:"solid",borderWidth:1,borderColor:"rgb(241, 241, 241)",overflow:"hidden",maxWidth:1280,maxHeight:700,boxSizing:"border-box"}}),(0,r.yg)("h2",{id:"resources"},"Resources"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"[Library]"),"  ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Grove_3_Axis_Compass_V2.0_BMM150"},"Grove-3_Axis_Compass_V2.0 lib"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"[PDF]")," ",(0,r.yg)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove-3-Axis_Digitial_Compass_v2.0/res/Datasheet.pdf"},"BST-BMM150-Datasheet"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"[Zip]")," ","[Grove-3-Axis Digital Compass v2_Eagle File]","(",(0,r.yg)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove-3-Axis_Digitial_Compass_v2.0/res/Eagle"},"https://files.seeedstudio.com/wiki/Grove-3-Axis_Digitial_Compass_v2.0/res/Eagle")," File.zip)"))),(0,r.yg)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,r.yg)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,r.yg)("div",{class:"button_tech_support_container"},(0,r.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,r.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,r.yg)("div",{class:"button_tech_support_container"},(0,r.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,r.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}y.isMDXComponent=!0}}]);