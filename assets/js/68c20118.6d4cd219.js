"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[76624],{15680:(e,n,r)=>{r.d(n,{xA:()=>c,yg:()=>h});var t=r(96540);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=t.createContext({}),p=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},c=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(r),u=i,h=d["".concat(s,".").concat(u)]||d[u]||g[u]||a;return r?t.createElement(h,l(l({ref:n},c),{},{components:r})):t.createElement(h,l({ref:n},c))}));function h(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=u;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[d]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=r[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},71437:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var t=r(58168),i=(r(96540),r(15680));const a={description:"Wio Terminal Displaying Gyro",title:"Wio Terminal \u663e\u793a\u9640\u87ba\u4eea",keywords:["Wio_terminal Tutorial"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/Wio-Terminal-Displaying-Gyro",last_update:{date:"3/08/2024",author:"jessie"}},l="Wio Terminal Wio \u663e\u793a\u52a0\u901f\u5ea6\u8ba1\u8bfb\u6570",o={unversionedId:"zh-CN/Sensor/Wio_Terminal/Tutorial/CN-Wio-Terminal-Displaying-Gyro",id:"zh-CN/Sensor/Wio_Terminal/Tutorial/CN-Wio-Terminal-Displaying-Gyro",title:"Wio Terminal \u663e\u793a\u9640\u87ba\u4eea",description:"Wio Terminal Displaying Gyro",source:"@site/docs/zh-CN/Sensor/Wio_Terminal/Tutorial/CN-Wio-Terminal-Displaying-Gyro.md",sourceDirName:"zh-CN/Sensor/Wio_Terminal/Tutorial",slug:"/cn/Wio-Terminal-Displaying-Gyro",permalink:"/cn/Wio-Terminal-Displaying-Gyro",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Sensor/Wio_Terminal/Tutorial/CN-Wio-Terminal-Displaying-Gyro.md",tags:[],version:"current",lastUpdatedBy:"jessie",lastUpdatedAt:1709856e3,formattedLastUpdatedAt:"Mar 8, 2024",frontMatter:{description:"Wio Terminal Displaying Gyro",title:"Wio Terminal \u663e\u793a\u9640\u87ba\u4eea",keywords:["Wio_terminal Tutorial"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/Wio-Terminal-Displaying-Gyro",last_update:{date:"3/08/2024",author:"jessie"}},sidebar:"CNSidebar",previous:{title:"\u4f7f\u7528Wio Terminal\u8bfb\u53d6Raspberry Pi\u7684\u7cfb\u7edf\u72b6\u6001",permalink:"/cn/Wio-Terminal-Reading-Raspberry-Pi"},next:{title:"Wio Terminal \u5b58\u50a8\u6570\u636e",permalink:"/cn/Wio-Terminal-Storting-Analog-Data"}},s={},p=[{value:"\u6982\u8ff0",id:"\u6982\u8ff0",level:2},{value:"\u7279\u70b9",id:"\u7279\u70b9",level:3},{value:"Arduino \u6240\u9700\u7684\u5e93",id:"arduino-\u6240\u9700\u7684\u5e93",level:2},{value:"Arduino \u6307\u4ee4",id:"arduino-\u6307\u4ee4",level:2},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:2},{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:2}],c={toc:p},d="wrapper";function g(e){let{components:n,...r}=e;return(0,i.yg)(d,(0,t.A)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"wio-terminal-wio-\u663e\u793a\u52a0\u901f\u5ea6\u8ba1\u8bfb\u6570"},"Wio Terminal Wio \u663e\u793a\u52a0\u901f\u5ea6\u8ba1\u8bfb\u6570"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/Wio-Terminal/img/C0279.2019-11-28%2018_25_43.gif"})),(0,i.yg)("h2",{id:"\u6982\u8ff0"},"\u6982\u8ff0"),(0,i.yg)("p",null,"\u672c\u793a\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u5728 Wio Terminal\u4e0a\u7ed8\u5236\u7ebf\u56fe\u3002\u5728\u672c\u793a\u4f8b\u4e2d\uff0c\u5c06\u4e09\u8f74\u52a0\u901f\u5ea6\u8ba1\u8bfb\u6570\uff08\u4e09\u7ec4\u6570\u636e\uff09\u7ed8\u5236\u5230\u4e00\u4e2a\u7ebf\u56fe\u4e2d\uff0c\u4ee5\u663e\u793a Wio \u7ec8\u7aef\u7684\u5b9e\u65f6\u4f4d\u7f6e\uff01"),(0,i.yg)("h3",{id:"\u7279\u70b9"},"\u7279\u70b9"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"\u5728\u4e00\u4e2a\u7ebf\u56fe\u4e2d\u663e\u793a\u4e09\u8f74\u52a0\u901f\u5ea6\u8ba1\u8bfb\u6570")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Wio Terminal\u7684\u5b9e\u65f6\u5b9a\u4f4d"))),(0,i.yg)("h2",{id:"arduino-\u6240\u9700\u7684\u5e93"},"Arduino \u6240\u9700\u7684\u5e93"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"\u8bbf\u95ee ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Seeed_Arduino_Linechart"},"Seeed_Arduino_Linechart")," \u5e76\u5c06\u6574\u4e2a\u4ed3\u5e93\u4e0b\u8f7d\u5230\u672c\u5730\u9a71\u52a8\u5668\u3002")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"\u5b89\u88c5\u5185\u7f6e\u7684\u52a0\u901f\u5ea6\u8ba1\u5e93 ",(0,i.yg)("inlineCode",{parentName:"p"},"Seeed_Arduino_LIS3DHTR"),", \u8bf7\u8bbf\u95ee ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Seeed_Arduino_LIS3DHTR/tree/beta"},"Seeed_Arduino_LIS3DHTR"),"  \u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002"))),(0,i.yg)("h2",{id:"arduino-\u6307\u4ee4"},"Arduino \u6307\u4ee4"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"\u4e0b\u8f7d ",(0,i.yg)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Wio-Terminal/res/AcceleratorReadings.ino.zip"},(0,i.yg)("inlineCode",{parentName:"a"},"AcceratorReadings.ino"))," \u6587\u4ef6\u5e76\u901a\u8fc7 ",(0,i.yg)("inlineCode",{parentName:"p"},"Arduino IDE")," \u4e0a\u4f20\u5230 Wio Terminal\u3002\u786e\u4fdd\u60a8\u5df2\u5b89\u88c5\u6240\u6709\u5e93\u3002")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"\u5c06 Wio Terminal \u5728\u4e0d\u540c\u7684\u8f74\u4e0a\u79fb\u52a8\uff0c\u67e5\u770b\u5b83\u663e\u793a\u7684\u5185\u5bb9\uff0c\u60a8\u8fd8\u53ef\u4ee5\u6253\u5f00\u4e32\u884c\u56fe\u8868\u5de5\u5177\u4ee5\u68c0\u67e5\u6548\u679c\uff01"))),(0,i.yg)("h2",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"\u521d\u59cb\u5316 LCD \u548c\u52a0\u901f\u5ea6\u8ba1"))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'#include"LIS3DHTR.h" //include the accelerator library\n#include"seeed_line_chart.h" //include the line chart library\n\nTFT_eSPI tft;\nLIS3DHTR<TwoWire>  lis;\n\n#define MAX_SIZE 50 //maximum size of data\ndoubles accelerator_readings[3];\nTFT_eSprite spr = TFT_eSprite(&tft);  // Sprite\n\nvoid setup() {\n    tft.begin();\n    tft.setRotation(3);\n    spr.createSprite(TFT_HEIGHT,TFT_WIDTH);\n    spr.setRotation(3);\n\n    lis.begin(Wire1);\n    lis.setOutputDataRate(LIS3DHTR_DATARATE_25HZ);\n    lis.setFullScaleRange(LIS3DHTR_RANGE_2G);\n\n    Serial.begin(115200);\n}\n')),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"\u8bfb\u53d6\u52a0\u901f\u5ea6\u8ba1\u6570\u636e\u5e76\u52a0\u8f7d\u6570\u636e"))),(0,i.yg)("p",null,"\u8bf7\u53c2\u8003 ",(0,i.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Wio-Terminal-LCD-Linecharts/"},"Line Charts"),"  \u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"void loop() {\n    spr.fillSprite(TFT_WHITE);\n    float x_raw = lis.getAccelerationX();\n    float y_raw = lis.getAccelerationY();\n    float z_raw = lis.getAccelerationZ();\n    ...\n\n    if (accelerator_readings[0].size() == MAX_SIZE) {\n      for (uint8_t i = 0; i<3; i++){\n        accelerator_readings[i].pop(); //this is used to remove the first read variable\n      }\n    }\n\n    accelerator_readings[0].push(x_raw); //store x-axis readings\n    accelerator_readings[1].push(y_raw); //store y-axis readings\n    accelerator_readings[2].push(z_raw); //store z-axis readings\n    ...\n}\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"\u6807\u9898\u914d\u7f6e"))),(0,i.yg)("p",null,"\u8bf7\u53c2\u8003 ",(0,i.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Wio-Terminal-LCD-Linecharts/"},"Line Charts")," \u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'auto header =  text(0, 0)\n            .value("Accelerator Readings")\n            .align(center)\n            .valign(vcenter)\n            .width(spr.width())\n            .thickness(2);\n\nheader.height(header.font_height(&spr) * 2);\nheader.draw(&spr); // Header height is the twice the height of the font\n')),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"\u7ebf\u56fe\u914d\u7f6e"))),(0,i.yg)("p",null,"\u8981\u5728\u4e00\u4e2a\u56fe\u8868\u4e2d\u7ed8\u5236\u591a\u6761\u7ebf\uff0c\u60a8\u53ef\u4ee5\u5c06\u53cc\u7cbe\u5ea6\u6570\u7ec4\u4f20\u9012\u7ed9\u7ebf\u56fe\uff0c\u4f8b\u5982 ",(0,i.yg)("inlineCode",{parentName:"p"},"content.value({doubles[0],doubles[1],doubles[2]...})")," \u5982\u4e0b\u6240\u793a\u3002\u8fd8\u53ef\u4ee5\u4f7f\u7528 ",(0,i.yg)("inlineCode",{parentName:"p"},".color()")," \u4e3a\u6bcf\u6761\u7ebf\u8bbe\u7f6e\u989c\u8272\uff0c\u5176\u4e2d\u989c\u8272\u7684\u987a\u5e8f\u5c06\u4e0e\u6570\u636e\u4f20\u9012\u7684\u987a\u5e8f\u5339\u914d\u3002"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"auto content = line_chart(20, header.height()); //(x,ywhere the line graph begins\n     content\n            .height(spr.height() - header.height() * 1.5) //actual height of the line chart\n            .width(spr.width() - content.x() * 2) //actual width of the line chart\n            .based_on(-2.0) //Starting point of y-axis, must be a float\n            .show_circle(false) //drawing a cirle at each point, default is on.\n            .value({accelerator_readings[0],accelerator_readings[1], accelerator_readings[2]}) //passing through the data to line graph\n            .max_size(MAX_SIZE)          \n            .color(TFT_BLUE, TFT_RED, TFT_GREEN)\n            .backgroud(TFT_WHITE)\n            .draw(&spr);\n")),(0,i.yg)("h2",{id:"\u5b8c\u6574\u4ee3\u7801"},"\u5b8c\u6574\u4ee3\u7801"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'#include"LIS3DHTR.h" //include the accelerator library\n#include"seeed_line_chart.h" //include the line chart library\n\nTFT_eSPI tft;\nLIS3DHTR<TwoWire>  lis;\n\n#define MAX_SIZE 50 //maximum size of data\ndoubles accelerator_readings[3];\nTFT_eSprite spr = TFT_eSprite(&tft);  // Sprite\n\nvoid setup() {\n    tft.begin();\n    tft.setRotation(3);\n    spr.createSprite(TFT_HEIGHT,TFT_WIDTH);\n    spr.setRotation(3);\n\n    lis.begin(Wire1);\n    lis.setOutputDataRate(LIS3DHTR_DATARATE_25HZ);\n    lis.setFullScaleRange(LIS3DHTR_RANGE_2G);\n\n    Serial.begin(115200);\n}\n\nvoid loop() {\n    spr.fillSprite(TFT_WHITE);\n    float x_raw = lis.getAccelerationX();\n    float y_raw = lis.getAccelerationY();\n    float z_raw = lis.getAccelerationZ();\n\n    //This is used to print out on Serial Plotter, check Serial Plotter!\n    Serial.print(x_raw);\n    Serial.print(",");\n    Serial.print(y_raw);\n    Serial.print(",");\n    Serial.println(z_raw);\n\n    if (accelerator_readings[0].size() == MAX_SIZE) {\n      for (uint8_t i = 0; i<3; i++){\n        accelerator_readings[i].pop(); //this is used to remove the first read variable\n      }\n    }\n    accelerator_readings[0].push(x_raw); //read variables and store in data\n    accelerator_readings[1].push(y_raw);\n    accelerator_readings[2].push(z_raw);\n\n    //Settings for the line graph title\n    auto header =  text(0, 0)\n                .value("Accelerator Readings")\n                .align(center)\n                .valign(vcenter)\n                .width(spr.width())\n                .thickness(2);\n\n    header.height(header.font_height(&spr) * 2);\n    header.draw(&spr); // Header height is the twice the height of the font\n\n  //Settings for the line graph\n    auto content = line_chart(20, header.height()); //(x,y) where the line graph begins\n         content\n                .height(spr.height() - header.height() * 1.5) //actual height of the line chart\n                .width(spr.width() - content.x() * 2) //actual width of the line chart\n                .based_on(-2.0) //Starting point of y-axis, must be a float\n                .show_circle(false) //drawing a cirle at each point, default is on.\n                .value({accelerator_readings[0],accelerator_readings[1], accelerator_readings[2]}) //passing through the data to line graph\n                .max_size(MAX_SIZE)          \n                .color(TFT_BLUE, TFT_RED, TFT_GREEN)\n                .backgroud(TFT_WHITE)\n                .draw(&spr);\n\n    spr.pushSprite(0, 0);\n    delay(50);\n}\n')))}g.isMDXComponent=!0}}]);